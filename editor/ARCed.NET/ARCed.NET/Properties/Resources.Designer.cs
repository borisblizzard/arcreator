//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ARCed.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ARCed.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap Add {
            get {
                object obj = ResourceManager.GetObject("Add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Alpha {
            get {
                object obj = ResourceManager.GetObject("Alpha", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ARCedSplash {
            get {
                object obj = ResourceManager.GetObject("ARCedSplash", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Armor {
            get {
                object obj = ResourceManager.GetObject("Armor", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap AutoComplete {
            get {
                object obj = ResourceManager.GetObject("AutoComplete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Calculator {
            get {
                object obj = ResourceManager.GetObject("Calculator", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap CaretColor {
            get {
                object obj = ResourceManager.GetObject("CaretColor", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap CharMap {
            get {
                object obj = ResourceManager.GetObject("CharMap", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Chart {
            get {
                object obj = ResourceManager.GetObject("Chart", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Close {
            get {
                object obj = ResourceManager.GetObject("Close", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Color {
            get {
                object obj = ResourceManager.GetObject("Color", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Comment {
            get {
                object obj = ResourceManager.GetObject("Comment", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Copy {
            get {
                object obj = ResourceManager.GetObject("Copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Crop {
            get {
                object obj = ResourceManager.GetObject("Crop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Cut {
            get {
                object obj = ResourceManager.GetObject("Cut", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Database {
            get {
                object obj = ResourceManager.GetObject("Database", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Delete {
            get {
                object obj = ResourceManager.GetObject("Delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Down {
            get {
                object obj = ResourceManager.GetObject("Down", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Edit {
            get {
                object obj = ResourceManager.GetObject("Edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Enemy {
            get {
                object obj = ResourceManager.GetObject("Enemy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create the Scintilla direct message function..
        /// </summary>
        internal static string Exception_CannotCreateDirectFunction {
            get {
                return ResourceManager.GetString("Exception_CannotCreateDirectFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load the &apos;{0}&apos; module into memory..
        /// </summary>
        internal static string Exception_CannotLoadModule {
            get {
                return ResourceManager.GetString("Exception_CannotLoadModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; argument cannot be an empty string..
        /// </summary>
        internal static string Exception_EmptyStringArgument {
            get {
                return ResourceManager.GetString("Exception_EmptyStringArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration already finished..
        /// </summary>
        internal static string Exception_EnumeratorEnded {
            get {
                return ResourceManager.GetString("Exception_EnumeratorEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration has not started. Call MoveNext..
        /// </summary>
        internal static string Exception_EnumeratorNotStarted {
            get {
                return ResourceManager.GetString("Exception_EnumeratorNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross-thread operation not valid: Control &apos;{0}&apos; accessed from a thread other than the thread it was created on..
        /// </summary>
        internal static string Exception_IllegalCrossThreadCall {
            get {
                return ResourceManager.GetString("Exception_IllegalCrossThreadCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index was out of range. Must be non-negative and less than the size of the collection..
        /// </summary>
        internal static string Exception_IndexOutOfRange {
            get {
                return ResourceManager.GetString("Exception_IndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient space in the target location to copy the information..
        /// </summary>
        internal static string Exception_InsufficientSpace {
            get {
                return ResourceManager.GetString("Exception_InsufficientSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A change in the control who created this annotation has rendered the object invalid..
        /// </summary>
        internal static string Exception_InvalidAnnotation {
            get {
                return ResourceManager.GetString("Exception_InvalidAnnotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} line must specify a valid line within the document..
        /// </summary>
        internal static string Exception_InvalidLine {
            get {
                return ResourceManager.GetString("Exception_InvalidLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The start line and end line must specify a valid range..
        /// </summary>
        internal static string Exception_InvalidLineRange {
            get {
                return ResourceManager.GetString("Exception_InvalidLineRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid Scintilla module..
        /// </summary>
        internal static string Exception_InvalidModule {
            get {
                return ResourceManager.GetString("Exception_InvalidModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The start line must be greater than or equal to zero..
        /// </summary>
        internal static string Exception_InvalidStartLine {
            get {
                return ResourceManager.GetString("Exception_InvalidStartLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module name must be set before any Scintilla object are created..
        /// </summary>
        internal static string Exception_ModuleAlreadyLoaded {
            get {
                return ResourceManager.GetString("Exception_ModuleAlreadyLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; was out of range. Must be non-negative and less than {1}..
        /// </summary>
        internal static string Exception_MustBeNonNegativeAndLessThan {
            get {
                return ResourceManager.GetString("Exception_MustBeNonNegativeAndLessThan", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap FileOpen {
            get {
                object obj = ResourceManager.GetObject("FileOpen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Find1 {
            get {
                object obj = ResourceManager.GetObject("Find1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Find2 {
            get {
                object obj = ResourceManager.GetObject("Find2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Find3 {
            get {
                object obj = ResourceManager.GetObject("Find3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap FoldCollapse {
            get {
                object obj = ResourceManager.GetObject("FoldCollapse", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap FolderOpen {
            get {
                object obj = ResourceManager.GetObject("FolderOpen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap FoldExpand {
            get {
                object obj = ResourceManager.GetObject("FoldExpand", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Font {
            get {
                object obj = ResourceManager.GetObject("Font", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap GoTo {
            get {
                object obj = ResourceManager.GetObject("GoTo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Help {
            get {
                object obj = ResourceManager.GetObject("Help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Highlight {
            get {
                object obj = ResourceManager.GetObject("Highlight", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Indent {
            get {
                object obj = ResourceManager.GetObject("Indent", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Item {
            get {
                object obj = ResourceManager.GetObject("Item", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to x86/SciLexer.dll.
        /// </summary>
        internal static string ModuleName {
            get {
                return ResourceManager.GetString("ModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to x64/SciLexer64.dll.
        /// </summary>
        internal static string ModuleName64 {
            get {
                return ResourceManager.GetString("ModuleName64", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap NewDocument {
            get {
                object obj = ResourceManager.GetObject("NewDocument", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Next {
            get {
                object obj = ResourceManager.GetObject("Next", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap NextMessage {
            get {
                object obj = ResourceManager.GetObject("NextMessage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap NoteText {
            get {
                object obj = ResourceManager.GetObject("NoteText", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Outline {
            get {
                object obj = ResourceManager.GetObject("Outline", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Paste {
            get {
                object obj = ResourceManager.GetObject("Paste", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Pin {
            get {
                object obj = ResourceManager.GetObject("Pin", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Play {
            get {
                object obj = ResourceManager.GetObject("Play", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Previous {
            get {
                object obj = ResourceManager.GetObject("Previous", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap PreviousMessage {
            get {
                object obj = ResourceManager.GetObject("PreviousMessage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Project]
        ///Title={0}
        ///[Files]
        ///list=Actors|Classes|Skills|Items|Weapons|Armors|Enemies|Troops|States|Animations|Tilesets|CommonEvents|System|MapInfos.
        /// </summary>
        internal static string ProjectFile {
            get {
                return ResourceManager.GetString("ProjectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///module ARC
        ///
        ///	module Data
        ///	
        ///		HEADER = &quot;ARCD&quot;
        ///		VERSION = &quot;\x01\x00&quot; # 1.0
        ///		
        ///		TYPES = {
        ///			NilClass =&gt; 0x10.chr,
        ///			FalseClass =&gt; 0x11.chr,
        ///			TrueClass =&gt; 0x12.chr,
        ///			Fixnum =&gt; 0x21.chr,
        ///			Bignum =&gt; 0x22.chr,
        ///			Float =&gt; 0x23.chr,
        ///			String =&gt; 0x30.chr,
        ///			Array =&gt; 0x40.chr,
        ///			Hash =&gt; 0x41.chr,
        ///			Object =&gt; 0x00.chr
        ///		}
        ///		
        ///		UNBOUND_IDENTITY = Object.instance_method(:object_id)		
        ///		
        ///		@@io = nil
        ///		@@strings = [nil]
        ///		@@arrays = [nil]
        ///		@@hashes = [nil]
        ///		@@objects = [nil]
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RbARCDataDump {
            get {
                return ResourceManager.GetString("RbARCDataDump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to module ARC_EXTRA_INCLUDES
        ///  EXTRAS = [[&apos;Data/RMXP.rb&apos;, &quot;# this makes sure that Kernel#require and Kernel#load don&apos;t need (but still accept) a full path anymore\r\n$:.clear\r\n$:.push(Dir.getwd)\r\n\r\n# wrapper for RMXP&apos;s Win32API class\r\nclass Win32API\r\n  \r\n  def initialize(dllname, func, import, export = \&quot;0\&quot;, calltype = :stdcall)\r\n    import = import.join(&apos;&apos;) if import.is_a?(Array)\r\n    export = export.join(&apos;&apos;) if export.is_a?(Array)\r\n    import.upcase!\r\n    export.upcase!\r\n    @api = Wi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RbConversionExtras {
            get {
                return ResourceManager.GetString("RbConversionExtras", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to module RPG
        ///  class Actor
        ///    attr_accessor :id
        ///    attr_accessor :name
        ///    attr_accessor :class_id
        ///    attr_accessor :initial_level
        ///    attr_accessor :final_level
        ///    attr_accessor :exp_basis
        ///    attr_accessor :exp_inflation
        ///    attr_accessor :character_name
        ///    attr_accessor :character_hue
        ///    attr_accessor :battler_name
        ///    attr_accessor :battler_hue
        ///    attr_accessor :parameters
        ///    attr_accessor :weapon_id
        ///    attr_accessor :armor1_id
        ///    attr_accessor :armor2_id
        ///    attr_accessor :armo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RbRMXPInternal {
            get {
                return ResourceManager.GetString("RbRMXPInternal", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Redo {
            get {
                object obj = ResourceManager.GetObject("Redo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Replace {
            get {
                object obj = ResourceManager.GetObject("Replace", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ResourceLocal {
            get {
                object obj = ResourceManager.GetObject("ResourceLocal", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ResourceRTP {
            get {
                object obj = ResourceManager.GetObject("ResourceRTP", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RMXP {
            get {
                object obj = ResourceManager.GetObject("RMXP", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Ruby {
            get {
                object obj = ResourceManager.GetObject("Ruby", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN END __ENCODING__ __END__ __FILE__ __LINE__ alias and begin break case class def defined? do else elsif end ensure false for if in module next nil not or redo rescue retry return self super then true undef unless until when while yield.
        /// </summary>
        internal static string RubyKeywords {
            get {
                return ResourceManager.GetString("RubyKeywords", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Ruler {
            get {
                object obj = ResourceManager.GetObject("Ruler", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Save {
            get {
                object obj = ResourceManager.GetObject("Save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SaveAll {
            get {
                object obj = ResourceManager.GetObject("SaveAll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SaveTemplate {
            get {
                object obj = ResourceManager.GetObject("SaveTemplate", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Scintilla {
            get {
                object obj = ResourceManager.GetObject("Scintilla", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SelectAll {
            get {
                object obj = ResourceManager.GetObject("SelectAll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Settings {
            get {
                object obj = ResourceManager.GetObject("Settings", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Settings2 {
            get {
                object obj = ResourceManager.GetObject("Settings2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SevenZip {
            get {
                object obj = ResourceManager.GetObject("SevenZip", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Skill {
            get {
                object obj = ResourceManager.GetObject("Skill", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to !@#$%^&amp;*()-+={}[]:;&lt;&gt;.,?/\~`|&apos;&quot;.
        /// </summary>
        internal static string SuppressedChars {
            get {
                return ResourceManager.GetString("SuppressedChars", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Switch {
            get {
                object obj = ResourceManager.GetObject("Switch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Theme {
            get {
                object obj = ResourceManager.GetObject("Theme", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap TrueType {
            get {
                object obj = ResourceManager.GetObject("TrueType", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Undo {
            get {
                object obj = ResourceManager.GetObject("Undo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to else elsif rescue ensure when end ) ] }.
        /// </summary>
        internal static string UnIndentWords {
            get {
                return ResourceManager.GetString("UnIndentWords", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Up {
            get {
                object obj = ResourceManager.GetObject("Up", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Update {
            get {
                object obj = ResourceManager.GetObject("Update", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Variable {
            get {
                object obj = ResourceManager.GetObject("Variable", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Weapon {
            get {
                object obj = ResourceManager.GetObject("Weapon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
