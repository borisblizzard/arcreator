<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ARCed.Core</name>
    </assembly>
    <members>
        <member name="T:ARCed.Runtime">
            <summary>
            Static class containing flags indicating ARCed environment flags.
            </summary>
        </member>
        <member name="P:ARCed.Runtime.Debug">
            <summary>
            Flag indicating if ARCed.NET is being ran with Debug flag.
            </summary>
        </member>
        <member name="P:ARCed.Runtime.Portable">
            <summary>
            Flag indicating if ARCed.NET is being ran with Portable flag.
            </summary>
        </member>
        <member name="P:ARCed.Runtime.Legacy">
            <summary>
            Flag indicating if ARCed.NET is being ran with Legacy flag.
            </summary>
        </member>
        <member name="P:ARCed.Runtime.Logging">
            <summary>
            Flag indicating if ARCed.NET is being ran with Logging flag.
            </summary>
        </member>
        <member name="T:RPG.Actor">
            <summary>
            Data class for actors.
            </summary>
        </member>
        <member name="T:RPG.IRpgObject">
            <summary>
            Generic interface for database objects
            </summary>
        </member>
        <member name="P:RPG.IRpgObject.name">
            <summary>
            Gets or sets the name of the object.
            </summary>
        </member>
        <member name="P:RPG.IRpgObject.id">
            <summary>
            Gets or sets the ID of the object.
            </summary>
        </member>
        <member name="M:RPG.Actor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:RPG.Actor.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Actor.id">
            <summary>
            Actor id
            </summary>
        </member>
        <member name="P:RPG.Actor.name">
            <summary>
            Actor name
            </summary>
        </member>
        <member name="P:RPG.Actor.class_id">
            <summary>
            Actor class id
            </summary>
        </member>
        <member name="P:RPG.Actor.initial_level">
            <summary>
            Actor's initial level
            </summary>
        </member>
        <member name="P:RPG.Actor.final_level">
            <summary>
            Actor's final level
            </summary>
        </member>
        <member name="P:RPG.Actor.exp_basis">
            <summary>
            The value on which the experience curve is based (10..50).
            </summary>
        </member>
        <member name="P:RPG.Actor.exp_inflation">
            <summary>
            The amount of experience curve inflation (10..50).
            </summary>
        </member>
        <member name="P:RPG.Actor.character_name">
            <summary>
            The _actor's character graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Actor.character_hue">
            <summary>
            The adjustment value for the character graphic's hue (0..360).
            </summary>
        </member>
        <member name="P:RPG.Actor.battler_name">
            <summary>
            The _actor's battler graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Actor.battler_hue">
            <summary>
            The adjustment value for the battler graphic's hue (0..360).
            </summary>
        </member>
        <member name="P:RPG.Actor.parameters">
            <summary>
            2-dimensional array containing base parameters for each level.
            Generally takes the form parameters[kind, level].
            Kind indicates the parameter type (0: max HP, 1: max SP, 2: strength, 3: dexterity, 4: agility, 5: intelligence).
            </summary>
            <seealso cref="T:Table"/>
        </member>
        <member name="P:RPG.Actor.weapon_id">
            <summary>
            ID of the _actor's initially equipped weapon.
            </summary>
        </member>
        <member name="P:RPG.Actor.armor1_id">
            <summary>
            ID of the _actor's initially equipped shield.
            </summary>
        </member>
        <member name="P:RPG.Actor.armor2_id">
            <summary>
            ID of the _actor's initially equipped helmet.
            </summary>
        </member>
        <member name="P:RPG.Actor.armor3_id">
            <summary>
            ID of the _actor's initially equipped body armor.
            </summary>
        </member>
        <member name="P:RPG.Actor.armor4_id">
            <summary>
            ID of the _actor's initially equipped accessory.
            </summary>
        </member>
        <member name="P:RPG.Actor.weapon_fix">
            <summary>
            Flag making the _actor's weapon unremovable.
            </summary>
        </member>
        <member name="P:RPG.Actor.armor1_fix">
            <summary>
            Flag making the _actor's shield unremovable.
            </summary>
        </member>
        <member name="P:RPG.Actor.armor2_fix">
            <summary>
            Flag making the _actor's helmet unremovable.
            </summary>
        </member>
        <member name="P:RPG.Actor.armor3_fix">
            <summary>
            Flag making the _actor's body armor unremovable.
            </summary>
        </member>
        <member name="P:RPG.Actor.armor4_fix">
            <summary>
            Flag making the _actor's accessory unremovable.
            </summary>
        </member>
        <member name="T:ARCed.Core.Ini">
            <summary>
            Static class for reading/writing keys and values from an .ini file
            </summary>
        </member>
        <member name="M:ARCed.Core.Ini.Load(System.String)">
            <summary>
            Prepares the file to be read by the parser
            </summary>
            <param name="filename">The path to be parsed</param>
            <returns>Flag is file was successfully loaded</returns>
        </member>
        <member name="M:ARCed.Core.Ini.Write(System.String,System.String,System.String)">
            <summary>
            Writes a value to the .ini file
            </summary>
            <param name="section">The section of the .ini file</param>
            <param name="key">A key name in the .ini file</param>
            <param name="value">The value to write</param>
        </member>
        <member name="M:ARCed.Core.Ini.ReadString(System.String,System.String)">
            <summary>
            Returns a string value read from the file
            </summary>
            <param name="section">The section of the .ini file</param>
            <param name="key">A key name in the .ini file</param>
            <returns>The read value</returns>
        </member>
        <member name="M:ARCed.Core.Ini.ReadInteger(System.String,System.String)">
            <summary>
            Returns an integer value read from the file
            </summary>
            <param name="section">The section of the .ini file</param>
            <param name="key">A key name in the .ini file</param>
            <returns>A value converted to a integer</returns>
        </member>
        <member name="M:ARCed.Core.Ini.ReadFloat(System.String,System.String)">
            <summary>
            Returns a float value read from the file
            </summary>
            <param name="section">The section of the .ini file</param>
            <param name="key">A key name in the .ini file</param>
            <returns>A value converted to a float</returns>
        </member>
        <member name="M:ARCed.Core.Ini.ReadStringSplit(System.String,System.String,System.Char)">
            <summary>
            Returns an array of values from splitting a string
            </summary>
            <param name="section">The section of the .ini file</param>
            <param name="key">A key name in the .ini file</param>
            <param name="separator">The separator string used for splitting</param>
            <returns>An string array of read values</returns>
        </member>
        <member name="T:RPG.Armor">
            <summary>
            Data class for armor.
            </summary>
        </member>
        <member name="M:RPG.Armor.#ctor">
            <summary>
            Creates a new instance of an RPG.Armor.
            </summary>
        </member>
        <member name="M:RPG.Armor.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Armor.id">
            <summary>
            The armor ID.
            </summary>
        </member>
        <member name="P:RPG.Armor.name">
            <summary>
            The armor name.
            </summary>
        </member>
        <member name="P:RPG.Armor.icon_name">
            <summary>
            The armor's icon graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Armor.description">
            <summary>
            The armor description.
            </summary>
        </member>
        <member name="P:RPG.Armor.kind">
            <summary>
            Type of armor (0: shield, 1: helmet, 2: body armor, 3: accessory).
            </summary>
        </member>
        <member name="P:RPG.Armor.auto_state_id">
            <summary>
            The auto state ID.
            </summary>
        </member>
        <member name="P:RPG.Armor.price">
            <summary>
            The armor's price.
            </summary>
        </member>
        <member name="P:RPG.Armor.pdef">
            <summary>
            The armor's physical defense rating.
            </summary>
        </member>
        <member name="P:RPG.Armor.mdef">
            <summary>
            The armor's magic defense rating.
            </summary>
        </member>
        <member name="P:RPG.Armor.eva">
            <summary>
            The armor's evasion correction.
            </summary>
        </member>
        <member name="P:RPG.Armor.str_plus">
            <summary>
            The armor's strength bonus.
            </summary>
        </member>
        <member name="P:RPG.Armor.dex_plus">
            <summary>
            The armor's dexterity bonus.
            </summary>
        </member>
        <member name="P:RPG.Armor.agi_plus">
            <summary>
            The armor's agility bonus.
            </summary>
        </member>
        <member name="P:RPG.Armor.int_plus">
            <summary>
            The armor's intelligence bonus.
            </summary>
        </member>
        <member name="P:RPG.Armor.guard_element_set">
            <summary>
            The armor's elemental defense rating. An elemental ID collection.
            </summary>
        </member>
        <member name="P:RPG.Armor.guard_state_set">
            <summary>
            The armor's state defense rating. A state ID collection.
            </summary>
        </member>
        <member name="T:ARCed.Core.Win32.NativeMethods">
            <summary>
            Static class containing methods that utilize P/Invoke or other unmanaged libraries
            </summary>
        </member>
        <member name="M:ARCed.Core.Win32.NativeMethods.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            Writes a configuration value to an .ini file
            </summary>
            <param name="section">The section name</param>
            <param name="key">The key name</param>
            <param name="val">The value to write</param>
            <param name="filePath">The path to the file</param>
            <returns>Error code</returns>
        </member>
        <member name="M:ARCed.Core.Win32.NativeMethods.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            Reads a configuration value to an .ini file
            </summary>
            <param name="section">The section name</param>
            <param name="key">The key name</param>
            <param name="def">Default string if value cannot be found</param>
            <param name="retVal">The buffer to write the value to</param>
            <param name="size">The maximum buffer size</param>
            <param name="filePath">The path to the file</param>
            <returns>Error code</returns>
        </member>
        <member name="M:ARCed.Core.Win32.NativeMethods.LoadCursorFromFile(System.String)">
            <summary>
            Creates a cursor object and returns it
            </summary>
            <param name="str">The name of the resouce file</param>
            <returns>A handle to a cursor object</returns>
        </member>
        <member name="M:ARCed.Core.Win32.NativeMethods.SetForegroundWindow(System.IntPtr)">
            <summary>
            Sets the foreground window
            </summary>
            <param name="hWnd">A handle to a window</param>
            <returns>Flag if error occurred</returns>
        </member>
        <member name="M:ARCed.Core.Win32.NativeMethods.SetConsoleIcon(System.IntPtr)">
            <summary>
            Changes the icon of an attached console
            </summary>
            <param name="hIcon">A handle to an icon</param>
            <returns>Flag if error occurred</returns>
        </member>
        <member name="M:ARCed.Core.Win32.NativeMethods.GetShortPathName(System.String,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Obtains the short path form of a specified input path
            </summary>
            <param name="lpszLongPath">Points to a null-terminated path string. The function 
            obtains the short form of this path</param>
            <param name="lpszShortPath">Points to a buffer to receive the null-terminated 
            short form of the path specified by lpszLongPath</param>
            <param name="cchBuffer">The size of the buffer that lpszShortPath points to</param>
            <returns>Value is the length, in characters, of the string copied to lpszShortPath</returns>
        </member>
        <member name="M:ARCed.Core.Win32.NativeMethods.AllocConsole">
            <summary>
            Allocates a new console for the calling process
            </summary>
            <returns>Non-zero if successful, zero otherwise</returns>
        </member>
        <member name="T:ARCed.Core.ColorHandler">
            <summary>
            Handle conversions between RGB and HSV color spaces.
            </summary>
        </member>
        <member name="M:ARCed.Core.ColorHandler.HSVtoRGB(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts a HSV color values to an RGB color
            </summary>
            <param name="a">Alpha value</param>
            <param name="h">Hue value</param>
            <param name="s">Saturation value</param>
            <param name="v">Value value</param>
            <returns>RGB color equivalent</returns>
        </member>
        <member name="M:ARCed.Core.ColorHandler.HSVtoColor(ARCed.Core.ColorHandler.HSV)">
            <summary>
            Converts a HSV color to a System.Drawing.Color
            </summary>
            <param name="hsv">HSV color to convert</param>
            <returns>System.Drawing.Color equivalent</returns>
        </member>
        <member name="M:ARCed.Core.ColorHandler.HSVtoColor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts a HSV color values to a System.Drawing.Color.
            </summary>
            <param name="a">Alpha value</param>
            <param name="h">Hue value</param>
            <param name="s">Saturation value</param>
            <param name="v">Value value</param>
            <returns>System.Drawing.Color equivalent</returns>
        </member>
        <member name="M:ARCed.Core.ColorHandler.HSVtoRGB(ARCed.Core.ColorHandler.HSV)">
            <summary>
            Converts a HSV color values to an RGB color
            </summary>
            <param name="hsv">HSV color to convert</param>
            <returns>RGB color equivalent</returns>
        </member>
        <member name="M:ARCed.Core.ColorHandler.RGBtoHSV(ARCed.Core.ColorHandler.ARGB)">
            <summary>
            Converts an ARGB color to a HSV color.
            </summary>
            <param name="argb">ARGB color to convert</param>
            <returns>HSV color equivalent</returns>
        </member>
        <member name="T:ARCed.Core.ColorHandler.ARGB">
            <summary>
            Struct containing data for a color of the ARGB color space.
            </summary>
        </member>
        <member name="M:ARCed.Core.ColorHandler.ARGB.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Default constructor
            </summary>
            <param name="a">Alpha value</param>
            <param name="r">Red value</param>
            <param name="g">Green value</param>
            <param name="b">Blue value</param>
            <remarks>Values are clamped between 0 and 255</remarks>
        </member>
        <member name="M:ARCed.Core.ColorHandler.ARGB.ToString">
            <summary>
            Converts and returns the string representation of the object
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="P:ARCed.Core.ColorHandler.ARGB.Alpha">
            <summary>
            Gets or sets the alpha value
            </summary>
        </member>
        <member name="P:ARCed.Core.ColorHandler.ARGB.Red">
            <summary>
            Gets or sets the red value
            </summary>
        </member>
        <member name="P:ARCed.Core.ColorHandler.ARGB.Green">
            <summary>
            Gets or sets the green value
            </summary>
        </member>
        <member name="P:ARCed.Core.ColorHandler.ARGB.Blue">
            <summary>
            Gets or sets the blue value
            </summary>
        </member>
        <member name="T:ARCed.Core.ColorHandler.HSV">
            <summary>
            Struct containing data for a color of the HSV color space.
            </summary>
        </member>
        <member name="M:ARCed.Core.ColorHandler.HSV.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Default constructor
            </summary>
            <param name="a">Alpha value</param>
            <param name="h">Hue value</param>
            <param name="s">Saturation value</param>
            <param name="v">Value value</param>
        </member>
        <member name="M:ARCed.Core.ColorHandler.HSV.ToString">
            <summary>
            Converts and returns the string representation of the object
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="P:ARCed.Core.ColorHandler.HSV.Alpha">
            <summary>
            Gets or sets the alpha value
            </summary>
        </member>
        <member name="P:ARCed.Core.ColorHandler.HSV.Hue">
            <summary>
            Gets or sets the hue value
            </summary>
        </member>
        <member name="P:ARCed.Core.ColorHandler.HSV.Saturation">
            <summary>
            Gets or sets the saturation value
            </summary>
        </member>
        <member name="P:ARCed.Core.ColorHandler.HSV.Value">
            <summary>
            Gets or sets the value value
            </summary>
        </member>
        <member name="T:ARCed.Core.ColorChangedEventArgs">
            <summary>
            Arguments used when the color changes.
            </summary>
        </member>
        <member name="M:ARCed.Core.ColorChangedEventArgs.#ctor(ARCed.Core.ColorHandler.ARGB,ARCed.Core.ColorHandler.HSV)">
            <summary>
            Default constructor
            </summary>
            <param name="argb">ARGB color value</param>
            <param name="hsv">HSV color value</param>
        </member>
        <member name="P:ARCed.Core.ColorChangedEventArgs.ARGB">
            <summary>
            Gets the color value in the ARGB color space.
            </summary>
        </member>
        <member name="P:ARCed.Core.ColorChangedEventArgs.HSV">
            <summary>
            Gets the color value in the HSV color space.
            </summary>
        </member>
        <member name="T:RPG.MoveRoute">
            <summary>
            Data class for the move route (movement route).
            </summary>
        </member>
        <member name="M:RPG.MoveRoute.#ctor">
            <summary>
            Creates a new instance of an RPG.MoveRoute.
            </summary>
        </member>
        <member name="P:RPG.MoveRoute.repeat">
            <summary>
            Truth value of the [Repeat Action] option.
            </summary>
        </member>
        <member name="P:RPG.MoveRoute.skippable">
            <summary>
            Truth value of the [Ignore if Can't Move] option.
            </summary>
        </member>
        <member name="P:RPG.MoveRoute.list">
            <summary>
            Program contents. A collection of <see cref="T:RPG.MoveCommand"/> objects.
            </summary>
        </member>
        <member name="T:ARCed.Hash">
            <summary>
            Wrapper for standard Dictionary with dynamic key-value pairs
            </summary>
        </member>
        <member name="T:ARCed.TypeMap">
            <summary>
            Wrapper for a Dictionary containing name-type pairs
            </summary>
        </member>
        <member name="T:ARCed.ArcData">
            <summary>
            Static class for serialization of .arc format
            </summary>
        </member>
        <member name="M:ARCed.ArcData.Dump(System.IO.Stream,System.Object)">
            <summary>
            Serializes the given object and writes it to the stream
            </summary>
            <param name="stream">IO stream to write to</param>
            <param name="obj">Object to write</param>
        </member>
        <member name="M:ARCed.ArcData.Load(System.IO.Stream)">
            <summary>
            Loads an object from the stream
            </summary>
            <param name="stream">Stream to read</param>
            <returns>Deserialized object</returns>
        </member>
        <member name="M:ARCed.ArcData.Load(System.IO.Stream,System.Reflection.Assembly[])">
            <summary>
            Loads an object from the stream
            </summary>
            <param name="stream">Stream to read</param>
            <param name="assemblies">Assemblies that will be searched for known types</param>
            <returns>Deserialized object</returns>
        </member>
        <member name="M:ARCed.ArcData.Load(System.IO.Stream,ARCed.TypeMap)">
            <summary>
            Loads an object from the stream
            </summary>
            <param name="stream">Stream to read</param>
            <param name="assemblyTypes">Dictionary map for containing known types</param>
            <returns>Deserialized object</returns>
        </member>
        <member name="M:ARCed.ArcData.CheckHeader">
            <summary>
            Checks formatting of header and version data at the beginning of the stream
            </summary>
            <exception cref="T:System.IO.InvalidDataException">Thrown if header and version do not match proper format</exception>
        </member>
        <member name="M:ARCed.ArcData.Reset">
            <summary>
            Closes the stream if open, and clears all mappings
            </summary>
        </member>
        <member name="M:ARCed.ArcData._dump(System.Object)">
            <summary>
            Identifies the object type and dumps it to the stream accordingly
            </summary>
            <param name="obj">Object to serialize</param>
        </member>
        <member name="M:ARCed.ArcData._load">
            <summary>
            Reads the type identifying byte marker from the current stream position, and loads the data accordingly
            </summary>
            <returns>Deserialized object</returns>
        </member>
        <member name="M:ARCed.ArcData.IsRubyFixnum(System.Object)">
            <summary>
            Checks an object if it us a numerical type falling in range of a Ruby Fixnum
            </summary>
            <param name="value">Object to check</param>
            <returns>Flag if object is Fixnum or not</returns>
        </member>
        <member name="M:ARCed.ArcData.IsRubyBignum(System.Object)">
            <summary>
            Checks an object if it us a numerical type falling in range of a Ruby Bignum
            </summary>
            <param name="value">Object to check</param>
            <returns>Flag if object is Bignum or not</returns>
        </member>
        <member name="M:ARCed.ArcData.IsRubyFloat(System.Object)">
            <summary>
            Checks an object if it us a numerical type falling in range of a Ruby Float
            </summary>
            <param name="value">Object to check</param>
            <returns>Flag if object is Float or not</returns>
        </member>
        <member name="M:ARCed.ArcData.TryMapEquality(System.Collections.Generic.List{System.Object}@,System.Object)">
            <summary>
            Checks if object is already mapped using equality comparison, mapping object if not found
            </summary>
            <param name="data">Reference to a list of objects</param>
            <param name="obj">Object to map</param>
            <returns>Flag if object was mapped</returns>
            <remarks>If object is already mapped, the index it was found in is dumped instead of the
            the whole object</remarks>
        </member>
        <member name="M:ARCed.ArcData.TryMapIdentity(System.Collections.Generic.List{System.Object}@,System.Object)">
            <summary>
            Checks if object is already mapped using identity comparison, mapping object if not found
            </summary>
            <param name="data">Reference to a list of objects</param>
            <param name="obj">Object to map</param>
            <returns>Flag if object was mapped</returns>
            <remarks>If object is already mapped, the index it was found in is dumped instead of the
            the whole object</remarks>
        </member>
        <member name="M:ARCed.ArcData.GetMappedType(System.String)">
            <summary>
            Retrieves a <see cref="T:System.Type"/> that was previously mapped, or if not found, 
            finds the type and maps it.
            </summary>
            <param name="classPath">Path of the class</param>
            <returns>Object type</returns>
            <exception cref="T:System.TypeLoadException">Thrown when type cannot be found in the assembly</exception>
        </member>
        <member name="M:ARCed.ArcData.FindMapping(System.Collections.Generic.List{System.Object}@,System.Int32)">
            <summary>
            Retrieves the object with the given ID in the map, or null if not found
            </summary>
            <param name="list">Reference to the map to search</param>
            <param name="id">ID of the object</param>
            <returns>Object found with the given ID, or null if not found</returns>
        </member>
        <member name="M:ARCed.ArcData.MapObject(System.Collections.Generic.List{System.Object}@,System.Object)">
            <summary>
            Maps an object to the given list
            </summary>
            <param name="list">Reference to the map</param>
            <param name="obj">Object to map</param>
        </member>
        <member name="M:ARCed.ArcData.DumpInt32(System.Int32)">
            <summary>
            Converts an Int32 to a four-byte, little-endian array and writes it to the stream
            </summary>
            <param name="int32">Integer to dump</param>
        </member>
        <member name="M:ARCed.ArcData.LoadInt32">
            <summary>
            Loads a 32-bit integer from the stream
            </summary>
            <returns>Integer value</returns>
        </member>
        <member name="M:ARCed.ArcData.DumpNilClass">
            <summary>
            Writes a null-type to the stream
            </summary>
        </member>
        <member name="M:ARCed.ArcData.LoadNilClass">
            <summary>
            Returns null
            </summary>
            <returns>null</returns>
        </member>
        <member name="M:ARCed.ArcData.DumpFalseClass">
            <summary>
            Writes bool-type to the stream
            </summary>
        </member>
        <member name="M:ARCed.ArcData.LoadFalseClass">
            <summary>
            Returns false
            </summary>
            <returns>false</returns>
        </member>
        <member name="M:ARCed.ArcData.DumpTrueClass">
            <summary>
            Writes bool-type to the stram
            </summary>
        </member>
        <member name="M:ARCed.ArcData.LoadTrueClass">
            <summary>
            Returns true
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:ARCed.ArcData.DumpFixnum(System.Object)">
            <summary>
            Writes an object to the string as a Ruby Fixnum
            </summary>
            <param name="obj">Object to serialize</param>
        </member>
        <member name="M:ARCed.ArcData.LoadFixnum">
            <summary>
            Reads a number from the stream
            </summary>
            <returns>Integer value</returns>
        </member>
        <member name="M:ARCed.ArcData.DumpBignum(System.Object)">
            <summary>
            Writes an object to the string as a Ruby Bignum
            </summary>
            <param name="obj">Object to serialize</param>
        </member>
        <member name="M:ARCed.ArcData.LoadBignum">
            <summary>
            Reads a number from the stream
            </summary>
            <returns>Integer value</returns>
        </member>
        <member name="M:ARCed.ArcData.DumpFloat(System.Object)">
            <summary>
            Writes a floating point decimal to the stream
            </summary>
            <param name="obj">Object to serialize</param>
        </member>
        <member name="M:ARCed.ArcData.LoadFloat">
            <summary>
            Reads a floating point decimal from the stream
            </summary>
            <returns>Float value</returns>
        </member>
        <member name="M:ARCed.ArcData.DumpString(System.Object)">
            <summary>
            Writes a string to the stream
            </summary>
            <param name="obj">Object to serialize</param>
            <remarks>Strings are serialized in UTF-8 encoding</remarks>
        </member>
        <member name="M:ARCed.ArcData.LoadString">
            <summary>
            Reads a string from the stream
            </summary>
            <returns>String value</returns>
        </member>
        <member name="M:ARCed.ArcData.DumpArray(System.Object)">
            <summary>
            Writes an array-type to the stream
            </summary>
            <param name="obj">Object to serialize</param>
        </member>
        <member name="M:ARCed.ArcData.LoadArray">
            <summary>
            Reads an array from the stream
            </summary>
            <returns>Array value</returns>
        </member>
        <member name="M:ARCed.ArcData.DumpHash(System.Object)">
            <summary>
            Writes a dictionary-type to the stream
            </summary>
            <param name="obj">Object to serialize</param>
        </member>
        <member name="M:ARCed.ArcData.LoadHash">
            <summary>
            Reads a dictionary type from the stream
            </summary>
            <returns>Dictionary value</returns>
        </member>
        <member name="M:ARCed.ArcData.DumpObject(System.Object)">
            <summary>
            Writes an object to the stream
            </summary>
            <param name="obj">Object to serialize</param>
        </member>
        <member name="M:ARCed.ArcData.LoadObject">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ARCed.ArcData.RubyTypes">
            <summary>
            Enum representing flags for type-identifying byte markers 
            </summary>
        </member>
        <member name="F:ARCed.ArcData.RubyTypes.NilClass">
            <summary>
            Byte marker for NilClass value: 0x10 (16)
            </summary>
        </member>
        <member name="F:ARCed.ArcData.RubyTypes.FalseClass">
            <summary>
            Byte marker for FalseClass value: 0x11 (17)
            </summary>
        </member>
        <member name="F:ARCed.ArcData.RubyTypes.TrueClass">
            <summary>
            Byte marker for TrueClass value: 0x12 (18)
            </summary>
        </member>
        <member name="F:ARCed.ArcData.RubyTypes.Fixnum">
            <summary>
            Byte marker for Fixnum value: 0x21 (33)
            </summary>
        </member>
        <member name="F:ARCed.ArcData.RubyTypes.Bignum">
            <summary>
            Byte marker for Bignum value: 0x22 (34)
            </summary>
        </member>
        <member name="F:ARCed.ArcData.RubyTypes.Float">
            <summary>
            Byte marker for Float value: 0x23 (35)
            </summary>
        </member>
        <member name="F:ARCed.ArcData.RubyTypes.String">
            <summary>
            Byte marker for String value: 0x30 (48)
            </summary>
        </member>
        <member name="F:ARCed.ArcData.RubyTypes.Array">
            <summary>
            Byte marker for Array value: 0x40 (64)
            </summary>
        </member>
        <member name="F:ARCed.ArcData.RubyTypes.Hash">
            <summary>
            Byte marker for Hash value: 0x41 (65)
            </summary>
        </member>
        <member name="F:ARCed.ArcData.RubyTypes.Object">
            <summary>
            Byte marker for Object value: 0x00 (0)
            </summary>
        </member>
        <member name="T:RPG.CommonEvent">
            <summary>
            Data class for common events.
            </summary>
        </member>
        <member name="M:RPG.CommonEvent.#ctor">
            <summary>
            Creates a new instance of an RPG.CommonEvent.
            </summary>
        </member>
        <member name="M:RPG.CommonEvent.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.CommonEvent.id">
            <summary>
            The event ID.
            </summary>
        </member>
        <member name="P:RPG.CommonEvent.name">
            <summary>
            The event name.
            </summary>
        </member>
        <member name="P:RPG.CommonEvent.trigger">
            <summary>
            The event trigger (0: none, 1: autorun; 2: parallel).
            </summary>
        </member>
        <member name="P:RPG.CommonEvent.switch_id">
            <summary>
            The condition switch ID.
            </summary>
        </member>
        <member name="P:RPG.CommonEvent.list">
            <summary>
            List of event commands. A collection of <see cref="T:RPG.EventCommand"/> pbjects.
            </summary>
        </member>
        <member name="T:ARCed.Helpers.Ini">
            <summary>
            Static class for reading/writing .ini files.
            </summary>
        </member>
        <member name="M:ARCed.Helpers.Ini.Load(System.String)">
            <summary>
            Prepares the file to be read by the parser
            </summary>
            <param name="filename">The path to be parsed</param>
            <returns>Flag is file was successfully loaded</returns>
        </member>
        <member name="M:ARCed.Helpers.Ini.Write(System.String,System.String,System.String)">
            <summary>
            Writes a value to the .ini file
            </summary>
            <param name="section">The section of the .ini file</param>
            <param name="key">A key name in the .ini file</param>
            <param name="value">The value to write</param>
        </member>
        <member name="M:ARCed.Helpers.Ini.ReadString(System.String,System.String)">
            <summary>
            Returns a string value read from the file
            </summary>
            <param name="section">The section of the .ini file</param>
            <param name="key">A key name in the .ini file</param>
            <returns>The read value</returns>
        </member>
        <member name="M:ARCed.Helpers.Ini.ReadInteger(System.String,System.String)">
            <summary>
            Returns an integer value read from the file
            </summary>
            <param name="section">The section of the .ini file</param>
            <param name="key">A key name in the .ini file</param>
            <returns>A value converted to a integer</returns>
        </member>
        <member name="M:ARCed.Helpers.Ini.ReadFloat(System.String,System.String)">
            <summary>
            Returns a float value read from the file
            </summary>
            <param name="section">The section of the .ini file</param>
            <param name="key">A key name in the .ini file</param>
            <returns>A value converted to a float</returns>
        </member>
        <member name="M:ARCed.Helpers.Ini.ReadStringSplit(System.String,System.String,System.Char)">
            <summary>
            Returns an array of values from splitting a string
            </summary>
            <param name="section">The section of the .ini file</param>
            <param name="key">A key name in the .ini file</param>
            <param name="separator">The separator string used for splitting</param>
            <returns>An string array of read values</returns>
        </member>
        <member name="T:RPG.Enemy">
            <summary>
            Data class for enemies.
            </summary>
        </member>
        <member name="M:RPG.Enemy.#ctor">
            <summary>
            Creates a new instance of an RPG.Enemy.
            </summary>
        </member>
        <member name="M:RPG.Enemy.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Enemy.id">
            <summary>
            The enemy ID.
            </summary>
        </member>
        <member name="P:RPG.Enemy.name">
            <summary>
            The enemy name.
            </summary>
        </member>
        <member name="P:RPG.Enemy.battler_name">
            <summary>
            The enemy's battler graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Enemy.battler_hue">
            <summary>
            The adjustment value for the battler graphic's hue (0..360).
            </summary>
        </member>
        <member name="P:RPG.Enemy.maxhp">
            <summary>
            The enemy's max HP.
            </summary>
        </member>
        <member name="P:RPG.Enemy.maxsp">
            <summary>
            The enemy's max SP.
            </summary>
        </member>
        <member name="P:RPG.Enemy.str">
            <summary>
            The enemy's strength.
            </summary>
        </member>
        <member name="P:RPG.Enemy.dex">
            <summary>
            The enemy's dexterity.
            </summary>
        </member>
        <member name="P:RPG.Enemy.agi">
            <summary>
            The enemy's agility.
            </summary>
        </member>
        <member name="P:RPG.Enemy.int">
            <summary>
            The enemy's intelligence.
            </summary>
        </member>
        <member name="P:RPG.Enemy.atk">
            <summary>
            The enemy's attack power.
            </summary>
        </member>
        <member name="P:RPG.Enemy.pdef">
            <summary>
            The enemy's physical defense rating.
            </summary>
        </member>
        <member name="P:RPG.Enemy.mdef">
            <summary>
            The enemy's magic defense rating.
            </summary>
        </member>
        <member name="P:RPG.Enemy.eva">
            <summary>
            The enemy's evasion rating.
            </summary>
        </member>
        <member name="P:RPG.Enemy.animation1_id">
            <summary>
            The battle animation ID.
            </summary>
        </member>
        <member name="P:RPG.Enemy.animation2_id">
            <summary>
            The target animation ID.
            </summary>
        </member>
        <member name="P:RPG.Enemy.element_ranks">
            <summary>
            Level of elemental effectiveness. 
            1-dimensional <see cref="T:Table"/> using element IDs as subscripts, 
            with 6 levels (0: A, 1: B, 2: C, 3: D, 4: E, 5: F).
            </summary>
        </member>
        <member name="P:RPG.Enemy.state_ranks">
            <summary>
            Level of status effectiveness. 
            1-dimensional <see cref="T:Table"/> using status IDs as subscripts, 
            with 6 levels (0: A, 1: B, 2: C, 3: D, 4: E, 5: F).
            </summary>
        </member>
        <member name="P:RPG.Enemy.actions">
            <summary>
            The enemy's actions. A collection of <see cref="T:RPG.Enemy.Action"/> objects.
            </summary>
        </member>
        <member name="P:RPG.Enemy.exp">
            <summary>
            The enemy's experience.
            </summary>
        </member>
        <member name="P:RPG.Enemy.gold">
            <summary>
            The enemy's gold.
            </summary>
        </member>
        <member name="P:RPG.Enemy.item_id">
            <summary>
            The ID of the item used as treasure.
            </summary>
        </member>
        <member name="P:RPG.Enemy.weapon_id">
            <summary>
            The ID of the weapon used as treasure.
            </summary>
        </member>
        <member name="P:RPG.Enemy.armor_id">
            <summary>
            The ID of the armor used as treasure.
            </summary>
        </member>
        <member name="P:RPG.Enemy.treasure_prob">
            <summary>
            The probability of treasure being left behind.
            </summary>
        </member>
        <member name="T:RPG.Enemy.Action">
            <summary>
            Data class for enemy [Actions].
            </summary>
        </member>
        <member name="M:RPG.Enemy.Action.#ctor">
            <summary>
            Creates a new instance of an RPG.Enemy.Action.
            </summary>
        </member>
        <member name="P:RPG.Enemy.Action.kind">
            <summary>
            Type of action (0: basic, 1: skill).
            </summary>
        </member>
        <member name="P:RPG.Enemy.Action.basic">
            <summary>
            When set to a [Basic] action, defines it further 
            (0: attack, 1: defend, 2: escape, 3: do nothing).
            </summary>
        </member>
        <member name="P:RPG.Enemy.Action.skill_id">
            <summary>
            When set to a [Skill], the ID of that skill.
            </summary>
        </member>
        <member name="P:RPG.Enemy.Action.condition_turn_a">
            <summary>
            a and b values specified in the [Turn] condition. 
            To be input in the form a + bx.
            When the turn is not specified as a condition, a = 0 and b = 1.
            </summary>
        </member>
        <member name="P:RPG.Enemy.Action.condition_turn_b">
            <summary>
            a and b values specified in the [Turn] condition. 
            To be input in the form a + bx.
            When the turn is not specified as a condition, a = 0 and b = 1.
            </summary>
        </member>
        <member name="P:RPG.Enemy.Action.condition_hp">
            <summary>
            Percentage specified in the [HP] condition.
            When HP is not specified as a condition, this value is set to 100.
            </summary>
        </member>
        <member name="P:RPG.Enemy.Action.condition_level">
            <summary>
            Standard level specified in the [Level] condition.
            When the level is not specified as a condition, this value is set to 1.
            </summary>
        </member>
        <member name="P:RPG.Enemy.Action.condition_switch_id">
            <summary>
            Switch ID specified in the [Switch] condition.
            When the switch ID is not specified as a condition, this value is set to 0. 
            Consequently, it is essential to check whether this value is 0.
            </summary>
        </member>
        <member name="P:RPG.Enemy.Action.rating">
            <summary>
            The action's rating (1..10).
            </summary>
        </member>
        <member name="T:ARCed.Helpers.Util">
            <summary>
            Static class that provides functions that are shared across tha ARCed assemblies.
            </summary>
        </member>
        <member name="M:ARCed.Helpers.Util.GetTypesInNamespace(System.Reflection.Assembly,System.String)">
            <summary>
            Gets an array of all types found in the given namespace.
            </summary>
            <param name="assembly">Assembly to search for the namespace.</param>
            <param name="namespace">The namespace to search</param>
            <returns>Array of found types</returns>
        </member>
        <member name="M:ARCed.Helpers.Util.GenerateParameter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the parameter value of a curve at the given level
            </summary>
            <param name="min">The lowest value value at the starting point of the curve</param>
            <param name="max">The greatest value at the end of the curve</param>
            <param name="speed">The "pitch" of the curve</param>
            <param name="level">The level to calculate the value for (x coordinate)</param>
            <param name="initial">The initial level that the curve begins generation</param>
            <param name="final">The final level that the curve ends generation</param>
            <returns>The calculated value for the curve at the given level</returns>
        </member>
        <member name="M:ARCed.Helpers.Util.GetRandomBetween(System.Double,System.Double)">
            <summary>
            Gets a random number between two given values
            </summary>
            <param name="minimum">The minimum threshold</param>
            <param name="maximum">The maximum threshold</param>
            <returns>A randomly generated number</returns>
        </member>
        <member name="M:ARCed.Helpers.Util.ExtractResource(System.String,System.String)">
            <summary>
            Copies an embedded resource to an external place on the hard-drive
            </summary>
            <param name="resource">The name of the resource</param>
            <param name="path">The path the resource will be saved to</param>
        </member>
        <member name="M:ARCed.Helpers.Util.ValidateFilename(System.String,System.String)">
            <summary>
            Validates a string by replacing any illegal path characters
            </summary>
            <param name="name">The text of the path</param>
            <param name="replace">Replacement string for invalid characters</param>
            <returns>A santized string valid for a path</returns>
        </member>
        <member name="M:ARCed.Helpers.Util.ValidateTextBox(System.Windows.Forms.TextBox,System.String,System.Boolean)">
            <summary>
            Ensures that all characters in the textbox field are valid for a path
            </summary>
            <param name="textBox">The textbox to check</param>
            <param name="replace">Replacement string for invalid characters</param>
            <param name="beep">Flag to play system beep if invalid characters are found</param>
        </member>
        <member name="M:ARCed.Helpers.Util.CloneObject``1(``0)">
            <summary>
            Creates an deep clone of an object
            </summary>
            <typeparam name="T">The object type</typeparam>
            <param name="obj">The object to create an exact copy of</param>
            <returns>A deep clone of the object</returns>
        </member>
        <member name="M:ARCed.Helpers.Util.GetRandomNumber(System.Double,System.Double)">
            <summary>
            Generates and returns a random number within the specified range
            </summary>
            <param name="minimum">Minimum value of the number to return</param>
            <param name="maximum">Maximum value of the number to return</param>
            <returns>Random number</returns>
        </member>
        <member name="M:ARCed.Helpers.Util.SaveXML``1(System.String,``0)">
            <summary>
            Saves an object in XML format
            </summary>
            <typeparam name="T">Object type that will be saved</typeparam>
            <param name="path">Path to the file that will be written to</param>
            <param name="data">Object to save</param>
        </member>
        <member name="M:ARCed.Helpers.Util.LoadXML``1(System.String)">
            <summary>
            Loads an object previously saved in XML format
            </summary>
            <typeparam name="T">Object type that will be restored</typeparam>
            <param name="path">Path to the XML formatted file to load</param>
            <returns>Loaded object</returns>
        </member>
        <member name="M:ARCed.Helpers.Util.SaveBinary(System.String,System.Object)">
            <summary>
            Saves an object in binary format
            </summary>
            <param name="path">Path to the file that will be written to</param>
            <param name="data">Object to save</param>
        </member>
        <member name="M:ARCed.Helpers.Util.LoadBinary``1(System.String)">
            <summary>
            Loads an object previously saved in binary format
            </summary>
            <typeparam name="T">Object type that will be restored</typeparam>
            <param name="path">Path to the binary formatted file to load</param>
            <returns>Loaded object</returns>
        </member>
        <member name="P:ARCed.Helpers.Util.RpgTypes">
            <summary>
            Gets a mapping of all RPG types.
            </summary>
        </member>
        <member name="P:ARCed.Helpers.Util.ARCedAssembly">
            <summary>
            Gets the assembly instance of the editor
            </summary>
        </member>
        <member name="P:ARCed.Helpers.Util.ARCedCoreAssembly">
            <summary>
            Gets the assembly instance of the editor
            </summary>
        </member>
        <member name="P:ARCed.Helpers.Util.XnaAssembly">
            <summary>
            Gets the instance of the ARCed.Xna assembly.
            </summary>
        </member>
        <member name="T:RPG.State">
            <summary>
            Data class for state.
            </summary>
        </member>
        <member name="M:RPG.State.#ctor">
            <summary>
            Creates a new instance of an RPG.State.
            </summary>
        </member>
        <member name="M:RPG.State.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.State.id">
            <summary>
            State ID.
            </summary>
        </member>
        <member name="P:RPG.State.name">
            <summary>
            State name.
            </summary>
        </member>
        <member name="P:RPG.State.animation_id">
            <summary>
            The state's animation ID.
            </summary>
        </member>
        <member name="P:RPG.State.restriction">
            <summary>
            Sets restrictions 
            (0: none, 1: can't use magic, 2: always attack enemies, 3: always attack allies, 4: can't move).
            </summary>
        </member>
        <member name="P:RPG.State.nonresistance">
            <summary>
            Truth value of the [Nonresistance] option.
            </summary>
        </member>
        <member name="P:RPG.State.zero_hp">
            <summary>
            Truth value of the [Regard as HP 0] option.
            </summary>
        </member>
        <member name="P:RPG.State.cant_get_exp">
            <summary>
            Truth value of the [Can't Get EXP] option.
            </summary>
        </member>
        <member name="P:RPG.State.cant_evade">
            <summary>
            Truth value of the [Can't Evade] option.
            </summary>
        </member>
        <member name="P:RPG.State.slip_damage">
            <summary>
            Truth value of the [Slip Damage] option.
            </summary>
        </member>
        <member name="P:RPG.State.rating">
            <summary>
            State rating (0..10).
            </summary>
        </member>
        <member name="P:RPG.State.hit_rate">
            <summary>
            Hit percentage.
            </summary>
        </member>
        <member name="P:RPG.State.maxhp_rate">
            <summary>
            Maximum HP percentage.
            </summary>
        </member>
        <member name="P:RPG.State.maxsp_rate">
            <summary>
            Maximum SP percentage.
            </summary>
        </member>
        <member name="P:RPG.State.str_rate">
            <summary>
            Strength percentage.
            </summary>
        </member>
        <member name="P:RPG.State.dex_rate">
            <summary>
            Dexterity percentage.
            </summary>
        </member>
        <member name="P:RPG.State.agi_rate">
            <summary>
            Agility percentage.
            </summary>
        </member>
        <member name="P:RPG.State.int_rate">
            <summary>
            Intelligence percentage.
            </summary>
        </member>
        <member name="P:RPG.State.atk_rate">
            <summary>
            Attack percentage.
            </summary>
        </member>
        <member name="P:RPG.State.pdef_rate">
            <summary>
            Physical defense percentage.
            </summary>
        </member>
        <member name="P:RPG.State.mdef_rate">
            <summary>
            Magic defense percentage.
            </summary>
        </member>
        <member name="P:RPG.State.eva">
            <summary>
            Evasion correction.
            </summary>
        </member>
        <member name="P:RPG.State.battle_only">
            <summary>
            Truth value of whether the state wears off at battle end.
            </summary>
        </member>
        <member name="P:RPG.State.hold_turn">
            <summary>
            Minumum number of turns before state has chance of releasing.
            </summary>
        </member>
        <member name="P:RPG.State.auto_release_prob">
            <summary>
            Percent probability of wearing off after the number of turns in hold_turn have passed.
            </summary>
        </member>
        <member name="P:RPG.State.shock_release_prob">
            <summary>
            Percent probability of wearing off after receiving physical damage.
            </summary>
        </member>
        <member name="P:RPG.State.guard_element_set">
            <summary>
            Elemental defense. An Elemental ID collection.
            </summary>
        </member>
        <member name="P:RPG.State.plus_state_set">
            <summary>
            States to add. A State ID collection.
            </summary>
        </member>
        <member name="P:RPG.State.minus_state_set">
            <summary>
            States to cancel. A State ID collection.
            </summary>
        </member>
        <member name="T:RPG.MapInfo">
            <summary>
            Data class for map information.
            </summary>
        </member>
        <member name="M:RPG.MapInfo.#ctor">
            <summary>
            Creates a new instance of an RPG.MapInfo.
            </summary>
        </member>
        <member name="P:RPG.MapInfo.name">
            <summary>
            The map name.
            </summary>
        </member>
        <member name="P:RPG.MapInfo.parent_id">
            <summary>
            The parent map ID.
            </summary>
        </member>
        <member name="P:RPG.MapInfo.order">
            <summary>
            The map tree display order, used internally.
            </summary>
        </member>
        <member name="P:RPG.MapInfo.expanded">
            <summary>
            The map tree expansion flag, used internally.
            </summary>
        </member>
        <member name="P:RPG.MapInfo.scroll_x">
            <summary>
            The X-axis scroll position, used internally.
            </summary>
        </member>
        <member name="P:RPG.MapInfo.scroll_y">
            <summary>
            The Y-axis scroll position, used internally.
            </summary>
        </member>
        <member name="T:RPG.EventCommand">
            <summary>
            Data class for the Event command.
            </summary>
        </member>
        <member name="M:RPG.EventCommand.#ctor">
            <summary>
            Creates a new instance of an RPG.EventCommand.
            </summary>
        </member>
        <member name="M:RPG.EventCommand.#ctor(System.Int32)">
            <summary>
            Creates a new instance of an RPG.EventCommand.
            </summary>
            <param name="code">The event code.</param>
        </member>
        <member name="M:RPG.EventCommand.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of an RPG.EventCommand.
            </summary>
            <param name="code">The event code.</param>
            <param name="indent">The indent depth.</param>
        </member>
        <member name="M:RPG.EventCommand.#ctor(System.Int32,System.Int32,System.Collections.Generic.List{System.Object})">
            <summary>
            Creates a new instance of an RPG.EventCommand.
            </summary>
            <param name="code">The event code.</param>
            <param name="indent">The indent depth.</param>
            <param name="parameters">Command arguments.</param>
        </member>
        <member name="P:RPG.EventCommand.code">
            <summary>
            The event code.
            </summary>
        </member>
        <member name="P:RPG.EventCommand.indent">
            <summary>
            The indent depth. 
            Usually 0; the [Conditional Branch] command, among others, 
            adds 1 with every step deeper.
            </summary>
        </member>
        <member name="P:RPG.EventCommand.parameters">
            <summary>
            Collection containing the Move command arguments. 
            The contents vary for each command.
            </summary>
        </member>
        <member name="T:Table">
            <summary>
            The multidimensional array class. 
            Each element takes up 2 signed bytes (<see langword="short"/>), ranging from -32,768 to 32,767.
            </summary>
        </member>
        <member name="M:Table.#ctor">
            <summary>
            Creates a Table object. Specifies the size of each dimension in the multidimensional array. 
            1-, 2-, and 3-dimensional arrays are possible. Arrays with no parameters are also permitted.
            </summary>
        </member>
        <member name="M:Table.#ctor(System.Int32)">
            <summary>
            Creates a Table object. Specifies the size of each dimension in the multidimensional array. 
            1-, 2-, and 3-dimensional arrays are possible. Arrays with no parameters are also permitted.
            </summary>
            <param name="xSize">The size of the Table on the X-axis.</param>
        </member>
        <member name="M:Table.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a Table object. Specifies the size of each dimension in the multidimensional array. 
            1-, 2-, and 3-dimensional arrays are possible. Arrays with no parameters are also permitted.
            </summary>
            <param name="xSize">The size of the Table on the X-axis.</param>
            <param name="ySize">The size of the Table on the Y-axis.</param>
        </member>
        <member name="M:Table.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a Table object. Specifies the size of each dimension in the multidimensional array. 
            1-, 2-, and 3-dimensional arrays are possible. Arrays with no parameters are also permitted.
            </summary>
            <param name="xSize">The size of the Table on the X-axis.</param>
            <param name="ySize">The size of the Table on the Y-axis.</param>
            <param name="zSize">The size of the Table on the Z-axis.</param>
        </member>
        <member name="M:Table.resize(System.Int32)">
            <summary>
            Resizes the table to the specified dimensions
            </summary>
            <param name="xSize">Size of the Table on the x-axis</param>
        </member>
        <member name="M:Table.resize(System.Int32,System.Int32)">
            <summary>
            Resizes the table to the specified dimensions
            </summary>
            <param name="xSize">Size of the Table on the x-axis</param>
            <param name="ySize">Size of the Table on the y-axis</param>
        </member>
        <member name="M:Table.resize(System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes the table to the specified dimensions
            </summary>
            <param name="xSize">Size of the Table on the x-axis</param>
            <param name="ySize">Size of the Table on the y-axis</param>
            <param name="zSize">Size of the Table on the z-axis</param>
        </member>
        <member name="M:Table._arc_dump">
            <summary>
            Serializes and dumps the <see cref="T:Table"/> object in ARC format.
            </summary>
            <returns>An <see langword="byte"/> array containing the serialized data.</returns>
        </member>
        <member name="M:Table._arc_load(System.Byte[])">
            <summary>
            Deserializes and loads a <see cref="T:Table"/> object saved in ARC format.
            </summary>
            <param name="bytes">A <see langword="byte"/> array containing the serialized data.</param>
            <returns>The deserialized <see cref="T:Table"/> object.</returns>
        </member>
        <member name="P:Table.Item(System.Int32)">
            <summary>
            Accesses the array's elements. Pulls the same number of arguments as 
            there are dimensions in the created array. Returns nil if the specified 
            element does not exist.
            </summary>
            <param name="x">Index on the x-axis</param>
            <returns>Value at the specified position</returns>
        </member>
        <member name="P:Table.Item(System.Int32,System.Int32)">
            <summary>
            Accesses the array's elements. Pulls the same number of arguments as 
            there are dimensions in the created array. Returns nil if the specified 
            element does not exist.
            </summary>
            <param name="x">Index on the x-axis</param>
            <param name="y">Index on the y-axis</param>
            <returns>Value at the specified position</returns>
        </member>
        <member name="P:Table.Item(System.Int32,System.Int32,System.Int32)">
            <summary>
            Accesses the array's elements. Pulls the same number of arguments as 
            there are dimensions in the created array. Returns nil if the specified 
            element does not exist.
            </summary>
            <param name="x">Index on the x-axis</param>
            <param name="y">Index on the y-axis</param>
            <param name="z">Index on the z-axis</param>
            <returns>Value at the specified position</returns>
        </member>
        <member name="P:Table.xsize">
            <summary>
            Gets the size of the Table on the x-axis
            </summary>
        </member>
        <member name="P:Table.ysize">
            <summary>
            Gets the size of the Table on the y-axis
            </summary>
        </member>
        <member name="P:Table.zsize">
            <summary>
            Gets the size of the Table on the z-axis
            </summary>
        </member>
        <member name="T:RPG.Class">
            <summary>
            Data class for class.
            </summary>
        </member>
        <member name="M:RPG.Class.#ctor">
            <summary>
            Creates a new instance of an RPG.Class.
            </summary>
        </member>
        <member name="M:RPG.Class.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Class.id">
            <summary>
            The class's ID.
            </summary>
        </member>
        <member name="P:RPG.Class.name">
            <summary>
            The class name.
            </summary>
        </member>
        <member name="P:RPG.Class.position">
            <summary>
            The class position (0: front, 1: middle, 2: rear).
            </summary>
        </member>
        <member name="P:RPG.Class.weapon_set">
            <summary>
            Collection containing IDs for equippable weapons.
            </summary>
        </member>
        <member name="P:RPG.Class.armor_set">
            <summary>
            Collection containing IDs for equippable armor.
            </summary>
        </member>
        <member name="P:RPG.Class.element_ranks">
            <summary>
            Level of elemental effectiveness. 
            1-dimensional <see cref="T:Table"/> using element IDs as subscripts, 
            with 6 levels (0: A, 1: B, 2: C, 3: D, 4: E, 5: F).
            </summary>
        </member>
        <member name="P:RPG.Class.state_ranks">
            <summary>
            Level of status effectiveness. 
            1-dimensional <see cref="T:Table"/> using status IDs as subscripts, 
            with 6 levels (0: A, 1: B, 2: C, 3: D, 4: E, 5: F).
            </summary>
        </member>
        <member name="P:RPG.Class.learnings">
            <summary>
            Skills to Learn. A collection of <see cref="T:RPG.Class.Learning"/> objects.
            </summary>
        </member>
        <member name="T:RPG.Class.Learning">
            <summary>
            Data class for a [Class's Learned] skills.
            </summary>
        </member>
        <member name="M:RPG.Class.Learning.#ctor">
            <summary>
            Creates a new instance of an RPG.Class.Learning.
            </summary>
        </member>
        <member name="P:RPG.Class.Learning.level">
            <summary>
            Skill level.
            </summary>
        </member>
        <member name="P:RPG.Class.Learning.skill_id">
            <summary>
            The learned skill's ID.
            </summary>
        </member>
        <member name="T:ARCed.ARCedException">
            <summary>
            Generic exception used for ARCed related errors.
            </summary>
        </member>
        <member name="M:ARCed.ARCedException.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:ARCed.ArcSerializationException">
            <summary>
            Generic exception used for ARCed serialization errors. 
            </summary>
        </member>
        <member name="M:ARCed.ArcSerializationException.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:ARCed.Helpers.FileAssociator">
            <summary>
            Static class used for associated ARCed file types with the program and respective icons.
            </summary>
        </member>
        <member name="M:ARCed.Helpers.FileAssociator.Associate(System.String,System.String,System.String,System.String)">
            <summary>
            Associate file extension with progID, description, icon and application
            </summary>
            <param name="extension">Extension to associate</param>
            <param name="description">Description of file type</param>
            <param name="icon">Path to icon to set for the file type</param>
            <param name="application">Path to icon to associate with this file type</param>
        </member>
        <member name="M:ARCed.Helpers.FileAssociator.IsAssociated(System.String)">
            <summary>
            Return true if extension already associated in registry
            </summary>
            <param name="extension">Extension to check</param>
            <returns>Flag if extension is already associated or not</returns>
        </member>
        <member name="M:ARCed.Helpers.FileAssociator.ToShortPathName(System.String)">
            <summary>
            Return short path format of a file name
            </summary>
            <param name="longName">Long name of file</param>
            <returns>Short name of file</returns>
        </member>
        <member name="T:ARCed.Helpers.Cache">
            <summary>
            Static class for loading graphic resources and caching them to increase performance. This class 
            class also performs hue and opacity alterations on graphics.
            </summary>
        </member>
        <member name="F:ARCed.Helpers.Cache._cache">
            <summary>
            The internal dictionary that contains all the cached images
            </summary>
        </member>
        <member name="F:ARCed.Helpers.Cache.currentTilesetName">
            <summary>
            The cached _srcTexture of the currently loaded tileset graphic
            </summary>
        </member>
        <member name="F:ARCed.Helpers.Cache.currentTilesetBitmap">
            <summary>
            The name of the currently loaded tileset graphic
            </summary>
        </member>
        <member name="F:ARCed.Helpers.Cache.AUTOINDEX">
            <summary>
            The index to reference for building autotile graphics
            </summary>
        </member>
        <member name="M:ARCed.Helpers.Cache.LoadBitmap(System.String,System.String)">
            <summary>
            Loads a filename as a Image from the specified folder, or recalls
            a cached image, and returns it.
            </summary>
            <param name="folder">Folder specifying where the image will be searched</param>
            <param name="filename">FullPath of the image, omitting extension</param>
            <returns>Cached image</returns>
        </member>
        <member name="M:ARCed.Helpers.Cache.ChangeHueOpacity(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Rotates the hue and alters the opacity of an image. Using this
            method is more efficient than performing the actions seperately.
            </summary>
            <param name="image">Image to change</param>
            <param name="hue">Degree of hue displacement (0..360)</param>
            <param name="opacity">Opacity change to apply (0..255)</param>
            <remarks>Values out of range will be automatically corrected</remarks>
        </member>
        <member name="M:ARCed.Helpers.Cache.RotateHue(System.Drawing.Image,System.Int32)">
            <summary>
            Rotates the hue of an image
            </summary>
            <param name="image">Image to change</param>
            <param name="hue">Degree of hue displacement (0..360)</param>
            <remarks>Values out of range will be automatically corrected</remarks>
        </member>
        <member name="M:ARCed.Helpers.Cache.ChangeOpacity(System.Drawing.Image,System.Int32)">
            <summary>
            Changes the opacity of an image. 
            </summary>
            <param name="image">Image to change</param>
            <param name="opacity">Opacity change to apply (0..255)</param>
            <remarks>Values out of range will be automatically corrected</remarks>
        </member>
        <member name="M:ARCed.Helpers.Cache.Autotile(System.String,System.Int32,System.Int32)">
            <summary>
            Loads/recalls a cached image autotile file and returns it
            </summary>
            <param name="filename">Full path of the autotile graphic</param>
            <param name="hue">Hue rotation to apply to graphic, with 360 degrees of displacment</param>
            <param name="opacity">Opacity of the returned _srcTexture</param>
            <returns>Cached image with effects applied</returns>
        </member>
        <member name="M:ARCed.Helpers.Cache.Icon(System.String,System.Int32,System.Int32)">
            <summary>
            Loads/recalls a cached image icon file and returns it
            </summary>
            <param name="filename">Full path of the icon graphic</param>
            <param name="hue">Hue rotation to apply to graphic, with 360 degrees of displacment</param>
            <param name="opacity">Opacity of the returned _srcTexture</param>
            <returns>Cached image with effects applied</returns>
        </member>
        <member name="M:ARCed.Helpers.Cache.Character(System.String,System.Int32,System.Int32)">
            <summary>
            Loads/recalls a cached character file and returns it
            </summary>
            <param name="filename">Full path of the character graphic</param>
            <param name="hue">Hue rotation to apply to graphic, with 360 degrees of displacment</param>
            <param name="opacity">Opacity of the returned _srcTexture</param>
            <returns>Cached image with effects applied</returns>
        </member>
        <member name="M:ARCed.Helpers.Cache.Tileset(System.String,System.Int32,System.Int32)">
            <summary>
            Loads/recalls a cached tileset file and returns it
            </summary>
            <param name="filename">Relative path of the tileset graphic</param>
            <param name="hue">Hue rotation to apply to graphic, with 360 degrees of displacment</param>
            <param name="opacity">Opacity of the returned _srcTexture</param>
            <returns>Cached image with effects applied</returns>
        </member>
        <member name="M:ARCed.Helpers.Cache.Animation(System.String,System.Int32,System.Int32)">
            <summary>
            Loads/recalls a cached animation file and returns it
            </summary>
            <param name="filename">Relative path of the animation graphic</param>
            <param name="hue">Hue rotation to apply to graphic, with 360 degrees of displacment</param>
            <param name="opacity">Opacity of the returned _srcTexture</param>
            <returns>Cached image with effects applied</returns>
        </member>
        <member name="M:ARCed.Helpers.Cache.Fog(System.String,System.Int32,System.Int32)">
            <summary>
            Loads/recalls a cached fog file and returns it
            </summary>
            <param name="filename">Full path of the fog graphic</param>
            <param name="hue">Hue rotation to apply to graphic, with 360 degrees of displacment</param>
            <param name="opacity">Opacity of the returned _srcTexture</param>
            <returns>Cached image with effects applied</returns>
        </member>
        <member name="M:ARCed.Helpers.Cache.Panorama(System.String,System.Int32,System.Int32)">
            <summary>
            Loads/recalls a cached panorama file and returns it
            </summary>
            <param name="filename">Full path of the panorama graphic</param>
            <param name="hue">Hue rotation to apply to graphic, with 360 degrees of displacment</param>
            <param name="opacity">Opacity of the returned _srcTexture</param>
            <returns>Cached image with effects applied</returns>
        </member>
        <member name="M:ARCed.Helpers.Cache.Battleback(System.String,System.Int32,System.Int32)">
            <summary>
            Loads/recalls a cached battleback file and returns it
            </summary>
            <param name="filename">Full path of the battleback graphic</param>
            <param name="hue">Hue rotation to apply to graphic, with 360 degrees of displacment</param>
            <param name="opacity">Opacity of the returned image</param>
            <returns>Cached image with effects applied</returns>
        </member>
        <member name="M:ARCed.Helpers.Cache.CharacterStance(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a tile of a character graphic using the given pattern and direction
            </summary>
            <param name="filename">FullPath of the character graphic</param>
            <param name="pattern">Pattern of the character tile</param>
            <param name="direction">Direction of the character tile</param>
            <param name="hue">Hue rotation to apply to graphic, with 360 degrees of displacment</param>
            <param name="opacity">Opacity of the returned _srcTexture</param>
            <returns>Cached _srcTexture with effects applied</returns>
        </member>
        <member name="M:ARCed.Helpers.Cache.Battler(System.String,System.Int32,System.Int32)">
            <summary>
            Loads/recalls a cached image battler file and returns it
            </summary>
            <param name="filename">FullPath of the character graphic</param>
            <param name="hue">Hue rotation to apply to graphic, with 360 degrees of displacment</param>
            <param name="opacity">Opacity of the returned _srcTexture</param>
            <returns>Cached image with effects applied</returns>
        </member>
        <member name="T:ARCed.Core.ColorWheel">
            <summary>
            Color wheel for getting a user-selected color
            </summary>
        </member>
        <member name="F:ARCed.Core.ColorWheel.ColorChanged">
            <summary>
            Handler for color change events
            </summary>
        </member>
        <member name="M:ARCed.Core.ColorWheel.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Default constructor
            </summary>
            <param name="colorRectangle">Rectangle for the color wheel image</param>
            <param name="brightnessRectangle">Rectangle for the brightness control</param>
            <param name="selectedColorRectangle">Rectangle for the selected color control</param>
        </member>
        <member name="M:ARCed.Core.ColorWheel.SetMouseUp">
            <summary>
            Sets the mouse state to MouseState.MouseUp
            </summary>
        </member>
        <member name="M:ARCed.Core.ColorWheel.Draw(System.Drawing.Graphics,ARCed.Core.ColorHandler.HSV)">
            <summary>
            Draws the images
            </summary>
            <param name="g">Graphics context to draw with</param>
            <param name="hsv">HSV color to draw</param>
        </member>
        <member name="M:ARCed.Core.ColorWheel.Draw(System.Drawing.Graphics,ARCed.Core.ColorHandler.ARGB)">
            <summary>
            Draws the images
            </summary>
            <param name="g">Graphics context to draw with</param>
            <param name="argb">ARGB color to draw</param>
        </member>
        <member name="M:ARCed.Core.ColorWheel.Draw(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the images
            </summary>
            <param name="g">Graphics context to draw with</param>
            <param name="mousePoint">MousePoint to draw</param>
        </member>
        <member name="P:ARCed.Core.ColorWheel.Color">
            <summary>
            Gets the selected color
            </summary>
        </member>
        <member name="T:ARCed.Core.ColorWheel.ColorChangedEventHandler">
            <summary>
            Handler for color changing events
            </summary>
            <param name="sender">Delegate invoker</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:ARCed.Core.ColorWheel.MouseState">
            <summary>
            Enum for tracking current mouse state
            </summary>
        </member>
        <member name="F:ARCed.Core.ColorWheel.MouseState.MouseUp">
            <summary>
            Mouse up state
            </summary>
        </member>
        <member name="F:ARCed.Core.ColorWheel.MouseState.ClickOnColor">
            <summary>
            Mouse click on color state
            </summary>
        </member>
        <member name="F:ARCed.Core.ColorWheel.MouseState.DragInColor">
            <summary>
            Mouse drag in color state
            </summary>
        </member>
        <member name="F:ARCed.Core.ColorWheel.MouseState.ClickOnBrightness">
            <summary>
            Mouse click on brightness state
            </summary>
        </member>
        <member name="F:ARCed.Core.ColorWheel.MouseState.DragInBrightness">
            <summary>
            Mouse drag in brightness state
            </summary>
        </member>
        <member name="F:ARCed.Core.ColorWheel.MouseState.ClickOutsideRegion">
            <summary>
            Mouse click outside region state
            </summary>
        </member>
        <member name="F:ARCed.Core.ColorWheel.MouseState.DragOutsideRegion">
            <summary>
            Mouse drag outside region state.
            </summary>
        </member>
        <member name="T:RPG.Tileset">
            <summary>
            Data class for tilesets.
            </summary>
        </member>
        <member name="M:RPG.Tileset.#ctor">
            <summary>
            Creates a new instance of an RPG.Tileset.
            </summary>
        </member>
        <member name="M:RPG.Tileset.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Tileset.id">
            <summary>
            The tileset ID.
            </summary>
        </member>
        <member name="P:RPG.Tileset.name">
            <summary>
            The tileset name.
            </summary>
        </member>
        <member name="P:RPG.Tileset.tileset_name">
            <summary>
            The tileset's graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Tileset.autotile_names">
            <summary>
            The autotile graphic's file name array ([0]..[6]).
            </summary>
        </member>
        <member name="P:RPG.Tileset.panorama_name">
            <summary>
            The panorama graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Tileset.panorama_hue">
            <summary>
            The adjustment value for the panorama graphic's hue (0..360).
            </summary>
        </member>
        <member name="P:RPG.Tileset.fog_name">
            <summary>
            The fog graphic's file name.
            </summary>
        </member>
        <member name="P:RPG.Tileset.fog_hue">
            <summary>
            The adjustment value for the fog graphic's hue (0..360).
            </summary>
        </member>
        <member name="P:RPG.Tileset.fog_opacity">
            <summary>
            The fog's opacity.
            </summary>
        </member>
        <member name="P:RPG.Tileset.fog_blend_type">
            <summary>
            The fog's blending mode.
            </summary>
        </member>
        <member name="P:RPG.Tileset.fog_zoom">
            <summary>
            The fog's zoom level.
            </summary>
        </member>
        <member name="P:RPG.Tileset.fog_sx">
            <summary>
            The fog's SX (automatic X-axis scrolling speed).
            </summary>
        </member>
        <member name="P:RPG.Tileset.fog_sy">
            <summary>
            The fog's SY (automatic Y-axis scrolling speed).
            </summary>
        </member>
        <member name="P:RPG.Tileset.battleback_name">
            <summary>
            The battle background's graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Tileset.passages">
            <summary>
            Passage table. A 1-dimensional <see cref="T:Table"/> containing passage flags, Bush flags, and counter flags.
            The tile ID is used as a subscript. 
            Each bit is handled as follows:
                0x01: Cannot move down. 
                0x02: Cannot move left. 
                0x04: Cannot move right. 
                0x08: Cannot move up. 
                0x40: Bush flag. 
                0x80: Counter flag. 
            </summary>
        </member>
        <member name="P:RPG.Tileset.priorities">
            <summary>
            Priority table. A 1-dimensional <see cref="T:Table"/> containing priority data.
            The tile ID is used as a subscript.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:RPG.Tileset.terrain_tags" -->
        <member name="T:RPG.AudioFile">
            <summary>
            Data class for audio files. Common to all formats (BGM, BGS, ME, SE). 
            </summary>
        </member>
        <member name="M:RPG.AudioFile.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of an RPG.AudioFile.
            </summary>
            <param name="name">Name of the sound file.</param>
            <param name="volume">The sound's volume.</param>
            <param name="pitch">The sound's pitch.</param>
        </member>
        <member name="M:RPG.AudioFile.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.AudioFile.name">
            <summary>
            The sound file name.
            </summary>
        </member>
        <member name="P:RPG.AudioFile.volume">
            <summary>
            The sound's volume (0..100). 
            The default values are 100 for BGM and ME and 80 for BGS and SE.
            </summary>
        </member>
        <member name="P:RPG.AudioFile.pitch">
            <summary>
            The sound's pitch (50..150). 
            The default value is 100.
            </summary>
        </member>
        <member name="T:ARCed.GameData">
            <summary>
            Container for holding all game data used by the editor and engine
            </summary>
        </member>
        <member name="P:ARCed.GameData.Actors">
            <summary>
            List of RPG.Actor objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.Animations">
            <summary>
            List of RPG.Animation objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.Armors">
            <summary>
            List of RPG.Armor objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.Classes">
            <summary>
            List of RPG.Class objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.CommonEvents">
            <summary>
            List of RPG.CommonEvent objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.Enemies">
            <summary>
            List of RPG.Enemy objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.Items">
            <summary>
            List of RPG.Item objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.MapInfos">
            <summary>
            List of RPG.MapInfo objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.Skills">
            <summary>
            List of RPG.Skills objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.States">
            <summary>
            List of RPG.State objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.System">
            <summary>
            RPG.System object.
            </summary>
        </member>
        <member name="P:ARCed.GameData.Tilesets">
            <summary>
            List of RPG.Tileset objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.Troops">
            <summary>
            List of RPG.Troop objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.Weapons">
            <summary>
            List of RPG.Weapon objects. First element is null.
            </summary>
        </member>
        <member name="P:ARCed.GameData.Maps">
            <summary>
            Dictionary whose key is the map ID and value is an RPG.Map object.
            </summary>
        </member>
        <member name="T:ARCed.Core.SerializableFont">
            <summary>
            Class that handles conversions to/from a serializable string to a <see cref="T:System.Drawing.Font"/> object.
            </summary>
        </member>
        <member name="M:ARCed.Core.SerializableFont.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ARCed.Core.SerializableFont.#ctor(System.Drawing.Font)">
            <summary>
            Constructor specifying <seealso cref="T:System.Drawing.Font"/> to create object from. 
            </summary>
            <param name="font"></param>
        </member>
        <member name="M:ARCed.Core.SerializableFont.op_Implicit(ARCed.Core.SerializableFont)~System.Drawing.Font">
            <summary>
            Implicit cast from a <see cref="T:ARCed.Core.SerializableFont"/> to a <see cref="T:System.Drawing.Font"/>.
            </summary>
            <param name="serializeableFont">SerializableFont to cast from.</param>
            <returns>Font representation of the object.</returns>
        </member>
        <member name="M:ARCed.Core.SerializableFont.op_Implicit(System.Drawing.Font)~ARCed.Core.SerializableFont">
            <summary>
            Implicit cast from a <see cref="T:System.Drawing.Font"/> to a <see cref="T:ARCed.Core.SerializableFont"/>.
            </summary>
            <param name="font">Font to cast from.</param>
            <returns>Font representation of the object.</returns>
        </member>
        <member name="P:ARCed.Core.SerializableFont.FontValue">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Font"/> object associated with object.
            </summary>
        </member>
        <member name="P:ARCed.Core.SerializableFont.SerializeFontAttribute">
            <summary>
            Gets or sets the <see langword="string"/> attribute of the <see cref="T:System.Drawing.Font"/> that will 
            be serialized.
            </summary>
        </member>
        <member name="T:ARCed.Core.FontXmlConverter">
            <summary>
            Static class that handles conversion of XML serialized Fonts to/from <see cref="T:System.Drawing.Font"/> objects.
            </summary>
        </member>
        <member name="M:ARCed.Core.FontXmlConverter.ConvertToString(System.Drawing.Font)">
            <summary>
            Converts a <see cref="T:System.Drawing.Font"/> to a <see cref="T:System.String"/>
            </summary>
            <param name="font">Font to convert</param>
            <returns>String representation of the font.</returns>
        </member>
        <member name="M:ARCed.Core.FontXmlConverter.ConvertToFont(System.String)">
            <summary>
            Converts a <see cref="T:System.String"/> to a <see cref="T:System.Drawing.Font"/> object.
            </summary>
            <param name="fontString">String to convert</param>
            <returns>Font representation of the string.</returns>
        </member>
        <member name="T:RPG.Tone">
            <summary>
            The color tone class. Each component is handled with a <see langword="float"/> value.
            </summary>
        </member>
        <member name="M:RPG.Tone.#ctor">
            <summary>
            Creates a Tone object with all values initialized as 0.0.
            </summary>
        </member>
        <member name="M:RPG.Tone.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a Tone object. If gray is omitted, it is assumed at 0.
            </summary>
            <param name="red">The red value (-255-255)</param>
            <param name="green">The green value (-255-255)</param>
            <param name="blue">The blue value (-255-255)</param>
            <param name="gray">The gray value (0-255)</param>
        </member>
        <member name="M:RPG.Tone.set(System.Single,System.Single,System.Single)">
            <summary>
            Sets all components at once. Gray remains the same.
            </summary>
            <param name="red">The red value (-255-255)</param>
            <param name="green">The green value (-255-255)</param>
            <param name="blue">The blue value (-255-255)</param>
        </member>
        <member name="M:RPG.Tone.set(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets all components at once. 
            </summary>
            <param name="red">The red value (-255-255)</param>
            <param name="green">The green value (-255-255)</param>
            <param name="blue">The blue value (-255-255)</param>
            <param name="gray">The gray value (0-255)</param>
        </member>
        <member name="M:RPG.Tone.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Tone.red">
            <summary>
            The red value (-255-255). Values out of range are automatically corrected.
            </summary>
        </member>
        <member name="P:RPG.Tone.green">
            <summary>
            The green value (-255-255). Values out of range are automatically corrected.
            </summary>
        </member>
        <member name="P:RPG.Tone.blue">
            <summary>
            The blue value (-255-255). Values out of range are automatically corrected.
            </summary>
        </member>
        <member name="P:RPG.Tone.gray">
            <summary>
            The gray value (0-255). Values out of range are automatically corrected.
            </summary>
        </member>
        <member name="T:RPG.Skill">
            <summary>
            Data class for skills.
            </summary>
        </member>
        <member name="M:RPG.Skill.#ctor">
            <summary>
            Creates a new instance of an RPG.Skill.
            </summary>
        </member>
        <member name="M:RPG.Skill.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Skill.id">
            <summary>
            The skill ID.
            </summary>
        </member>
        <member name="P:RPG.Skill.name">
            <summary>
            The skill name.
            </summary>
        </member>
        <member name="P:RPG.Skill.icon_name">
            <summary>
            The skill's icon graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Skill.description">
            <summary>
            The skill description.
            </summary>
        </member>
        <member name="P:RPG.Skill.scope">
            <summary>
            Scope of the skill's effects 
            (0: none, 1: one enemy, 2: all enemies, 3: one ally, 4: all allies, 5: 1 ally--HP 0, 6: all allies--HP 0, 7: the user).
            </summary>
        </member>
        <member name="P:RPG.Skill.occasion">
            <summary>
            When the skill may be used 
            (0: always, 1: only in battle, 2: only from the menu, 3: never).
            </summary>
        </member>
        <member name="P:RPG.Skill.animation1_id">
            <summary>
            The animation ID when using the skill.
            </summary>
        </member>
        <member name="P:RPG.Skill.animation2_id">
            <summary>
            The animation ID when on the receiving end of the skill.
            </summary>
        </member>
        <member name="P:RPG.Skill.menu_se">
            <summary>
            SE played when skill is used on the menu screen (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.Skill.common_event_id">
            <summary>
            The Common Event ID.
            </summary>
        </member>
        <member name="P:RPG.Skill.sp_cost">
            <summary>
            Number of SP consumed.
            </summary>
        </member>
        <member name="P:RPG.Skill.power">
            <summary>
            The skill's power.
            </summary>
        </member>
        <member name="P:RPG.Skill.atk_f">
            <summary>
            The skill's attack power F rating.
            </summary>
        </member>
        <member name="P:RPG.Skill.eva_f">
            <summary>
            The skill's evasion F rating.
            </summary>
        </member>
        <member name="P:RPG.Skill.str_f">
            <summary>
            The skill's strength F rating.
            </summary>
        </member>
        <member name="P:RPG.Skill.dex_f">
            <summary>
            The skill's dexterity F rating.
            </summary>
        </member>
        <member name="P:RPG.Skill.agi_f">
            <summary>
            The skill's agility F rating.
            </summary>
        </member>
        <member name="P:RPG.Skill.int_f">
            <summary>
            The skill's intelligence F rating.
            </summary>
        </member>
        <member name="P:RPG.Skill.hit">
            <summary>
            The skill's hit probability.
            </summary>
        </member>
        <member name="P:RPG.Skill.pdef_f">
            <summary>
            The skill's physical defense F rating.
            </summary>
        </member>
        <member name="P:RPG.Skill.mdef_f">
            <summary>
            The skill's magic defense F rating.
            </summary>
        </member>
        <member name="P:RPG.Skill.variance">
            <summary>
            The skill's degree of variance.
            </summary>
        </member>
        <member name="P:RPG.Skill.element_set">
            <summary>
            The skill's element. An Elemental ID collection.
            </summary>
        </member>
        <member name="P:RPG.Skill.plus_state_set">
            <summary>
            States to add. A State ID collection.
            </summary>
        </member>
        <member name="P:RPG.Skill.minus_state_set">
            <summary>
            States to cancel. A State ID collection.
            </summary>
        </member>
        <member name="T:ARCed.Core.QColorMatrix">
            <summary>
            Extension of the GDI+ struct ColorMatrix.
            </summary>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.#ctor(System.Single[0:,0:])">
            <summary>
            Constructor specifying matrix data
            </summary>
            <param name="matrixData">Matrix data to initialize with</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.#ctor(System.Single[][])">
            <summary>
            Constructor specifying matrix data
            </summary>
            <param name="matrixData">Matrix data to initialize with</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.#ctor(ARCed.Core.QColorMatrix)">
            <summary>
            Constructor specifying matrix data
            </summary>
            <param name="matrixData">Matrix data to initialize with</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.#ctor(System.Drawing.Imaging.ColorMatrix)">
            <summary>
            Constructor specifying matrix data
            </summary>
            <param name="colorMatrix">Matrix data to initialize with</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.FromJaggedMatrix(System.Single[][])">
            <summary>
            Returns the given matrix data as a jagged matrix
            </summary>
            <param name="matrixData">Matrix data</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ToJaggedMatrix">
            <summary>
            Converts the matrix to a jagged array of data
            </summary>
            <returns>Jagged array</returns>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.FromColorMatrix(System.Drawing.Imaging.ColorMatrix)">
            <summary>
            Translates the matrix from a <seealso cref="T:System.Drawing.Imaging.ColorMatrix"/>.
            </summary>
            <param name="colorMatrix">ColorMatrix to translate from</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ToColorMatrix">
            <summary>
            Converts the matrix to a <seealso cref="T:System.Drawing.Imaging.ColorMatrix"/> and returns it.
            </summary>
            <returns>ColorMatrix representation</returns>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.Reset">
            <summary>
            Set to identity matrix
            </summary>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.TransformVector(System.Single[])">
            <summary>
            Multiply the vector v by the matrix in place. 
            v points to an array of at least four values,
            representing R, G, B and A.
            </summary>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.Color2Vector(System.Drawing.Color)">
            <summary>
            Converts a <seealso cref="T:System.Drawing.Color"/> object to a vector and returns it.
            </summary>
            <param name="color">Color to convert</param>
            <returns>Vector representation of the color</returns>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.Vector2Color(System.Single[])">
            <summary>
            Converts a vector array to a <seealso cref="T:System.Drawing.Color"/> object.
            </summary>
            <param name="vector">Floar array vector</param>
            <returns>Color representation of the vector</returns>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.TransformVector(System.Single[],System.Boolean)">
            <summary>
            Transforms a vector
            </summary>
            <param name="vector">Vector to transform</param>
            <param name="normalize">Flag to normalize data before returning</param>
            <returns>Transformed vector.</returns>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.TransformColors(System.Drawing.Color[])">
            <summary>
            Multiply each color by the matrix.
            </summary>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.Multiply(ARCed.Core.QColorMatrix)">
            <summary>
            Multiplies the given matrix
            </summary>
            <param name="matrix">Matrix to multiply</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.Multiply(ARCed.Core.QColorMatrix,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Multiply the given matrix using the specified matrix order.
            </summary>
            <param name="matrix">Matrix to multiply</param>
            <param name="order">Order to multiply with</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.Scale(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Update this matrix with the product of itself and a scaling vector.
            </summary>
            <param name="scaleRed">Red scaling value</param>
            <param name="scaleGreen">Green scaling value</param>
            <param name="scaleBlue">Blue scaling value</param>
            <param name="scaleOpacity">Alpha scaling value</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.Scale(System.Single,System.Single,System.Single,System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Update this matrix with the product of itself and a scaling vector.
            </summary>
            <param name="scaleRed">Red scaling value</param>
            <param name="scaleGreen">Green scaling value</param>
            <param name="scaleBlue">Blue scaling value</param>
            <param name="scaleOpacity">Alpha scaling value</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ScaleColors(System.Single)">
            <summary>
            Scale just the three colors with the same amount, leave opacity unchanged
            </summary>
            <param name="scale">Scale value</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ScaleColors(System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Scale just the three colors with the same amount, leave opacity unchanged
            </summary>
            <param name="scale">Scale value</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ScaleOpacity(System.Single)">
            <summary>
            Scales the matrix opacity
            </summary>
            <param name="scaleOpacity">Alpha scaling value</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ScaleOpacity(System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Scales the matrix opacity
            </summary>
            <param name="scaleOpacity">Alpha scaling value</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.Translate(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Update this matrix with the product of itself and a translation vector.
            </summary>
            <param name="offsetRed">Red offset value</param>
            <param name="offsetGreen">Green offset value</param>
            <param name="offsetBlue">Blue offset value</param>
            <param name="offsetOpacity">Alpha offset value</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.Translate(System.Single,System.Single,System.Single,System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Update this matrix with the product of itself and a translation vector.
            </summary>
            <param name="offsetRed">Red offset value</param>
            <param name="offsetGreen">Green offset value</param>
            <param name="offsetBlue">Blue offset value</param>
            <param name="offsetOpacity">Alpha offset value</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.TranslateColors(System.Single)">
            <summary>
            Translate matrix colors
            </summary>
            <param name="offset">Offset value</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.TranslateColors(System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Translate matrix colors
            </summary>
            <param name="offset">Offset value</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.TranslateOpacity(System.Single)">
            <summary>
            Translate matrix opacity
            </summary>
            <param name="offsetOpacity">Alpha offset value</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.TranslateOpacity(System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Translate matrix opacity
            </summary>
            <param name="offsetOpacity">Alpha offset value</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.RotateRed(System.Single)">
            <summary>
            Rotate the matrix around the red color axes. The color of the rotation 
            axis is unchanged, the other two colors are rotated in color space.
            </summary>
            <param name="phi">Angle in degrees to rotate (-180.0f... 180.0f).</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.RotateGreen(System.Single)">
            <summary>
            Rotate the matrix around the green color axes. The color of the rotation 
            axis is unchanged, the other two colors are rotated in color space.
            </summary>
            <param name="phi">Angle in degrees to rotate (-180.0f... 180.0f).</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.RotateBlue(System.Single)">
            <summary>
            Rotate the matrix around the blue color axes. The color of the rotation 
            axis is unchanged, the other two colors are rotated in color space.
            </summary>
            <param name="phi">Angle in degrees to rotate (-180.0f... 180.0f).</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.RotateRed(System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Rotate the matrix around the red color axes. The color of the rotation 
            axis is unchanged, the other two colors are rotated in color space.
            </summary>
            <param name="phi">Angle in degrees to rotate (-180.0f... 180.0f).</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.RotateGreen(System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Rotate the matrix around the green color axes. The color of the rotation 
            axis is unchanged, the other two colors are rotated in color space.
            </summary>
            <param name="phi">Angle in degrees to rotate (-180.0f... 180.0f).</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.RotateBlue(System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Rotate the matrix around the blue color axes. The color of the rotation 
            axis is unchanged, the other two colors are rotated in color space.
            </summary>
            <param name="phi">Angle in degrees to rotate (-180.0f... 180.0f).</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ShearRed(System.Single,System.Single)">
            <summary>
            Shear the matrix in the red color plane. The color is influenced by the other two planes.
            </summary>
            <param name="green">Green color plane</param>
            <param name="blue">Blue color plane</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ShearGreen(System.Single,System.Single)">
            <summary>
            Shear the matrix in the green color plane. The color is influenced by the other two planes.
            </summary>
            <param name="red">Red color plane</param>
            <param name="blue">Blue color plane</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ShearBlue(System.Single,System.Single)">
            <summary>
            Shear the matrix in the blue color plane. The color is influenced by the other two planes.
            </summary>
            <param name="red">Red color plane</param>
            <param name="green">Green color plane</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ShearRed(System.Single,System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Shear the matrix in the red color plane. The color is influenced by the other two planes.
            </summary>
            <param name="green">Green color plane</param>
            <param name="blue">Blue color plane</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ShearGreen(System.Single,System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Shear the matrix in the green color plane. The color is influenced by the other two planes.
            </summary>
            <param name="red">Red color plane</param>
            <param name="blue">Blue color plane</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.ShearBlue(System.Single,System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Shear the matrix in the blue color plane. The color is influenced by the other two planes.
            </summary>
            <param name="red">Red color plane</param>
            <param name="green">Green color plane</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.SetSaturation(System.Single)">
            <summary>
            Sets the matrix saturation
            </summary>
            <param name="saturation">Saturation value</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.SetSaturation(System.Single,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            Set the saturation of the matrix. Saturation of 0.0f yields black and white, 1.0f is neutral.
            </summary>
            <param name="saturation">Saturation value</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.RotateHue(System.Single)">
            <summary>
            Rotate the hue around the gray axis, keeping luminance fixed. Grays are fixed,
            all other colors change.
            </summary>
            <param name="phi">Degrees to rotate</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.SetContrast(System.Single)">
            <summary>
            Sets the matrix contrast
            </summary>
            <param name="scale">Constrast scale value</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.SetBrightness(System.Single)">
            <summary>
            Sets the matrix brightness
            </summary>
            <param name="offset">Brightness offset value</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.SetSaturation2(System.Single)">
            <summary>
            Sets the matrix saturation using <seealso cref="F:ARCed.Core.QColorMatrix.MatrixOrder.MatrixOrderAppend"/> order.
            </summary>
            <param name="saturation">Saturation value.</param>
        </member>
        <member name="M:ARCed.Core.QColorMatrix.RotateColor(System.Single,System.Int32,System.Int32,ARCed.Core.QColorMatrix.MatrixOrder)">
            <summary>
            X and Y are the indices of the value to receive the sin(phi) value
            </summary>
            <param name="phi">phi is in degrees</param>
            <param name="x">x value</param>
            <param name="y">y value</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="P:ARCed.Core.QColorMatrix.Matrix">
            <summary>
            Gets the matrix
            </summary>
        </member>
        <member name="T:ARCed.Core.QColorMatrix.MatrixOrder">
            <summary>
            GDI+ type for MatrixOrder
            </summary>
        </member>
        <member name="F:ARCed.Core.QColorMatrix.MatrixOrder.MatrixOrderPrepend">
            <summary>
            Prepend matrix order
            </summary>
        </member>
        <member name="F:ARCed.Core.QColorMatrix.MatrixOrder.MatrixOrderAppend">
            <summary>
            Append matrix order
            </summary>
        </member>
        <member name="T:RPG.Animation">
            <summary>
            Data class for animation.
            </summary>
        </member>
        <member name="M:RPG.Animation.#ctor">
            <summary>
            Creates a new instance of an RPG.Animation.
            </summary>
        </member>
        <member name="M:RPG.Animation.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Animation.id">
            <summary>
            The animation ID.
            </summary>
        </member>
        <member name="P:RPG.Animation.name">
            <summary>
            The animation name.
            </summary>
        </member>
        <member name="P:RPG.Animation.animation_name">
            <summary>
            The animation's graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Animation.animation_hue">
            <summary>
            The adjustment value for the animation graphic's hue (0..360).
            </summary>
        </member>
        <member name="P:RPG.Animation.position">
            <summary>
            The animation's position (0: top, 1: middle, 2: bottom, 3: screen).
            </summary>
        </member>
        <member name="P:RPG.Animation.frame_max">
            <summary>
            Number of frames.
            </summary>
        </member>
        <member name="P:RPG.Animation.frames">
            <summary>
            Frame contents. An <see cref="T:RPG.Animation.Frame"/> collection.
            </summary>
        </member>
        <member name="P:RPG.Animation.timings">
            <summary>
            Timing for SE and flash effects. An <see cref="T:RPG.Animation.Timing"/> collection.
            </summary>
        </member>
        <member name="T:RPG.Animation.Frame">
            <summary>
            Data class for animation frames.
            </summary>
        </member>
        <member name="M:RPG.Animation.Frame.#ctor">
            <summary>
            Creates a new instance of an RPG.Animation.Frame.
            </summary>
        </member>
        <member name="P:RPG.Animation.Frame.cell_max">
            <summary>
            Number of cells. Equivalent to the largest cell number in the frame set.
            </summary>
        </member>
        <member name="P:RPG.Animation.Frame.cell_data">
            <summary>
            2-dimensional <see cref="T:Table"/> containing cell contents.
            Generally takes the form <c>cell_data[cell_index, data_index]</c>.
            <c>data_index</c> ranges from 0 to 7 and denotes various information 
            about a cell. 
            (0: pattern, 1: X-coordinate, 2: Y-coordinate, 3: zoom level, 4: angle of rotation, 5: horizontal flip, 6: opacity, 7: blending mode). 
            Patterns are 1 less than the number displayed in RPGXP; -1 indicates that that cell is not in use.
            </summary>
        </member>
        <member name="T:RPG.Animation.Timing">
            <summary>
            Data class for the timing of an animation's SE and flash effects.
            </summary>
        </member>
        <member name="M:RPG.Animation.Timing.#ctor">
            <summary>
            Creates a new instance of an RPG.Animation.Timing.
            </summary>
        </member>
        <member name="P:RPG.Animation.Timing.frame">
            <summary>
            Frame number. 1 less than the number displayed in RPGXP.
            </summary>
        </member>
        <member name="P:RPG.Animation.Timing.se">
            <summary>
            SE, or sound effect (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.Animation.Timing.flash_scope">
            <summary>
            Flash area (0: none, 1: target, 2: screen; 3: delete target).
            </summary>
        </member>
        <member name="P:RPG.Animation.Timing.flash_color">
            <summary>
            Flash color (<see cref="T:RPG.Color"/>).
            </summary>
        </member>
        <member name="P:RPG.Animation.Timing.flash_duration">
            <summary>
            Flash duration.
            </summary>
        </member>
        <member name="P:RPG.Animation.Timing.condition">
            <summary>
            Condition of the effect (0: none, 1: hit, 2: miss).
            </summary>
        </member>
        <member name="T:ARCed.Helpers.Compressor">
            <summary>
            Static class used for compressing/extracting files and folders using 7zip.
            </summary>
        </member>
        <member name="M:ARCed.Helpers.Compressor.CompressDirectory(System.String,System.String,System.Boolean)">
            <summary>
            Compresses a directory into a single archive
            </summary>
            <param name="inDir">The path to the directory to compress</param>
            <param name="outFile">The archive name to create</param>
            <param name="notify">Flag to notify user when finished</param>
        </member>
        <member name="M:ARCed.Helpers.Compressor.ExtractArchive(System.String,System.String)">
            <summary>
            Extracts and archive to the given directory
            </summary>
            <param name="inFile">Path to the archive to extract</param>
            <param name="outDir">The path to the target directory for extraction</param>
        </member>
        <member name="T:RPG.Color">
            <summary>
            The RGBA color class. Each component is handled with a <see langword="float"/> value.
            </summary>
        </member>
        <member name="M:RPG.Color.#ctor">
            <summary>
            Creates a Color object with all values initialized as 0.0.
            </summary>
        </member>
        <member name="M:RPG.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a Color object. If alpha is omitted, it is assumed at 255.
            </summary>
            <param name="red">The red value (0-255)</param>
            <param name="green">The green value (0-255)</param>
            <param name="blue">The blue value (0-255)</param>
            <param name="alpha">The alpha value (0-255)</param>
        </member>
        <member name="M:RPG.Color.set(System.Single,System.Single,System.Single)">
            <summary>
            Sets all components at once. Alpha remains the same.
            </summary>
            <param name="red">The red value (0-255)</param>
            <param name="green">The green value (0-255)</param>
            <param name="blue">The blue value (0-255)</param>
        </member>
        <member name="M:RPG.Color.set(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets all components at once. 
            </summary>
            <param name="red">The red value (0-255)</param>
            <param name="green">The green value (0-255)</param>
            <param name="blue">The blue value (0-255)</param>
            <param name="alpha">The alpha value (0-255)</param>
        </member>
        <member name="M:RPG.Color.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="M:RPG.Color.op_Implicit(RPG.Color)~System.Drawing.Color">
            <summary>
            Implicit operator to convert a <see cref="T:RPG.Color"/> to a <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="color">Color to convert</param>
            <returns>A System.Drawing.Color representation of the object.</returns>
        </member>
        <member name="M:RPG.Color.op_Implicit(System.Drawing.Color)~RPG.Color">
            <summary>
            Implicit operator to convert a <see cref="T:System.Drawing.Color"/> to a <see cref="T:RPG.Color"/>.
            </summary>
            <param name="color">Color to convert</param>
            <returns>Color representation of the object.</returns>
        </member>
        <member name="P:RPG.Color.red">
            <summary>
            The red value (0-255). Values out of range are automatically corrected.
            </summary>
        </member>
        <member name="P:RPG.Color.green">
            <summary>
            The green value (0-255). Values out of range are automatically corrected.
            </summary>
        </member>
        <member name="P:RPG.Color.blue">
            <summary>
            The blue value (0-255). Values out of range are automatically corrected.
            </summary>
        </member>
        <member name="P:RPG.Color.alpha">
            <summary>
            The alpha value (0-255). Values out of range are automatically corrected.
            </summary>
        </member>
        <member name="T:ARCed.Core.LogTextEventArgs">
            <summary>
            Events arguments used when a text is added to a Logger
            </summary>
        </member>
        <member name="M:ARCed.Core.LogTextEventArgs.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="text">Text added to the Logger</param>
        </member>
        <member name="P:ARCed.Core.LogTextEventArgs.AddedText">
            <summary>
            The text added to the Logger
            </summary>
        </member>
        <member name="T:ARCed.Core.LogSaveEventArgs">
            <summary>
            Events arguments used when a Logger is saved
            </summary>
        </member>
        <member name="M:ARCed.Core.LogSaveEventArgs.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="filename">FullPath where the file is saved</param>
            <param name="success">Flag is save was successful</param>
            <param name="flushed">Flag is buffer was cleared</param>
        </member>
        <member name="P:ARCed.Core.LogSaveEventArgs.Filename">
            <summary>
            FullPath where the file is saved
            </summary>
        </member>
        <member name="P:ARCed.Core.LogSaveEventArgs.Successful">
            <summary>
            Flag is save was successful
            </summary>
        </member>
        <member name="P:ARCed.Core.LogSaveEventArgs.BufferCleared">
            <summary>
            Flag is buffer was cleared
            </summary>
        </member>
        <member name="T:ARCed.Core.Logger">
            <summary>
            Class for creating a buffer and adding text to. Acts as a loose wrapper for 
            a StringBuilder object, but includes events raised when text is added or when
            the buffer is flushed to a file.
            </summary>
        </member>
        <member name="M:ARCed.Core.Logger.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="M:ARCed.Core.Logger.Save(System.String,System.Boolean)">
            <summary>
            Saves the log file to disk
            </summary>
            <param name="filename">FullPath where log is saved</param>
            <param name="flushBuffer">Flag to clear the buffer after saving</param>
        </member>
        <member name="M:ARCed.Core.Logger.AppendHeader(System.String)">
            <summary>
            Appends a header to the log file to denote a new section
            </summary>
            <param name="message">The text within the header</param>
        </member>
        <member name="M:ARCed.Core.Logger.Clear(System.Boolean)">
            <summary>
            Clears the buffer of all logged text
            </summary>
            <param name="notify">Flag to fire NoteTextChanged event</param>
        </member>
        <member name="M:ARCed.Core.Logger.Append(System.String)">
            <summary>
            Appends the text to the log
            </summary>
            <param name="text">Text to append</param>
        </member>
        <member name="M:ARCed.Core.Logger.Append(System.Object)">
            <summary>
            Appends the string representation of the object to the log
            </summary>
            <param name="obj">Object to append</param>
        </member>
        <member name="M:ARCed.Core.Logger.AppendLine(System.String)">
            <summary>
            Appends the text to the log and adds a newline
            </summary>
            <param name="text">Text to append</param>
        </member>
        <member name="M:ARCed.Core.Logger.AppendLine(System.Object)">
            <summary>
            Appends the string representation of the object to the log and adds a newline
            </summary>
            <param name="obj">Object to append</param>
        </member>
        <member name="M:ARCed.Core.Logger.AppendFormat(System.String,System.Object[])">
            <summary>
            Appends text, replacing items in formatted string with objects
            </summary>
            <param name="text">Format string</param>
            <param name="objs">Object replacements</param>
        </member>
        <member name="E:ARCed.Core.Logger.OnSave">
            <summary>
            Event raised when the Logger is saved to disk
            </summary>
        </member>
        <member name="E:ARCed.Core.Logger.TextChanged">
            <summary>
            Event raised when text is added to the Logger
            </summary>
        </member>
        <member name="P:ARCed.Core.Logger.Text">
            <summary>
            Gets or sets the text of the Logger
            </summary>
        </member>
        <member name="P:ARCed.Core.Logger.Buffer">
            <summary>
            Gets the buffer
            </summary>
        </member>
        <member name="T:ARCed.Core.Logger.OnSaveHandler">
            <summary>
            Delegate handler for the OnSave event
            </summary>
            <param name="sender">Invoker of the even</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:ARCed.Core.Logger.TextChangedHandler">
            <summary>
            Delegate handler for the NoteTextChanged event
            </summary>
            <param name="sender">Invoker of the even</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:ARCed.Helpers.PathHelper">
            <summary>
            Static class for getting paths to files/folders used by ARCed.
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.ApplicationData">
            <summary>
            Gets the path to ARCed.NET's AppData directory
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.EditorPath">
            <summary>
            Gets the full path to the current application
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.EditorDirectory">
            <summary>
            Gets the full path to the directory of the editor
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.AssemblyDir">
            <summary>
            Gets the path to the folder containing the application's assemblies.
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.PluginDirectory">
            <summary>
            Gets the path to the plugins directory
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.TemplateDirectory">
            <summary>
            Gets the path to the template directory
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.ProjectTemplateDirectory">
            <summary>
            Gets the path to the templates directory
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.ScriptTemplateDirectory">
            <summary>
            Gets the path to the script template directory
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.SettingsDirectory">
            <summary>
            Gets the path to the editor's settings folder
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.EditorSettings">
            <summary>
            Gets the path to ARCed.NET's settings file
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.SkinSettings">
            <summary>
            Gets the path to ARCed.NET's skin settings file
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.ScriptSettings">
            <summary>
            Gets the path to ARCed.NET's script setting file
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.DefaultSaveDirectory">
            <summary>
            Gets the default directory where projects are saved
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.SevenZipLibrary">
            <summary>
            Gets the path to the native 7zip library appropriate for the host machines CPU architecture.
            </summary>
        </member>
        <member name="P:ARCed.Helpers.PathHelper.SciLexerLibrary">
            <summary>
            Gets the path to the native Scintilla library appropriate for the host machines CPU architecture.
            </summary>
        </member>
        <member name="T:ARCed.Settings.BackupType">
            <summary>
            Flags used for determining the type of data to backup.
            </summary>
        </member>
        <member name="F:ARCed.Settings.BackupType.None">
            <summary>
            No data will be backed up.
            </summary>
        </member>
        <member name="F:ARCed.Settings.BackupType.Scripts">
            <summary>
            Script files will be backed up.
            </summary>
        </member>
        <member name="F:ARCed.Settings.BackupType.Maps">
            <summary>
            Map data will be backed up.
            </summary>
        </member>
        <member name="F:ARCed.Settings.BackupType.AllData">
            <summary>
            All data will be backed up.
            </summary>
        </member>
        <member name="T:ARCed.Settings.BackupFrequency">
            <summary>
            Flags for specifying the frequency when data will be backed up.
            </summary>
        </member>
        <member name="F:ARCed.Settings.BackupFrequency.None">
            <summary>
            Backups are not created
            </summary>
        </member>
        <member name="F:ARCed.Settings.BackupFrequency.Run">
            <summary>
            Each time the project is ran from the editor
            </summary>
        </member>
        <member name="F:ARCed.Settings.BackupFrequency.Debug">
            <summary>
            Each time the project is ran from the editor in DEBUG mode
            </summary>
        </member>
        <member name="F:ARCed.Settings.BackupFrequency.Save">
            <summary>
            Each time data is saved 
            </summary>
        </member>
        <member name="F:ARCed.Settings.BackupFrequency.Timed">
            <summary>
            At timed intervals
            </summary>
        </member>
        <member name="T:ARCed.Settings.ARChiveSettings">
            <summary>
            Class the contains settings on 
            </summary>
        </member>
        <member name="M:ARCed.Settings.ARChiveSettings.#ctor">
            <summary>
            Fefault constructor.
            </summary>
        </member>
        <member name="P:ARCed.Settings.ARChiveSettings.Type">
            <summary>
            Gets or sets the BackupType setting.
            </summary>
        </member>
        <member name="P:ARCed.Settings.ARChiveSettings.Frequency">
            <summary>
            Gets or sets the frequency backups are created.
            </summary>
        </member>
        <member name="P:ARCed.Settings.ARChiveSettings.Interval">
            <summary>
            Gets or sets the interval that backups are created when using BackupType.Interval
            </summary>
        </member>
        <member name="P:ARCed.Settings.ARChiveSettings.Threaded">
            <summary>
            Gets or sets the flag to have the backups copied and compressed on a separate thread.
            </summary>
        </member>
        <member name="P:ARCed.Settings.ARChiveSettings.MaxBackups">
            <summary>
            Gets or sets the maximum number of backups that will be created before overwriting begins.
            </summary>
        </member>
        <member name="P:ARCed.Settings.ARChiveSettings.TypeToInt32">
            <summary>
            Gets or sets the BackupType flag as an integer.
            </summary>
        </member>
        <member name="T:ARCed.Core.ResourceType">
            <summary>
            Enum containing flags for various resource types
            </summary>
        </member>
        <member name="F:ARCed.Core.ResourceType.Unknown">
            <summary>
            Unknown type
            </summary>
        </member>
        <member name="F:ARCed.Core.ResourceType.Graphics">
            <summary>
            Flag for a graphic resource
            </summary>
        </member>
        <member name="F:ARCed.Core.ResourceType.Audio">
            <summary>
            Flag for an audio resource
            </summary>
        </member>
        <member name="F:ARCed.Core.ResourceType.Script">
            <summary>
            Flag for a script file
            </summary>
        </member>
        <member name="T:ARCed.Core.Location">
            <summary>
            Enum containing flags for various of resource types
            </summary>
        </member>
        <member name="F:ARCed.Core.Location.Unknown">
            <summary>
            Flag for an unknown/undefined location
            </summary>
        </member>
        <member name="F:ARCed.Core.Location.Local">
            <summary>
            Flag for a resource local to the project
            </summary>
        </member>
        <member name="F:ARCed.Core.Location.RTP">
            <summary>
            Flag for a resource located in the host machine's RTP directory
            </summary>
        </member>
        <member name="T:ARCed.Core.GameResource">
            <summary>
            Base class for resource classes
            </summary>
        </member>
        <member name="M:ARCed.Core.GameResource.#ctor(System.String,ARCed.Core.Location,ARCed.Core.ResourceType)">
            <summary>
            Constructor with parameters
            </summary>
            <param name="filename">Filename of the resource</param>
            <param name="location">Flag for resource location</param>
            <param name="type">Flag for resource type</param>
        </member>
        <member name="M:ARCed.Core.GameResource.CompareTo(System.Object)">
            <summary>
            Compares two GameResource objects. Local resources are listed first, names are 
            sorted alphabetically within their location.
            </summary>
            <param name="other">GameResource object to compare</param>
            <returns>Integer comparison flag</returns>
            <exception cref="T:System.ArgumentException">Thrown when object to compare is not a GameResource</exception>
        </member>
        <member name="M:ARCed.Core.GameResource.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects for equality.
            </summary>
            <param name="obj1">First object to compare</param>
            <param name="obj2">Second object to compare</param>
            <returns>Result of comparison</returns>
        </member>
        <member name="P:ARCed.Core.GameResource.Directory">
            <summary>
            Directory relative to the main directory the resource is found in
            </summary>
        </member>
        <member name="P:ARCed.Core.GameResource.FullPath">
            <summary>
            FullPath of the resource
            </summary>
        </member>
        <member name="P:ARCed.Core.GameResource.ResourceType">
            <summary>
            The type of the resource
            </summary>
        </member>
        <member name="P:ARCed.Core.GameResource.Location">
            <summary>
            Gets or sets the location parameter determining if resource is local or ResourceHelper
            </summary>
        </member>
        <member name="P:ARCed.Core.GameResource.Name">
            <summary>
            Gets the name of the file without directory or extension
            </summary>
        </member>
        <member name="P:ARCed.Core.GameResource.FileExtension">
            <summary>
            Gets the extension of the file
            </summary>
        </member>
        <member name="P:ARCed.Core.GameResource.RelativePath">
            <summary>
            Gets a path that is relative to both the project and RTP directory
            </summary>
        </member>
        <member name="P:ARCed.Core.GameResource.RelativeDirectory">
            <summary>
            Returns the relative directory of the resource from the root folder
            </summary>
        </member>
        <member name="P:ARCed.Core.GameResource.FileInfo">
            <summary>
            Gets the FileInfo object for the file
            </summary>
        </member>
        <member name="M:ARCed.Core.GameResource.ResourceComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects for equality.
            </summary>
            <param name="obj1">First object to compare</param>
            <param name="obj2">Second object to compare</param>
            <returns>Result of comparison</returns>
        </member>
        <member name="T:ARCed.Constants">
            <summary>
            Static class for containing constant values used by all assemblies.
            </summary>
        </member>
        <member name="F:ARCed.Constants.IMAGEFILTERS">
            <summary>
            Array of strings used for searching supported _srcTexture formats
            </summary>
        </member>
        <member name="F:ARCed.Constants.AUDIOFILTERS">
            <summary>
            Array of strings used for searching supported audio formats
            </summary>
        </member>
        <member name="F:ARCed.Constants.SCRIPTFILTERS">
            <summary>
            Array of strings used for searching supported script file formats
            </summary>
        </member>
        <member name="F:ARCed.Constants.BACKUP_FOLDER">
            <summary>
            Name of the backup folder
            </summary>
        </member>
        <member name="F:ARCed.Constants.SETTINGS_FOLDER">
            <summary>
            Name of the settings folder
            </summary>
        </member>
        <member name="F:ARCed.Constants.GRAPHICS_FOLDER">
            <summary>
            Name of the graphics folder
            </summary>
        </member>
        <member name="F:ARCed.Constants.AUDIO_FOLDER">
            <summary>
            Name of the audio folder
            </summary>
        </member>
        <member name="F:ARCed.Constants.DATA_FOLDER">
            <summary>
            Name of the data folder
            </summary>
        </member>
        <member name="F:ARCed.Constants.SCRIPT_FOLDER">
            <summary>
            Name of the scripts folder
            </summary>
        </member>
        <member name="F:ARCed.Constants.LAYOUT_FILE">
            <summary>
            Name of the layout settings file
            </summary>
        </member>
        <member name="F:ARCed.Constants.PROJECT_SETTINGS_FILE">
            <summary>
            Name of the project settings file
            </summary>
        </member>
        <member name="F:ARCed.Constants.FRAMERATE">
            <summary>
            Frames per second for the game resolution
            </summary>
        </member>
        <member name="F:ARCed.Constants.TILESIZE">
            <summary>
            Size in pixels of a map tiles.
            </summary>
        </member>
        <member name="F:ARCed.Constants.MAXWIDTH">
            <summary>
            Size in pixels of a tileset graphic
            </summary>
        </member>
        <member name="F:ARCed.Constants.TILEWIDTH">
            <summary>
            Number of tiles across of a tileset graphic
            </summary>
        </member>
        <member name="F:ARCed.Constants.AUTO_IDS">
            <summary>
            Tile IDs reserved for autotiles
            </summary>
        </member>
        <member name="F:ARCed.Constants.AUTOTILES">
            <summary>
            Number of autotiles
            </summary>
        </member>
        <member name="F:ARCed.Constants.PRIORITIES">
            <summary>
            Number of priorities for a tileset
            </summary>
        </member>
        <member name="F:ARCed.Constants.TERRAINS">
            <summary>
            Number of terrains for a tileset
            </summary>
        </member>
        <member name="F:ARCed.Constants.ANIMESIZE">
            <summary>
            Width and height of a animation source graphic frame
            </summary>
        </member>
        <member name="P:ARCed.Constants.RTPPath">
            <summary>
            Path to the RTP folder (TEST PURPOSES ONLY)
            </summary>
        </member>
        <member name="T:RPG.Troop">
            <summary>
            Data class for troops.
            </summary>
        </member>
        <member name="M:RPG.Troop.#ctor">
            <summary>
            Creates a new instance of an RPG.Troop.
            </summary>
        </member>
        <member name="M:RPG.Troop.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Troop.id">
            <summary>
            Troop ID.
            </summary>
        </member>
        <member name="P:RPG.Troop.name">
            <summary>
            Troop name.
            </summary>
        </member>
        <member name="P:RPG.Troop.members">
            <summary>
            Troop members. A collection of <see cref="T:RPG.Troop.Member"/> objects.
            </summary>
        </member>
        <member name="P:RPG.Troop.pages">
            <summary>
            Battle events. A collection of <see cref="T:RPG.Troop.Page"/> objects.
            </summary>
        </member>
        <member name="T:RPG.Troop.Member">
            <summary>
            Data class for troop members.
            </summary>
        </member>
        <member name="M:RPG.Troop.Member.#ctor">
            <summary>
            Creates a new instance of an RPG.Troop.Member.
            </summary>
        </member>
        <member name="P:RPG.Troop.Member.enemy_id">
            <summary>
            The enemy ID.
            </summary>
        </member>
        <member name="P:RPG.Troop.Member.x">
            <summary>
            The troop member's X-coordinate.
            </summary>
        </member>
        <member name="P:RPG.Troop.Member.y">
            <summary>
            The troop member's Y-coordinate.
            </summary>
        </member>
        <member name="P:RPG.Troop.Member.hidden">
            <summary>
            Truth value of the [Appear Midway] option.
            </summary>
        </member>
        <member name="P:RPG.Troop.Member.immortal">
            <summary>
            Truth value of the [Immortal] option.
            </summary>
        </member>
        <member name="T:RPG.Troop.Page">
            <summary>
            Data class for battle events (pages).
            </summary>
        </member>
        <member name="M:RPG.Troop.Page.#ctor">
            <summary>
            Creates a new instance of an RPG.Troop.Page.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.condition">
            <summary>
            Condition (<see cref="T:RPG.Troop.Page.Condition"/>).
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.span">
            <summary>
            Span (0: battle, 1: turn, 2: moment).
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.list">
            <summary>
            Program contents. A collection of <see cref="T:RPG.EventCommand"/> objects.
            </summary>
        </member>
        <member name="T:RPG.Troop.Page.Condition">
            <summary>
            A database of battle event [Conditions].
            </summary>
        </member>
        <member name="M:RPG.Troop.Page.Condition.#ctor">
            <summary>
            Creates a new instance of an RPG.Troop.Page.Condition.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.turn_valid">
            <summary>
            Truth value for whether the [Turn] condition is valid.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.enemy_valid">
            <summary>
            Truth value for whether the [Enemy] condition is valid.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.actor_valid">
            <summary>
            Truth value for whether the [Actor] condition is valid.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.switch_valid">
            <summary>
            Truth value for whether the [Switch] condition is valid.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.turn_a">
            <summary>
            a and b values specified in the [Turn] condition. 
            To be input in the form a + bx.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.turn_b">
            <summary>
            a and b values specified in the [Turn] condition. 
            To be input in the form a + bx.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.enemy_index">
            <summary>
            Troop member index specified in the [Enemy] condition (0..7).
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.enemy_hp">
            <summary>
            HP percentage specified in the [Enemy] condition.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.actor_id">
            <summary>
            Actor ID specified in the [Actor] condition.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.actor_hp">
            <summary>
            HP percentage specified in the [Actor] condition.
            </summary>
        </member>
        <member name="P:RPG.Troop.Page.Condition.switch_id">
            <summary>
            Switch ID specified in the [Switch] condition.
            </summary>
        </member>
        <member name="T:RPG.System">
            <summary>
            Data class for the system.
            </summary>
        </member>
        <member name="M:RPG.System.#ctor">
            <summary>
            Creates a new instance of an RPG.System.
            </summary>
        </member>
        <member name="P:RPG.System.magic_number">
            <summary>
            Magic number used for update checks. 
            Updates changed values every time data is saved in RPGXP.
            </summary>
        </member>
        <member name="P:RPG.System.party_members">
            <summary>
            The initial party. A collection of actor IDs.
            </summary>
        </member>
        <member name="P:RPG.System.elements">
            <summary>
            Element list. 
            Text collection using element IDs as subscripts, 
            with the element in the 0 position being nil.
            </summary>
        </member>
        <member name="P:RPG.System.switches">
            <summary>
            Switch list. 
            Text collection using switch IDs as subscripts, 
            with the element in the 0 position being nil.
            </summary>
        </member>
        <member name="P:RPG.System.variables">
            <summary>
            Variable list. 
            Text collection using switch IDs as subscripts, 
            with the element in the 0 position being nil.
            </summary>
        </member>
        <member name="P:RPG.System.windowskin_name">
            <summary>
            The window skin (or "windowskin") graphic file name.
            </summary>
        </member>
        <member name="P:RPG.System.title_name">
            <summary>
            The title graphic file name.
            </summary>
        </member>
        <member name="P:RPG.System.gameover_name">
            <summary>
            The "Game Over" graphic file name.
            </summary>
        </member>
        <member name="P:RPG.System.battle_transition">
            <summary>
            The file name of the transition graphic, displayed when entering battle.
            </summary>
        </member>
        <member name="P:RPG.System.title_bgm">
            <summary>
            The title BGM (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.battle_bgm">
            <summary>
            The battle BGM (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.battle_end_me">
            <summary>
            The battle end ME (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.gameover_me">
            <summary>
            The gameover ME (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.cursor_se">
            <summary>
            The cursor SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.decision_se">
            <summary>
            The decision SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.cancel_se">
            <summary>
            The cancel SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.buzzer_se">
            <summary>
            The buzzer SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.equip_se">
            <summary>
            The equip SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.shop_se">
            <summary>
            The shop SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.save_se">
            <summary>
            The save SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.load_se">
            <summary>
            The load SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.battle_start_se">
            <summary>
            The battle start SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.escape_se">
            <summary>
            The escape SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.actor_collapse_se">
            <summary>
            The actor collapse SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.enemy_collapse_se">
            <summary>
            The enemy collapse SE (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.System.words">
            <summary>
            Terms (<see cref="T:RPG.System.Words"/>).
            </summary>
        </member>
        <member name="P:RPG.System.start_map_id">
            <summary>
            The map ID of the player's initial position.
            </summary>
        </member>
        <member name="P:RPG.System.start_x">
            <summary>
            The map X-coordinate of the player's initial position.
            </summary>
        </member>
        <member name="P:RPG.System.start_y">
            <summary>
            The map Y-coordinate of the player's initial position.
            </summary>
        </member>
        <member name="P:RPG.System.test_battlers">
            <summary>
            Party settings for battle tests. 
            A collection of <see cref="T:RPG.System.TestBattler"/> objects.
            </summary>
        </member>
        <member name="P:RPG.System.test_troop_id">
            <summary>
            The troop ID for battle tests.
            </summary>
        </member>
        <member name="P:RPG.System.battleback_name">
            <summary>
            The battle background graphic file name, for battle tests and internal use.
            </summary>
        </member>
        <member name="P:RPG.System.battler_name">
            <summary>
            The battler graphic file name, for internal use.
            </summary>
        </member>
        <member name="P:RPG.System.battler_hue">
            <summary>
            The adjustment value for the battler graphic's hue (0..360), for internal use.
            </summary>
        </member>
        <member name="P:RPG.System.edit_map_id">
            <summary>
            The ID of the map currently being edited, for internal use.
            </summary>
        </member>
        <member name="T:RPG.System.TestBattler">
            <summary>
            Data class for the battlers used in battle tests.
            </summary>
        </member>
        <member name="M:RPG.System.TestBattler.#ctor">
            <summary>
            Creates a new instance of an RPG.System.TestBattler.
            </summary>
        </member>
        <member name="P:RPG.System.TestBattler.actor_id">
            <summary>
            The actor ID.
            </summary>
        </member>
        <member name="P:RPG.System.TestBattler.level">
            <summary>
            The actor's level.
            </summary>
        </member>
        <member name="P:RPG.System.TestBattler.weapon_id">
            <summary>
            The actor's weapon ID.
            </summary>
        </member>
        <member name="P:RPG.System.TestBattler.armor1_id">
            <summary>
            The actor's shield ID.
            </summary>
        </member>
        <member name="P:RPG.System.TestBattler.armor2_id">
            <summary>
            The actor's helmet ID.
            </summary>
        </member>
        <member name="P:RPG.System.TestBattler.armor3_id">
            <summary>
            The actor's body armor ID.
            </summary>
        </member>
        <member name="P:RPG.System.TestBattler.armor4_id">
            <summary>
            The actor's accessory ID.
            </summary>
        </member>
        <member name="T:RPG.System.Words">
            <summary>
            Data class for terminology.
            </summary>
        </member>
        <member name="M:RPG.System.Words.#ctor">
            <summary>
            Creates a new instance of an RPG.System.Words.
            </summary>
        </member>
        <member name="P:RPG.System.Words.gold">
            <summary>
            The term "G" (the unit of currency).
            </summary>
        </member>
        <member name="P:RPG.System.Words.hp">
            <summary>
            The term "HP" (hit points).
            </summary>
        </member>
        <member name="P:RPG.System.Words.sp">
            <summary>
            The term "SP" (skill points).
            </summary>
        </member>
        <member name="P:RPG.System.Words.str">
            <summary>
            The term "Strength".
            </summary>
        </member>
        <member name="P:RPG.System.Words.dex">
            <summary>
            The term "Dexterity".
            </summary>
        </member>
        <member name="P:RPG.System.Words.agi">
            <summary>
            The term "Agility".
            </summary>
        </member>
        <member name="P:RPG.System.Words.int">
            <summary>
            The term "Intelligence".
            </summary>
        </member>
        <member name="P:RPG.System.Words.atk">
            <summary>
            The term "Attack Power".
            </summary>
        </member>
        <member name="P:RPG.System.Words.pdef">
            <summary>
            The term "Physical Defense".
            </summary>
        </member>
        <member name="P:RPG.System.Words.mdef">
            <summary>
            The term "Magic Defense".
            </summary>
        </member>
        <member name="P:RPG.System.Words.weapon">
            <summary>
            The term "Weapon".
            </summary>
        </member>
        <member name="P:RPG.System.Words.armor1">
            <summary>
            The term "Shield".
            </summary>
        </member>
        <member name="P:RPG.System.Words.armor2">
            <summary>
            The term "Helmet".
            </summary>
        </member>
        <member name="P:RPG.System.Words.armor3">
            <summary>
            The term "Body armor".
            </summary>
        </member>
        <member name="P:RPG.System.Words.armor4">
            <summary>
            The term "Accessory".
            </summary>
        </member>
        <member name="P:RPG.System.Words.attack">
            <summary>
            The term "Attack".
            </summary>
        </member>
        <member name="P:RPG.System.Words.skill">
            <summary>
            The term "Skill".
            </summary>
        </member>
        <member name="P:RPG.System.Words.guard">
            <summary>
            The term "Defense".
            </summary>
        </member>
        <member name="P:RPG.System.Words.item">
            <summary>
            The term "Item".
            </summary>
        </member>
        <member name="P:RPG.System.Words.equip">
            <summary>
            The term "Equip".
            </summary>
        </member>
        <member name="T:RPG.MoveCommand">
            <summary>
            Data class for the Move command.
            </summary>
        </member>
        <member name="M:RPG.MoveCommand.#ctor">
            <summary>
            Creates a new instance of an RPG.MoveCommand.
            </summary>
        </member>
        <member name="M:RPG.MoveCommand.#ctor(System.Int32)">
            <summary>
            Creates a new instance of an RPG.MoveCommand.
            </summary>
            <param name="code">Move command code.</param>
        </member>
        <member name="M:RPG.MoveCommand.#ctor(System.Int32,System.Collections.Generic.List{System.Object})">
            <summary>
            Creates a new instance of an RPG.MoveCommand.
            </summary>
            <param name="code">Move command code.</param>
            <param name="parameters">Move command arguments.</param>
        </member>
        <member name="P:RPG.MoveCommand.code">
            <summary>
            Move command code.
            </summary>
        </member>
        <member name="P:RPG.MoveCommand.parameters">
            <summary>
            Array containing the Move command arguments. 
            The contents vary for each command.
            </summary>
        </member>
        <member name="T:RPG.Item">
            <summary>
            Data class for items.
            </summary>
        </member>
        <member name="M:RPG.Item.#ctor">
            <summary>
            Creates a new instance of an RPG.Item.
            </summary>
        </member>
        <member name="M:RPG.Item.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Item.id">
            <summary>
            The item ID.
            </summary>
        </member>
        <member name="P:RPG.Item.name">
            <summary>
            The item name.
            </summary>
        </member>
        <member name="P:RPG.Item.icon_name">
            <summary>
            The item's icon graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Item.description">
            <summary>
            The item description.
            </summary>
        </member>
        <member name="P:RPG.Item.scope">
            <summary>
            Scope of the item's effects 
            (0: none, 1: one enemy, 2: all enemies, 3: one ally, 4: all allies, 5: 1 ally--HP 0, 6: all allies--HP 0, 7: the user).
            </summary>
        </member>
        <member name="P:RPG.Item.occasion">
            <summary>
            When the item may be used 
            (0: always, 1: only in battle, 2: only from the menu, 3: never).
            </summary>
        </member>
        <member name="P:RPG.Item.animation1_id">
            <summary>
            The animation ID when using the item.
            </summary>
        </member>
        <member name="P:RPG.Item.animation2_id">
            <summary>
            The animation ID when on the receiving end of the item.
            </summary>
        </member>
        <member name="P:RPG.Item.menu_se">
            <summary>
            SE played when item is used on the menu screen (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.Item.common_event_id">
            <summary>
            The Common Event ID.
            </summary>
        </member>
        <member name="P:RPG.Item.price">
            <summary>
            The item price.
            </summary>
        </member>
        <member name="P:RPG.Item.consumable">
            <summary>
            Truth value of whether the item disappears when used.
            </summary>
        </member>
        <member name="P:RPG.Item.parameter_type">
            <summary>
            Parameter affected 
            (0: none, 1: max HP, 2: max SP, 3: strength, 4: dexterity, 5: agility, 6: intelligence).
            </summary>
        </member>
        <member name="P:RPG.Item.parameter_points">
            <summary>
            Amount by which parameter increases.
            </summary>
        </member>
        <member name="P:RPG.Item.recover_hp_rate">
            <summary>
            HP recovery rate.
            </summary>
        </member>
        <member name="P:RPG.Item.recover_hp">
            <summary>
            HP recovery amount.
            </summary>
        </member>
        <member name="P:RPG.Item.recover_sp_rate">
            <summary>
            SP recovery rate.
            </summary>
        </member>
        <member name="P:RPG.Item.recover_sp">
            <summary>
            SP recovery amount.
            </summary>
        </member>
        <member name="P:RPG.Item.hit">
            <summary>
            The item's hit probability.
            </summary>
        </member>
        <member name="P:RPG.Item.pdef_f">
            <summary>
            The item's physical defense F rating.
            </summary>
        </member>
        <member name="P:RPG.Item.mdef_f">
            <summary>
            The item's magic defense F rating.
            </summary>
        </member>
        <member name="P:RPG.Item.variance">
            <summary>
            The item's degree of variance.
            </summary>
        </member>
        <member name="P:RPG.Item.element_set">
            <summary>
            The item's element. An Elemental ID collection.
            </summary>
        </member>
        <member name="P:RPG.Item.plus_state_set">
            <summary>
            States to add. A State ID collection.
            </summary>
        </member>
        <member name="P:RPG.Item.minus_state_set">
            <summary>
            States to cancel. A State ID collection.
            </summary>
        </member>
        <member name="T:ARCed.Helpers.ResourceHelper">
            <summary>
            Static class that handles finding, organizing, and getting resources automatically from 
            both ther local directory and installed RTP directory if there is one.
            </summary>
        </member>
        <member name="M:ARCed.Helpers.ResourceHelper.Initialize">
            <summary>
            Initializes the system. Must be called before system can be used.
            </summary>
        </member>
        <member name="M:ARCed.Helpers.ResourceHelper.DirectorySearch(System.String,System.String[])">
            <summary>
            Recursively searches a directory for filenames using the given filters
            </summary>
            <param name="rootDir">Root directory to begin search</param>
            <param name="filters">Formatted search filters for filenames</param>
            <returns>Collection of files found in root directory and all subdirectories that 
            matched the given filter(s).</returns>
        </member>
        <member name="M:ARCed.Helpers.ResourceHelper.RefreshRTP">
            <summary>
            Refreshes the collection of RTP resources
            </summary>
        </member>
        <member name="M:ARCed.Helpers.ResourceHelper.RefreshLocal">
            <summary>
            Refreshes the collection of local resources
            </summary>
        </member>
        <member name="M:ARCed.Helpers.ResourceHelper.EnableLocalDirectory(System.Boolean)">
            <summary>
            Enables/disables local directory searching
            </summary>
            <param name="enable">Flag to enable or disable local searching</param>
        </member>
        <member name="M:ARCed.Helpers.ResourceHelper.GetTypes(System.String)">
            <summary>
            Finds all resources that can be found in the given relative path
            </summary>
            <param name="folder">Directory that will be searched. This path must be relative to
            both the project and the root directory of the RTP</param>
            <returns>Collection of found resources</returns>
        </member>
        <member name="M:ARCed.Helpers.ResourceHelper.GetFullPath(System.String,System.String)">
            <summary>
            Gets the full path to a file of the given type using the simple name of the file
            </summary>
            <param name="folder">Folder name where the file to be found is located.</param>
            <param name="name">Simple name of the file, without extension</param>
            <returns>Full path to the file</returns>
        </member>
        <member name="M:ARCed.Helpers.ResourceHelper.FileSystemWatcherRenamed(System.Object,System.IO.RenamedEventArgs)">
            <summary>
            Event raised when a file resource file is renamed
            </summary>
            <param name="sender">Invoker of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:ARCed.Helpers.ResourceHelper.FileSystemWatcherDeleted(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Event raised when a file resource file is deleted
            </summary>
            <param name="sender">Invoker of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:ARCed.Helpers.ResourceHelper.FileSystemWatcherCreated(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Event raised when a file resource file is created
            </summary>
            <param name="sender">Invoker of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.RtpWatcher">
            <summary>
            File watcher for RTP resources.
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.LocalWatcher">
            <summary>
            File watcher for local project resources.
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.Filters">
            <summary>
            Gets an array of filters used for searching resources
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.AllResources">
            <summary>
            Gets a collection of all resources used by the project, both RTP and local, audio and graphics.
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.RTPResources">
            <summary>
            Gets a collection of all resources found in the RTP directories
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.LocalResources">
            <summary>
            Gets a collection of all resources found in the local directories
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.AllGraphics">
            <summary>
            Gets a collection of all graphic resources, both local and RTP
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.AllAudio">
            <summary>
            Gets a collection of all audio resources, both local and RTP
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.LocalAudio">
            <summary>
            Gets a collection of all audio resources located in the local directory
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.RTPAudio">
            <summary>
            Gets a collection of all audio resources located in the RTP directory
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.LocalGraphics">
            <summary>
            Gets a collection of all graphic resources located in the local directory
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.RTPGraphics">
            <summary>
            Gets a collection of all graphic resources located in the RTP directory
            </summary>
        </member>
        <member name="P:ARCed.Helpers.ResourceHelper.IsInitialized">
            <summary>
            Gets the initialized status of the system
            </summary>
        </member>
        <member name="T:ARCed.Helpers.FontHelper">
            <summary>
            Static class for loading and creating Fonts in memory without the need to 
            have them installed.
            </summary>
            <remarks>In order for a memory font to be drawn on a control, it must be 
            rendered with GDI+, so "SetCompatibleTextRenderingDefault" must be set for  
            the application, or "UseCompatibleTextRendering" for individual controls.</remarks>
        </member>
        <member name="M:ARCed.Helpers.FontHelper.LoadUserFonts">
            <summary>
            Loads all TrueType fonts found in the application's "Fonts" folder into memory.
            </summary>
            <remarks>This method also loads resource fonts embedded into the application.</remarks>
        </member>
        <member name="M:ARCed.Helpers.FontHelper.GetFont(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            Creates and returns a font, first checking memorized fonts.
            </summary>
            <param name="familyName">Name of the font family</param>
            <param name="size">Size of the font</param>
            <param name="style">Style to apply to the font</param>
            <returns>Loaded font object</returns>
        </member>
        <member name="M:ARCed.Helpers.FontHelper.AddResourceFont(System.Byte[])">
            <summary>
            Adds a font from an array of bytes
            </summary>
            <param name="bytes">Array of bytes to read</param>
        </member>
        <member name="M:ARCed.Helpers.FontHelper.GetMemoryFont(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            Finds and creates a font from a font family previously loaded into memory
            </summary>
            <param name="familyName">Name of the font family</param>
            <param name="size">Size of the font</param>
            <param name="style">Style to apply to the font</param>
            <returns>Font loaded from memory, or null if font family could not be found.</returns>
        </member>
        <member name="M:ARCed.Helpers.FontHelper.AddFileFont(System.String)">
            <summary>
            Adds a private memory font from a file
            </summary>
            <param name="filename">The path of the file</param>
        </member>
        <member name="M:ARCed.Helpers.FontHelper.AddResourceFont(System.String)">
            <summary>
            Adds a private memory font from an embedded resource
            </summary>
            <param name="resourceName">The full names, including namespaces, of the resource file</param>
        </member>
        <member name="M:ARCed.Helpers.FontHelper.AddFont(System.IO.Stream)">
            <summary>
            Adds a private memory font from a stream
            </summary>
            <param name="stream">The stream to load the font from</param>
            <remarks>The stream will be closed automatically after the font is loaded</remarks>
        </member>
        <member name="M:ARCed.Helpers.FontHelper.IsInstalled(System.String)">
            <summary>
            Checks if a font is installed on the machine and returns the result
            </summary>
            <param name="fontName">The names of the font to check for</param>
            <returns>The result of the check</returns>
        </member>
        <member name="P:ARCed.Helpers.FontHelper.MonoFont">
            <summary>
            Returns the system's default monospace font
            </summary>
        </member>
        <member name="P:ARCed.Helpers.FontHelper.InstalledFonts">
            <summary>
            Gets a list of names of the system's installed fonts
            </summary>
        </member>
        <member name="P:ARCed.Helpers.FontHelper.FontCollection">
            <summary>
            Gets the private collection of fonts loaded into memory
            </summary>
        </member>
        <member name="P:ARCed.Helpers.FontHelper.Families">
            <summary>
            Gets an array of loaded font families in memory
            </summary>
        </member>
        <member name="T:ARCed.Settings.EquipmentSettings">
            <summary>
            Class containing settings for equipment slots. 
            </summary>
            <remarks>This class is a wrapper for a standard List of EquipSlotConfiguration objects</remarks>
        </member>
        <member name="P:ARCed.Settings.EquipmentSettings.RmxpConfiguration">
            <summary>
            Gets the default configuration used for a converted RMXP project.
            </summary>
        </member>
        <member name="T:ARCed.Settings.EquipSlotConfiguration">
            <summary>
            Contains settings determining the name, properties and types of equipment for an equipment slot.
            </summary>
        </member>
        <member name="M:ARCed.Settings.EquipSlotConfiguration.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ARCed.Settings.EquipSlotConfiguration.EquipKind">
            <summary>
            Gets or sets the kind of equipment this slot contains.
            </summary>
        </member>
        <member name="P:ARCed.Settings.EquipSlotConfiguration.Label">
            <summary>
            Gets or sets the associated label for the equipment slot.
            </summary>
        </member>
        <member name="P:ARCed.Settings.EquipSlotConfiguration.RpgIdProperty">
            <summary>
            Gets or sets the associated property name of the RPG class to modify
            </summary>
        </member>
        <member name="P:ARCed.Settings.EquipSlotConfiguration.RpgFixedProperty">
            <summary>
            Gets or sets the fixed flag indicating equipment can be changed.
            </summary>
        </member>
        <member name="T:RPG.Weapon">
            <summary>
            Data class for weapons.
            </summary>
        </member>
        <member name="M:RPG.Weapon.#ctor">
            <summary>
            Creates a new instance of an RPG.Weapon.
            </summary>
        </member>
        <member name="M:RPG.Weapon.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Weapon.id">
            <summary>
            The weapon ID.
            </summary>
        </member>
        <member name="P:RPG.Weapon.name">
            <summary>
            The weapon name.
            </summary>
        </member>
        <member name="P:RPG.Weapon.icon_name">
            <summary>
            The weapon's icon graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Weapon.description">
            <summary>
            The weapon description.
            </summary>
        </member>
        <member name="P:RPG.Weapon.animation1_id">
            <summary>
            The animation ID when using the weapon.
            </summary>
        </member>
        <member name="P:RPG.Weapon.animation2_id">
            <summary>
            The animation ID when on the receiving end of the weapon.
            </summary>
        </member>
        <member name="P:RPG.Weapon.price">
            <summary>
            The weapon's price.
            </summary>
        </member>
        <member name="P:RPG.Weapon.atk">
            <summary>
            The weapon's attack power.
            </summary>
        </member>
        <member name="P:RPG.Weapon.pdef">
            <summary>
            The weapon's physical defense rating.
            </summary>
        </member>
        <member name="P:RPG.Weapon.mdef">
            <summary>
            The weapon's magic defense rating.
            </summary>
        </member>
        <member name="P:RPG.Weapon.str_plus">
            <summary>
            The weapon's strength bonus.
            </summary>
        </member>
        <member name="P:RPG.Weapon.dex_plus">
            <summary>
            The weapon's dexterity bonus.
            </summary>
        </member>
        <member name="P:RPG.Weapon.agi_plus">
            <summary>
            The weapon's agility bonus.
            </summary>
        </member>
        <member name="P:RPG.Weapon.int_plus">
            <summary>
            The weapon's intelligence bonus.
            </summary>
        </member>
        <member name="P:RPG.Weapon.element_set">
            <summary>
            The weapon's element. An Elemental ID array.
            </summary>
        </member>
        <member name="P:RPG.Weapon.plus_state_set">
            <summary>
            States to add. A State ID collection.
            </summary>
        </member>
        <member name="P:RPG.Weapon.minus_state_set">
            <summary>
            States to cancel. A State ID collection.
            </summary>
        </member>
        <member name="T:RPG.RpgObject">
            <summary>
            A generic container for a basic game object
            </summary>
        </member>
        <member name="M:RPG.RpgObject.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:RPG.RpgObject.#ctor(System.String,System.Int32)">
            <summary>
            Default constructor
            </summary>
            <param name="name">Name of the object</param>
            <param name="id">ID of the object</param>
        </member>
        <member name="M:RPG.RpgObject.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.RpgObject.name">
            <summary>
            Gets or sets the name of the object
            </summary>
        </member>
        <member name="P:RPG.RpgObject.id">
            <summary>
            Gets or sets the ID of the object
            </summary>
        </member>
        <member name="T:RPG.Map">
            <summary>
            Data class for maps.
            </summary>
        </member>
        <member name="M:RPG.Map.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of an RPG.Map.
            </summary>
            <param name="width">The map width.</param>
            <param name="height">The map height.</param>
        </member>
        <member name="P:RPG.Map.tileset_id">
            <summary>
            Tileset ID to be used in the map.
            </summary>
        </member>
        <member name="P:RPG.Map.width">
            <summary>
            The map width.
            </summary>
        </member>
        <member name="P:RPG.Map.height">
            <summary>
            The map height.
            </summary>
        </member>
        <member name="P:RPG.Map.autoplay_bgm">
            <summary>
            Truth-value of whether BGM autoswitching is enabled.
            </summary>
        </member>
        <member name="P:RPG.Map.bgm">
            <summary>
            If BGM autoswitching is enabled, the name of that BGM (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.Map.autoplay_bgs">
            <summary>
            Truth-value of whether BGS autoswitching is enabled.
            </summary>
        </member>
        <member name="P:RPG.Map.bgs">
            <summary>
            If BGS autoswitching is enabled, the name of that BGS (<see cref="T:RPG.AudioFile"/>).
            </summary>
        </member>
        <member name="P:RPG.Map.encounter_list">
            <summary>
            Encounter list. A troop ID collection.
            </summary>
        </member>
        <member name="P:RPG.Map.encounter_step">
            <summary>
            Encounter list. A troop ID array.
            </summary>
        </member>
        <member name="P:RPG.Map.data">
            <summary>
            The map data. A 3-dimensional tile ID <see cref="T:Table"/>.
            </summary>
        </member>
        <member name="P:RPG.Map.events">
            <summary>
            Map events. A dictionary that represents RPG.Event instances as 
            values, using event IDs as the keys.
            </summary>
        </member>
        <member name="T:RPG.Event">
            <summary>
            Data class for map events.
            </summary>
        </member>
        <member name="M:RPG.Event.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of an RPG.Event.
            </summary>
            <param name="x">The event's X-coordinate on the map.</param>
            <param name="y">The event's Y-coordinate on the map.</param>
        </member>
        <member name="M:RPG.Event.ToString">
            <summary>
            Returns a <see langword="string"/> that represents the current object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="P:RPG.Event.id">
            <summary>
            The event ID.
            </summary>
        </member>
        <member name="P:RPG.Event.name">
            <summary>
            The event name.
            </summary>
        </member>
        <member name="P:RPG.Event.x">
            <summary>
            The event's X-coordinate on the map.
            </summary>
        </member>
        <member name="P:RPG.Event.y">
            <summary>
            The event's Y-coordinate on the map.
            </summary>
        </member>
        <member name="P:RPG.Event.pages">
            <summary>
            The Events pages. A collection of <see cref="T:RPG.Event.Page"/> objects.
            </summary>
        </member>
        <member name="T:RPG.Event.Page">
            <summary>
            Data class for the event page.
            </summary>
        </member>
        <member name="M:RPG.Event.Page.#ctor">
            <summary>
            Creates a new instance of an RPG.Event.Page.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.condition">
            <summary>
            The event condition.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.graphic">
            <summary>
            The event graphic.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.move_type">
            <summary>
            Type of movement (0: fixed, 1: random, 2: approach, 3: custom).
            </summary>
        </member>
        <member name="P:RPG.Event.Page.move_speed">
            <summary>
            Movement speed (1: slowest, 2: slower, 3: slow, 4: fast, 5: faster, 6: fastest).
            </summary>
        </member>
        <member name="P:RPG.Event.Page.move_frequency">
            <summary>
            Movement frequency (1: lowest, 2: lower, 3: low ,4: high, 5: higher, 6: highest).
            </summary>
        </member>
        <member name="P:RPG.Event.Page.move_route">
            <summary>
            Movement route. 
            Referenced only when the movement type is set to Custom.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.walk_anime">
            <summary>
            Truth value of the [Moving Animation] option.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.step_anime">
            <summary>
            Truth value of the [Stopped Animation] option.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.direction_fix">
            <summary>
            Truth value of the [Fixed Direction] option.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.through">
            <summary>
            Truth value of the [Move Through] option.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.always_on_top">
            <summary>
            Truth value of the [Always On Top] option.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.trigger">
            <summary>
            Event trigger.
            (0: action button, 1: contact with player, 2: contact with event, 3: autorun, 4: parallel processing).
            </summary>
        </member>
        <member name="P:RPG.Event.Page.list">
            <summary>
            Program contents. A collection of <see cref="T:RPG.EventCommand"/> objects.
            </summary>
        </member>
        <member name="T:RPG.Event.Page.Condition">
            <summary>
            Data class for event page conditions.
            </summary>
        </member>
        <member name="M:RPG.Event.Page.Condition.#ctor">
            <summary>
            Creates a new instance of an RPG.Event.Page.Condition.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Condition.switch1_valid">
            <summary>
            Truth value for whether the first [Switch] condition is valid.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Condition.switch2_valid">
            <summary>
            Truth value for whether the second [Switch] condition is valid.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Condition.variable_valid">
            <summary>
            Truth value for whether the [Variable] condition is valid.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Condition.self_switch_valid">
            <summary>
            Truth value for whether the [Self Switch] condition is valid.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Condition.switch1_id">
            <summary>
            If the first [Switch] condition is valid, the ID of that switch.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Condition.switch2_id">
            <summary>
            If the second [Switch] condition is valid, the ID of that switch.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Condition.variable_id">
            <summary>
            If the [Variable] condition is valid, the ID of that variable.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Condition.variable_value">
            <summary>
            If the [Variable] condition is valid, the standard value of that variable (x and greater).
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Condition.self_switch_ch">
            <summary>
            If the [Self Switch] condition is valid, the letter of that self switch ("A".."D").
            </summary>
        </member>
        <member name="T:RPG.Event.Page.Graphic">
            <summary>
            Data class for the Event page [Graphics].
            </summary>
        </member>
        <member name="M:RPG.Event.Page.Graphic.#ctor">
            <summary>
            Creates a new instance of an RPG.Event.Graphic.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Graphic.tile_id">
            <summary>
            The tile ID. If the specified graphic is not a tile, this value is 0.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Graphic.character_name">
            <summary>
            The character's graphic file name.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Graphic.character_hue">
            <summary>
            The adjustment value for the character graphic's hue (0..360).
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Graphic.direction">
            <summary>
            The direction in which the character is facing (2: down, 4: left, 6: right, 8: up).
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Graphic.pattern">
            <summary>
            The character's pattern (0..3).
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Graphic.opacity">
            <summary>
            The character's opacity.
            </summary>
        </member>
        <member name="P:RPG.Event.Page.Graphic.blend_type">
            <summary>
            The character's blending mode.
            </summary>
        </member>
        <member name="T:ARCed.ExtensionMethods">
            <summary>
            Static class that extends functionality of various data types
            </summary>
        </member>
        <member name="F:ARCed.ExtensionMethods._utf8">
            <summary>
            UTF-8 encoding instance used for byte-string conversions
            </summary>
        </member>
        <member name="F:ARCed.ExtensionMethods._buffer">
            <summary>
            Byte array used as a buffer for reading streams
            </summary>
        </member>
        <member name="M:ARCed.ExtensionMethods.RoundFloor(System.Int32,System.Int32)">
            <summary>
            Rounds an <seealso langword="int"/> down to the nearest multiple.
            </summary>
            <param name="value">Integer to round</param>
            <param name="multiple">Multiple to round down to.</param>
            <returns>The rounded number</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.RoundCeil(System.Int32,System.Int32)">
            <summary>
            Rounds an <seealso langword="int"/> up to the nearest multiple.
            </summary>
            <param name="value">Integer to round</param>
            <param name="multiple">Multiple to round up to.</param>
            <returns>The rounded number</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.SuspendPainting(System.Windows.Forms.Control)">
            <summary>
            Suspends painting of control until ResumePainting() is called.
            </summary>
            <param name="control">Control to suspend painting</param>
        </member>
        <member name="M:ARCed.ExtensionMethods.ResumePainting(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Resumes painting of the control that was suspended with SuspendPainting().
            </summary>
            <param name="control">Control to resume painting</param>
            <param name="refresh">Flag to refresh control.</param>
        </member>
        <member name="M:ARCed.ExtensionMethods.PadCenter(System.String,System.Int32,System.Char)">
            <summary>
            Pads the center of a string with the given character
            </summary>
            <param name="str">String to pad</param>
            <param name="width">The width of the string</param>
            <param name="chr">Character to pad with</param>
            <returns>The string padded in the center</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.NumberDigits(System.Int32)">
            <summary>
            Gets the number of digits in a number
            </summary>
            <param name="value">Integer to get digits of</param>
            <returns>Number of digits counted</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.ReadByteString(System.IO.Stream,System.Int32)">
            <summary>
            Reads the specified number of bytes from the stream and returns it as a UTF-8 encoded string
            </summary>
            <param name="stream">Stream to read</param>
            <param name="numBytes">Number of bytes to read</param>
            <returns>UTF-8 encoded string</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.ReadBytes(System.IO.Stream,System.Int32)">
            <summary>
            Reads the specified number of bytes from the current position if the stream
            </summary>
            <param name="stream">Stream to read</param>
            <param name="numBytes">Number of bytes to read</param>
            <returns>Array of bytes that were read</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.GetString(System.Byte[])">
            <summary>
            Returns a UTF-8 encoded string from an array of bytes
            </summary>
            <param name="value">Array of bytes to convert</param>
            <returns>UTF-8 encoded string</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.GetBytes(System.String)">
            <summary>
            Returns the string as an array of bytes
            </summary>
            <param name="value">String value to convert</param>
            <returns>Array of bytes</returns>
            <remarks>The string is assumed to be encoded using UTF-8</remarks>
        </member>
        <member name="M:ARCed.ExtensionMethods.GetBytes(System.Int16)">
            <summary>
            Gets a byte array of the value
            </summary>
            <param name="value">Short value</param>
            <returns>Two element byte array</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.GetBytes(System.Int32)">
            <summary>
            Gets a byte array of the value
            </summary>
            <param name="value">Integer value</param>
            <returns>Four element byte array</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.IsBetween(System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks if integer is between an upper and lower range
            </summary>
            <param name="value">Integer value to compare</param>
            <param name="lower">Lower limit to check</param>
            <param name="upper">Upper limit to check</param>
            <returns>True if value is withing range, otherwise false</returns>
            <remarks>Comparison is inclusive for upper and lower</remarks>
        </member>
        <member name="M:ARCed.ExtensionMethods.Clamp``1(``0,``0,``0)">
            <summary>
            Clamps a value within a given minimum and maximum
            </summary>
            <typeparam name="T">Type of object that interfaces IComparable</typeparam>
            <param name="value">Value of object</param>
            <param name="min">Minimum value that will be returned</param>
            <param name="max">Maximum value that will be returned</param>
            <returns>Value clamped between the minimum and maximum</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.IsNumber(System.Object)">
            <summary>
            Checks an object if it us a numerical type
            </summary>
            <param name="value">Object to check</param>
            <returns>Flag if object is numerical or not</returns>
        </member>
        <member name="M:ARCed.ExtensionMethods.HasMethod(System.Object,System.String)">
            <summary>
            Checks if a type has the given method and returns the result
            </summary>
            <param name="objectToCheck">Object to check for the method</param>
            <param name="methodName">String name of the method</param>
            <returns>Flag if object type has given method</returns>
            <remarks>CharacterStance case of the string will be ignored</remarks>
        </member>
    </members>
</doc>
