module ARC_EXTRA_INCLUDES
  EXTRAS = [['Data/RMXP.rb', "# this makes sure that Kernel#require and Kernel#load don't need (but still accept) a full path anymore\r\n$:.clear\r\n$:.push(Dir.getwd)\r\n\r\n# wrapper for RMXP's Win32API class\r\nclass Win32API\r\n  \r\n  def initialize(dllname, func, import, export = \"0\", calltype = :stdcall)\r\n    import = import.join('') if import.is_a?(Array)\r\n    export = export.join('') if export.is_a?(Array)\r\n    import.upcase!\r\n    export.upcase!\r\n    @api = Win32::API.new(func, import, export, dllname)\r\n  end\r\n\r\n  def call(*args)\r\n    return @api.call(*args)\r\n  end\r\n\r\n  alias Call call\r\n  \r\nend\r\n"],
            ['Data/System.rb',
            "# Included Classes\r\n#   RPG::Actor\r\n#   RPG::Animation\r\n#   RPG::Animation::Frame\r\n#   RPG::Animation::Timing\r\n#   RPG::Armor\r\n#   RPG::AudioFile\r\n#   RPG::Cache\r\n#   RPG::Class\r\n#   RPG::Class::Learning\r\n#   RPG::CommonEvent\r\n#   RPG::Enemy\r\n#   RPG::Enemy::Action\r\n#   RPG::Event\r\n#   RPG::Event::Page\r\n#   RPG::Event::Page::Condition\r\n#   RPG::Event::Page::Graphic\r\n#   RPG::EventCommand\r\n#   RPG::Item\r\n#   RPG::Map\r\n#   RPG::MapInfo\r\n#   RPG::MoveCommand\r\n#   RPG::MoveRoute\r\n#   RPG::Skill\r\n#   RPG::Sprite\r\n#   RPG::State\r\n#   RPG::System\r\n#   RPG::System::TestBattler\r\n#   RPG::System::Words\r\n#   RPG::Tileset\r\n#   RPG::Troop\r\n#   RPG::Troop::Member\r\n#   RPG::Troop::Page\r\n#   RPG::Troop::Page::Condition\r\n#   RPG::Weapon\r\n#   RPG::Weather\r\n\r\nmodule RPG\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Actor\r\n#-------------------------------------------------------------------------------------\r\n  class Actor\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :class_id\r\n    attr_accessor :initial_level\r\n    attr_accessor :final_level\r\n    attr_accessor :exp_basis\r\n    attr_accessor :exp_inflation\r\n    attr_accessor :character_name\r\n    attr_accessor :character_hue\r\n    attr_accessor :battler_name\r\n    attr_accessor :battler_hue\r\n    attr_accessor :parameters\r\n    attr_accessor :weapon_id\r\n    attr_accessor :armor1_id\r\n    attr_accessor :armor2_id\r\n    attr_accessor :armor3_id\r\n    attr_accessor :armor4_id\r\n    attr_accessor :weapon_fix\r\n    attr_accessor :armor1_fix\r\n    attr_accessor :armor2_fix\r\n    attr_accessor :armor3_fix\r\n    attr_accessor :armor4_fix\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @class_id = 1\r\n      @initial_level = 1\r\n      @final_level = 99\r\n      @exp_basis = 30\r\n      @exp_inflation = 30\r\n      @character_name = \"\"\r\n      @character_hue = 0\r\n      @battler_name = \"\"\r\n      @battler_hue = 0\r\n      @parameters = Table.new(6,100)\r\n      for i in 1..99\r\n        @parameters[0,i] = 500+i*50\r\n        @parameters[1,i] = 500+i*50\r\n        @parameters[2,i] = 50+i*5\r\n        @parameters[3,i] = 50+i*5\r\n        @parameters[4,i] = 50+i*5\r\n        @parameters[5,i] = 50+i*5\r\n      end\r\n      @weapon_id = 0\r\n      @armor1_id = 0\r\n      @armor2_id = 0\r\n      @armor3_id = 0\r\n      @armor4_id = 0\r\n      @weapon_fix = false\r\n      @armor1_fix = false\r\n      @armor2_fix = false\r\n      @armor3_fix = false\r\n      @armor4_fix = false\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Animation\r\n#-------------------------------------------------------------------------------------\r\n  class Animation\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :animation_name\r\n    attr_accessor :animation_hue\r\n    attr_accessor :position\r\n    attr_accessor :frame_max\r\n    attr_accessor :frames\r\n    attr_accessor :timings\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @animation_name = \"\"\r\n      @animation_hue = 0\r\n      @position = 1\r\n      @frame_max = 1\r\n      @frames = [RPG::Animation::Frame.new]\r\n      @timings = []\r\n    end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Animation::Frame\r\n#-------------------------------------------------------------------------------------\r\n    class Frame\r\n      attr_accessor :cell_max\r\n      attr_accessor :cell_data\r\n      def initialize\r\n        @cell_max = 0\r\n        @cell_data = Table.new(0, 0)\r\n      end\r\n    end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Animation::Timing\r\n#-------------------------------------------------------------------------------------\r\n    class Timing\r\n      attr_accessor :frame\r\n      attr_accessor :se\r\n      attr_accessor :flash_scope\r\n      attr_accessor :flash_color\r\n      attr_accessor :flash_duration\r\n      attr_accessor :condition\r\n      def initialize\r\n        @frame = 0\r\n        @se = RPG::AudioFile.new(\"\", 80)\r\n        @flash_scope = 0\r\n        @flash_color = Color.new(255,255,255,255)\r\n        @flash_duration = 5\r\n        @condition = 0\r\n      end\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Armor\r\n#-------------------------------------------------------------------------------------\r\n  class Armor\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :icon_name\r\n    attr_accessor :description\r\n    attr_accessor :kind\r\n    attr_accessor :auto_state_id\r\n    attr_accessor :price\r\n    attr_accessor :pdef\r\n    attr_accessor :mdef\r\n    attr_accessor :eva\r\n    attr_accessor :str_plus\r\n    attr_accessor :dex_plus\r\n    attr_accessor :agi_plus\r\n    attr_accessor :int_plus\r\n    attr_accessor :guard_element_set\r\n    attr_accessor :guard_state_set\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @icon_name = \"\"\r\n      @description = \"\"\r\n      @kind = 0\r\n      @auto_state_id = 0\r\n      @price = 0\r\n      @pdef = 0\r\n      @mdef = 0\r\n      @eva = 0\r\n      @str_plus = 0\r\n      @dex_plus = 0\r\n      @agi_plus = 0\r\n      @int_plus = 0\r\n      @guard_element_set = []\r\n      @guard_state_set = []\r\n    end  \r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::AudioFile\r\n#-------------------------------------------------------------------------------------\r\n  class AudioFile\r\n    attr_accessor :name\r\n    attr_accessor :volume\r\n    attr_accessor :pitch\r\n    def initialize(name = \"\", volume = 100, pitch = 100)\r\n      @name = name\r\n      @volume = volume\r\n      @pitch = pitch\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Cache\r\n#-------------------------------------------------------------------------------------\r\n  module Cache\r\n    @cache = {}\r\n    def self.load_bitmap(folder_name, filename, hue = 0)\r\n      path = folder_name + filename\r\n      if not @cache.include?(path) or @cache[path].disposed?\r\n        if filename != \"\"\r\n          @cache[path] = Bitmap.new(path)\r\n        else\r\n          @cache[path] = Bitmap.new(32, 32)\r\n        end\r\n      end\r\n      if hue == 0\r\n        @cache[path]\r\n      else\r\n        key = [path, hue]\r\n        if not @cache.include?(key) or @cache[key].disposed?\r\n          @cache[key] = @cache[path].clone\r\n          @cache[key].hue_change(hue)\r\n        end\r\n        @cache[key]\r\n      end\r\n    end\r\n    def self.animation(filename, hue)\r\n      self.load_bitmap(\"Graphics/Animations/\", filename, hue)\r\n    end\r\n    def self.autotile(filename)\r\n      self.load_bitmap(\"Graphics/Autotiles/\", filename)\r\n    end\r\n    def self.battleback(filename)\r\n      self.load_bitmap(\"Graphics/Battlebacks/\", filename)\r\n    end\r\n    def self.battler(filename, hue)\r\n      self.load_bitmap(\"Graphics/Battlers/\", filename, hue)\r\n    end\r\n    def self.character(filename, hue)\r\n      self.load_bitmap(\"Graphics/Characters/\", filename, hue)\r\n    end\r\n    def self.fog(filename, hue)\r\n      self.load_bitmap(\"Graphics/Fogs/\", filename, hue)\r\n    end\r\n    def self.gameover(filename)\r\n      self.load_bitmap(\"Graphics/Gameovers/\", filename)\r\n    end\r\n    def self.icon(filename)\r\n      self.load_bitmap(\"Graphics/Icons/\", filename)\r\n    end\r\n    def self.panorama(filename, hue)\r\n      self.load_bitmap(\"Graphics/Panoramas/\", filename, hue)\r\n    end\r\n    def self.picture(filename)\r\n      self.load_bitmap(\"Graphics/Pictures/\", filename)\r\n    end\r\n    def self.tileset(filename)\r\n      self.load_bitmap(\"Graphics/Tilesets/\", filename)\r\n    end\r\n    def self.title(filename)\r\n      self.load_bitmap(\"Graphics/Titles/\", filename)\r\n    end\r\n    def self.windowskin(filename)\r\n      self.load_bitmap(\"Graphics/Windowskins/\", filename)\r\n    end\r\n    def self.tile(filename, tile_id, hue)\r\n      key = [filename, tile_id, hue]\r\n      if not @cache.include?(key) or @cache[key].disposed?\r\n        @cache[key] = Bitmap.new(32, 32)\r\n        x = (tile_id - 384) % 8 * 32\r\n        y = (tile_id - 384) / 8 * 32\r\n        rect = Rect.new(x, y, 32, 32)\r\n        @cache[key].blt(0, 0, self.tileset(filename), rect)\r\n        @cache[key].hue_change(hue)\r\n      end\r\n      @cache[key]\r\n    end\r\n    def self.clear\r\n      @cache = {}\r\n      GC.start\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Class\r\n#-------------------------------------------------------------------------------------\r\n  class Class\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :position\r\n    attr_accessor :weapon_set\r\n    attr_accessor :armor_set\r\n    attr_accessor :element_ranks\r\n    attr_accessor :state_ranks\r\n    attr_accessor :learnings\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @position = 0\r\n      @weapon_set = []\r\n      @armor_set = []\r\n      @element_ranks = Table.new(1)\r\n      @state_ranks = Table.new(1)\r\n      @learnings = []\r\n    end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Class::Learning\r\n#-------------------------------------------------------------------------------------\r\n    class Learning\r\n      attr_accessor :level\r\n      attr_accessor :skill_id\r\n      def initialize\r\n        @level = 1\r\n        @skill_id = 1\r\n      end\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::CommonEvent\r\n#-------------------------------------------------------------------------------------\r\n  class CommonEvent\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :trigger\r\n    attr_accessor :switch_id\r\n    attr_accessor :list\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @trigger = 0\r\n      @switch_id = 1\r\n      @list = [RPG::EventCommand.new]\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Enemy\r\n#-------------------------------------------------------------------------------------\r\n  class Enemy\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :battler_name\r\n    attr_accessor :battler_hue\r\n    attr_accessor :maxhp\r\n    attr_accessor :maxsp\r\n    attr_accessor :str\r\n    attr_accessor :dex\r\n    attr_accessor :agi\r\n    attr_accessor :int\r\n    attr_accessor :atk\r\n    attr_accessor :pdef\r\n    attr_accessor :mdef\r\n    attr_accessor :eva\r\n    attr_accessor :animation1_id\r\n    attr_accessor :animation2_id\r\n    attr_accessor :element_ranks\r\n    attr_accessor :state_ranks\r\n    attr_accessor :actions\r\n    attr_accessor :exp\r\n    attr_accessor :gold\r\n    attr_accessor :item_id\r\n    attr_accessor :weapon_id\r\n    attr_accessor :armor_id\r\n    attr_accessor :treasure_prob\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @battler_name = \"\"\r\n      @battler_hue = 0\r\n      @maxhp = 500\r\n      @maxsp = 500\r\n      @str = 50\r\n      @dex = 50\r\n      @agi = 50\r\n      @int = 50\r\n      @atk = 100\r\n      @pdef = 100\r\n      @mdef = 100\r\n      @eva = 0\r\n      @animation1_id = 0\r\n      @animation2_id = 0\r\n      @element_ranks = Table.new(1)\r\n      @state_ranks = Table.new(1)\r\n      @actions = [RPG::Enemy::Action.new]\r\n      @exp = 0\r\n      @gold = 0\r\n      @item_id = 0\r\n      @weapon_id = 0\r\n      @armor_id = 0\r\n      @treasure_prob = 100\r\n    end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Enemy::Action\r\n#-------------------------------------------------------------------------------------\r\n    class Action\r\n      attr_accessor :kind\r\n      attr_accessor :basic\r\n      attr_accessor :skill_id\r\n      attr_accessor :condition_turn_a\r\n      attr_accessor :condition_turn_b\r\n      attr_accessor :condition_hp\r\n      attr_accessor :condition_level\r\n      attr_accessor :condition_switch_id\r\n      attr_accessor :rating\r\n      def initialize\r\n        @kind = 0\r\n        @basic = 0\r\n        @skill_id = 1\r\n        @condition_turn_a = 0\r\n        @condition_turn_b = 1\r\n        @condition_hp = 100\r\n        @condition_level = 1\r\n        @condition_switch_id = 0\r\n        @rating = 5\r\n      end\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Event\r\n#-------------------------------------------------------------------------------------\r\n  class Event\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :x\r\n    attr_accessor :y\r\n    attr_accessor :pages\r\n    def initialize(x, y)\r\n      @id = 0\r\n      @name = \"\"\r\n      @x = x\r\n      @y = y\r\n      @pages = [RPG::Event::Page.new]\r\n    end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Event::Page\r\n#-------------------------------------------------------------------------------------\r\n    class Page\r\n      attr_accessor :condition\r\n      attr_accessor :graphic\r\n      attr_accessor :move_type\r\n      attr_accessor :move_speed\r\n      attr_accessor :move_frequency\r\n      attr_accessor :move_route\r\n      attr_accessor :walk_anime\r\n      attr_accessor :step_anime\r\n      attr_accessor :direction_fix\r\n      attr_accessor :through\r\n      attr_accessor :always_on_top\r\n      attr_accessor :trigger\r\n      attr_accessor :list\r\n      def initialize\r\n        @condition = RPG::Event::Page::Condition.new\r\n        @graphic = RPG::Event::Page::Graphic.new\r\n        @move_type = 0\r\n        @move_speed = 3\r\n        @move_frequency = 3\r\n        @move_route = RPG::MoveRoute.new\r\n        @walk_anime = true\r\n        @step_anime = false\r\n        @direction_fix = false\r\n        @through = false\r\n        @always_on_top = false\r\n        @trigger = 0\r\n        @list = [RPG::EventCommand.new]\r\n      end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Event::Page::Condition\r\n#-------------------------------------------------------------------------------------\r\n      class Condition\r\n        attr_accessor :switch1_valid\r\n        attr_accessor :switch2_valid\r\n        attr_accessor :variable_valid\r\n        attr_accessor :self_switch_valid\r\n        attr_accessor :switch1_id\r\n        attr_accessor :switch2_id\r\n        attr_accessor :variable_id\r\n        attr_accessor :variable_value\r\n        attr_accessor :self_switch_ch\r\n        def initialize\r\n          @switch1_valid = false\r\n          @switch2_valid = false\r\n          @variable_valid = false\r\n          @self_switch_valid = false\r\n          @switch1_id = 1\r\n          @switch2_id = 1\r\n          @variable_id = 1\r\n          @variable_value = 0\r\n          @self_switch_ch = \"A\"\r\n        end\r\n      end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Event::Page:Graphic\r\n#-------------------------------------------------------------------------------------\r\n      class Graphic\r\n        attr_accessor :tile_id\r\n        attr_accessor :character_name\r\n        attr_accessor :character_hue\r\n        attr_accessor :direction\r\n        attr_accessor :pattern\r\n        attr_accessor :opacity\r\n        attr_accessor :blend_type\r\n        def initialize\r\n          @tile_id = 0\r\n          @character_name = \"\"\r\n          @character_hue = 0\r\n          @direction = 2\r\n          @pattern = 0\r\n          @opacity = 255\r\n          @blend_type = 0\r\n        end\r\n      end\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::EventCommand\r\n#-------------------------------------------------------------------------------------\r\n  class EventCommand\r\n    attr_accessor :code\r\n    attr_accessor :indent\r\n    attr_accessor :parameters\r\n    def initialize(code = 0, indent = 0, parameters = [])\r\n      @code = code\r\n      @indent = indent\r\n      @parameters = parameters\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Item\r\n#-------------------------------------------------------------------------------------\r\n  class Item\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :icon_name\r\n    attr_accessor :description\r\n    attr_accessor :scope\r\n    attr_accessor :occasion\r\n    attr_accessor :animation1_id\r\n    attr_accessor :animation2_id\r\n    attr_accessor :menu_se\r\n    attr_accessor :common_event_id\r\n    attr_accessor :price\r\n    attr_accessor :consumable\r\n    attr_accessor :parameter_type\r\n    attr_accessor :parameter_points\r\n    attr_accessor :recover_hp_rate\r\n    attr_accessor :recover_hp\r\n    attr_accessor :recover_sp_rate\r\n    attr_accessor :recover_sp\r\n    attr_accessor :hit\r\n    attr_accessor :pdef_f\r\n    attr_accessor :mdef_f\r\n    attr_accessor :variance\r\n    attr_accessor :element_set\r\n    attr_accessor :plus_state_set\r\n    attr_accessor :minus_state_set\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @icon_name = \"\"\r\n      @description = \"\"\r\n      @scope = 0\r\n      @occasion = 0\r\n      @animation1_id = 0\r\n      @animation2_id = 0\r\n      @menu_se = RPG::AudioFile.new(\"\", 80)\r\n      @common_event_id = 0\r\n      @price = 0\r\n      @consumable = true\r\n      @parameter_type = 0\r\n      @parameter_points = 0\r\n      @recover_hp_rate = 0\r\n      @recover_hp = 0\r\n      @recover_sp_rate = 0\r\n      @recover_sp = 0\r\n      @hit = 100\r\n      @pdef_f = 0\r\n      @mdef_f = 0\r\n      @variance = 0\r\n      @element_set = []\r\n      @plus_state_set = []\r\n      @minus_state_set = []\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Map\r\n#-------------------------------------------------------------------------------------\r\n  class Map\r\n    attr_accessor :tileset_id\r\n    attr_accessor :width\r\n    attr_accessor :height\r\n    attr_accessor :autoplay_bgm\r\n    attr_accessor :bgm\r\n    attr_accessor :autoplay_bgs\r\n    attr_accessor :bgs\r\n    attr_accessor :encounter_list\r\n    attr_accessor :encounter_step\r\n    attr_accessor :data\r\n    attr_accessor :events\r\n    def initialize(width, height)\r\n      @tileset_id = 1\r\n      @width = width\r\n      @height = height\r\n      @autoplay_bgm = false\r\n      @bgm = RPG::AudioFile.new\r\n      @autoplay_bgs = false\r\n      @bgs = RPG::AudioFile.new(\"\", 80)\r\n      @encounter_list = []\r\n      @encounter_step = 30\r\n      @data = Table.new(width, height, 3)\r\n      @events = {}\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::MapInfo\r\n#-------------------------------------------------------------------------------------\r\n  class MapInfo\r\n    attr_accessor :name\r\n    attr_accessor :parent_id\r\n    attr_accessor :order\r\n    attr_accessor :expanded\r\n    attr_accessor :scroll_x\r\n    attr_accessor :scroll_y\r\n    def initialize\r\n      @name = \"\"\r\n      @parent_id = 0\r\n      @order = 0\r\n      @expanded = false\r\n      @scroll_x = 0\r\n      @scroll_y = 0\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::MoveCommand\r\n#-------------------------------------------------------------------------------------\r\n  class MoveCommand\r\n    attr_accessor :code\r\n    attr_accessor :parameters\r\n    def initialize(code = 0, parameters = [nil] )\r\n      @code = code\r\n      @parameters = parameters\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::MoveRoute\r\n#-------------------------------------------------------------------------------------\r\n  class MoveRoute\r\n    attr_accessor :repeat\r\n    attr_accessor :skippable\r\n    attr_accessor :list\r\n    def initialize\r\n      @repeat = true\r\n      @skippable = false\r\n      @list = [RPG::MoveCommand.new]\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Skill\r\n#-------------------------------------------------------------------------------------\r\n  class Skill\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :icon_name\r\n    attr_accessor :description\r\n    attr_accessor :scope\r\n    attr_accessor :occasion\r\n    attr_accessor :animation1_id\r\n    attr_accessor :animation2_id\r\n    attr_accessor :menu_se\r\n    attr_accessor :common_event_id\r\n    attr_accessor :sp_cost\r\n    attr_accessor :power\r\n    attr_accessor :atk_f\r\n    attr_accessor :eva_f\r\n    attr_accessor :str_f\r\n    attr_accessor :dex_f\r\n    attr_accessor :agi_f\r\n    attr_accessor :int_f\r\n    attr_accessor :hit\r\n    attr_accessor :pdef_f\r\n    attr_accessor :mdef_f\r\n    attr_accessor :variance\r\n    attr_accessor :element_set\r\n    attr_accessor :plus_state_set\r\n    attr_accessor :minus_state_set\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @icon_name = \"\"\r\n      @description = \"\"\r\n      @scope = 0\r\n      @occasion = 1\r\n      @animation1_id = 0\r\n      @animation2_id = 0\r\n      @menu_se = RPG::AudioFile.new(\"\", 80)\r\n      @common_event_id = 0\r\n      @sp_cost = 0\r\n      @power = 0\r\n      @atk_f = 0\r\n      @eva_f = 0\r\n      @str_f = 0\r\n      @dex_f = 0\r\n      @agi_f = 0\r\n      @int_f = 100\r\n      @hit = 100\r\n      @pdef_f = 0\r\n      @mdef_f = 100\r\n      @variance = 15\r\n      @element_set = []\r\n      @plus_state_set = []\r\n      @minus_state_set = []\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Sprite\r\n#-------------------------------------------------------------------------------------\r\n class Sprite < ::Sprite\r\n    @@_animations = []\r\n    @@_reference_count = {}\r\n    def initialize(viewport = nil)\r\n      super(viewport)\r\n      @_whiten_duration = 0\r\n      @_appear_duration = 0\r\n      @_escape_duration = 0\r\n      @_collapse_duration = 0\r\n      @_damage_duration = 0\r\n      @_animation_duration = 0\r\n      @_blink = false\r\n    end\r\n    def dispose\r\n      dispose_damage\r\n      dispose_animation\r\n      dispose_loop_animation\r\n      super\r\n    end\r\n    def whiten\r\n      self.blend_type = 0\r\n      self.color.set(255, 255, 255, 128)\r\n      self.opacity = 255\r\n      @_whiten_duration = 16\r\n      @_appear_duration = 0\r\n      @_escape_duration = 0\r\n      @_collapse_duration = 0\r\n    end\r\n    def appear\r\n      self.blend_type = 0\r\n      self.color.set(0, 0, 0, 0)\r\n      self.opacity = 0\r\n      @_appear_duration = 16\r\n      @_whiten_duration = 0\r\n      @_escape_duration = 0\r\n      @_collapse_duration = 0\r\n    end\r\n    def escape\r\n      self.blend_type = 0\r\n      self.color.set(0, 0, 0, 0)\r\n      self.opacity = 255\r\n      @_escape_duration = 32\r\n      @_whiten_duration = 0\r\n      @_appear_duration = 0\r\n      @_collapse_duration = 0\r\n    end\r\n    def collapse\r\n      self.blend_type = 1\r\n      self.color.set(255, 64, 64, 255)\r\n      self.opacity = 255\r\n      @_collapse_duration = 48\r\n      @_whiten_duration = 0\r\n      @_appear_duration = 0\r\n      @_escape_duration = 0\r\n    end\r\n    def damage(value, critical)\r\n      dispose_damage\r\n      if value.is_a?(Numeric)\r\n        damage_string = value.abs.to_s\r\n      else\r\n        damage_string = value.to_s\r\n      end\r\n      bitmap = Bitmap.new(160, 48)\r\n      bitmap.font.name = \"Arial Black\"\r\n      bitmap.font.size = 32\r\n      bitmap.font.color.set(0, 0, 0)\r\n      bitmap.draw_text(-1, 12-1, 160, 36, damage_string, 1)\r\n      bitmap.draw_text(+1, 12-1, 160, 36, damage_string, 1)\r\n      bitmap.draw_text(-1, 12+1, 160, 36, damage_string, 1)\r\n      bitmap.draw_text(+1, 12+1, 160, 36, damage_string, 1)\r\n      if value.is_a?(Numeric) and value < 0\r\n        bitmap.font.color.set(176, 255, 144)\r\n      else\r\n        bitmap.font.color.set(255, 255, 255)\r\n      end\r\n      bitmap.draw_text(0, 12, 160, 36, damage_string, 1)\r\n      if critical\r\n        bitmap.font.size = 20\r\n        bitmap.font.color.set(0, 0, 0)\r\n        bitmap.draw_text(-1, -1, 160, 20, \"CRITICAL\", 1)\r\n        bitmap.draw_text(+1, -1, 160, 20, \"CRITICAL\", 1)\r\n        bitmap.draw_text(-1, +1, 160, 20, \"CRITICAL\", 1)\r\n        bitmap.draw_text(+1, +1, 160, 20, \"CRITICAL\", 1)\r\n        bitmap.font.color.set(255, 255, 255)\r\n        bitmap.draw_text(0, 0, 160, 20, \"CRITICAL\", 1)\r\n      end\r\n      @_damage_sprite = ::Sprite.new(self.viewport)\r\n      @_damage_sprite.bitmap = bitmap\r\n      @_damage_sprite.ox = 80\r\n      @_damage_sprite.oy = 20\r\n      @_damage_sprite.x = self.x\r\n      @_damage_sprite.y = self.y - self.oy / 2\r\n      @_damage_sprite.z = 3000\r\n      @_damage_duration = 40\r\n    end\r\n    def animation(animation, hit)\r\n      dispose_animation\r\n      @_animation = animation\r\n      return if @_animation == nil\r\n      @_animation_hit = hit\r\n      @_animation_duration = @_animation.frame_max\r\n      animation_name = @_animation.animation_name\r\n      animation_hue = @_animation.animation_hue\r\n      bitmap = RPG::Cache.animation(animation_name, animation_hue)\r\n      if @@_reference_count.include?(bitmap)\r\n        @@_reference_count[bitmap] += 1\r\n      else\r\n        @@_reference_count[bitmap] = 1\r\n      end\r\n      @_animation_sprites = []\r\n      if @_animation.position != 3 or not @@_animations.include?(animation)\r\n        for i in 0..15\r\n          sprite = ::Sprite.new(self.viewport)\r\n          sprite.bitmap = bitmap\r\n          sprite.visible = false\r\n          @_animation_sprites.push(sprite)\r\n        end\r\n        unless @@_animations.include?(animation)\r\n          @@_animations.push(animation)\r\n        end\r\n      end\r\n      update_animation\r\n    end\r\n    def loop_animation(animation)\r\n      return if animation == @_loop_animation\r\n      dispose_loop_animation\r\n      @_loop_animation = animation\r\n      return if @_loop_animation == nil\r\n      @_loop_animation_index = 0\r\n      animation_name = @_loop_animation.animation_name\r\n      animation_hue = @_loop_animation.animation_hue\r\n      bitmap = RPG::Cache.animation(animation_name, animation_hue)\r\n      if @@_reference_count.include?(bitmap)\r\n        @@_reference_count[bitmap] += 1\r\n      else\r\n        @@_reference_count[bitmap] = 1\r\n      end\r\n      @_loop_animation_sprites = []\r\n      for i in 0..15\r\n        sprite = ::Sprite.new(self.viewport)\r\n        sprite.bitmap = bitmap\r\n        sprite.visible = false\r\n        @_loop_animation_sprites.push(sprite)\r\n      end\r\n      update_loop_animation\r\n    end\r\n    def dispose_damage\r\n      if @_damage_sprite != nil\r\n        @_damage_sprite.bitmap.dispose\r\n        @_damage_sprite.dispose\r\n        @_damage_sprite = nil\r\n        @_damage_duration = 0\r\n      end\r\n    end\r\n    def dispose_animation\r\n      if @_animation_sprites != nil\r\n        sprite = @_animation_sprites[0]\r\n        if sprite != nil\r\n          @@_reference_count[sprite.bitmap] -= 1\r\n          if @@_reference_count[sprite.bitmap] == 0\r\n            sprite.bitmap.dispose\r\n          end\r\n        end\r\n        for sprite in @_animation_sprites\r\n          sprite.dispose\r\n        end\r\n        @_animation_sprites = nil\r\n        @_animation = nil\r\n      end\r\n    end\r\n    def dispose_loop_animation\r\n      if @_loop_animation_sprites != nil\r\n        sprite = @_loop_animation_sprites[0]\r\n        if sprite != nil\r\n          @@_reference_count[sprite.bitmap] -= 1\r\n          if @@_reference_count[sprite.bitmap] == 0\r\n            sprite.bitmap.dispose\r\n          end\r\n        end\r\n        for sprite in @_loop_animation_sprites\r\n          sprite.dispose\r\n        end\r\n        @_loop_animation_sprites = nil\r\n        @_loop_animation = nil\r\n      end\r\n    end\r\n    def blink_on\r\n      unless @_blink\r\n        @_blink = true\r\n        @_blink_count = 0\r\n      end\r\n    end\r\n    def blink_off\r\n      if @_blink\r\n        @_blink = false\r\n        self.color.set(0, 0, 0, 0)\r\n      end\r\n    end\r\n    def blink?\r\n      @_blink\r\n    end\r\n    def effect?\r\n      @_whiten_duration > 0 or\r\n      @_appear_duration > 0 or\r\n      @_escape_duration > 0 or\r\n      @_collapse_duration > 0 or\r\n      @_damage_duration > 0 or\r\n      @_animation_duration > 0\r\n    end\r\n    def update\r\n      super\r\n      if @_whiten_duration > 0\r\n        @_whiten_duration -= 1\r\n        self.color.alpha = 128 - (16 - @_whiten_duration) * 10\r\n      end\r\n      if @_appear_duration > 0\r\n        @_appear_duration -= 1\r\n        self.opacity = (16 - @_appear_duration) * 16\r\n      end\r\n      if @_escape_duration > 0\r\n        @_escape_duration -= 1\r\n        self.opacity = 256 - (32 - @_escape_duration) * 10\r\n      end\r\n      if @_collapse_duration > 0\r\n        @_collapse_duration -= 1\r\n        self.opacity = 256 - (48 - @_collapse_duration) * 6\r\n      end\r\n      if @_damage_duration > 0\r\n        @_damage_duration -= 1\r\n        case @_damage_duration\r\n        when 38..39\r\n          @_damage_sprite.y -= 4\r\n        when 36..37\r\n          @_damage_sprite.y -= 2\r\n        when 34..35\r\n          @_damage_sprite.y += 2\r\n        when 28..33\r\n          @_damage_sprite.y += 4\r\n        end\r\n        @_damage_sprite.opacity = 256 - (12 - @_damage_duration) * 32\r\n        if @_damage_duration == 0\r\n          dispose_damage\r\n        end\r\n      end\r\n      if @_animation != nil and (Graphics.frame_count % 2 == 0)\r\n        @_animation_duration -= 1\r\n        update_animation\r\n      end\r\n      if @_loop_animation != nil and (Graphics.frame_count % 2 == 0)\r\n        update_loop_animation\r\n        @_loop_animation_index += 1\r\n        @_loop_animation_index %= @_loop_animation.frame_max\r\n      end\r\n      if @_blink\r\n        @_blink_count = (@_blink_count + 1) % 32\r\n        if @_blink_count < 16\r\n          alpha = (16 - @_blink_count) * 6\r\n        else\r\n          alpha = (@_blink_count - 16) * 6\r\n        end\r\n        self.color.set(255, 255, 255, alpha)\r\n      end\r\n      @@_animations.clear\r\n    end\r\n    def update_animation\r\n      if @_animation_duration > 0\r\n        frame_index = @_animation.frame_max - @_animation_duration\r\n        cell_data = @_animation.frames[frame_index].cell_data\r\n        position = @_animation.position\r\n        animation_set_sprites(@_animation_sprites, cell_data, position)\r\n        for timing in @_animation.timings\r\n          if timing.frame == frame_index\r\n            animation_process_timing(timing, @_animation_hit)\r\n          end\r\n        end\r\n      else\r\n        dispose_animation\r\n      end\r\n    end\r\n    def update_loop_animation\r\n      frame_index = @_loop_animation_index\r\n      cell_data = @_loop_animation.frames[frame_index].cell_data\r\n      position = @_loop_animation.position\r\n      animation_set_sprites(@_loop_animation_sprites, cell_data, position)\r\n      for timing in @_loop_animation.timings\r\n        if timing.frame == frame_index\r\n          animation_process_timing(timing, true)\r\n        end\r\n      end\r\n    end\r\n    def animation_set_sprites(sprites, cell_data, position)\r\n      for i in 0..15\r\n        sprite = sprites[i]\r\n        pattern = cell_data[i, 0]\r\n        if sprite == nil or pattern == nil or pattern == -1\r\n          sprite.visible = false if sprite != nil\r\n          next\r\n        end\r\n        sprite.visible = true\r\n        sprite.src_rect.set(pattern % 5 * 192, pattern / 5 * 192, 192, 192)\r\n        if position == 3\r\n          if self.viewport != nil\r\n            sprite.x = self.viewport.rect.width / 2\r\n            sprite.y = self.viewport.rect.height - 160\r\n          else\r\n            sprite.x = 320\r\n            sprite.y = 240\r\n          end\r\n        else\r\n          sprite.x = self.x - self.ox + self.src_rect.width / 2\r\n          sprite.y = self.y - self.oy + self.src_rect.height / 2\r\n          sprite.y -= self.src_rect.height / 4 if position == 0\r\n          sprite.y += self.src_rect.height / 4 if position == 2\r\n        end\r\n        sprite.x += cell_data[i, 1]\r\n        sprite.y += cell_data[i, 2]\r\n        sprite.z = 2000\r\n        sprite.ox = 96\r\n        sprite.oy = 96\r\n        sprite.zoom_x = cell_data[i, 3] / 100.0\r\n        sprite.zoom_y = cell_data[i, 3] / 100.0\r\n        sprite.angle = cell_data[i, 4]\r\n        sprite.mirror = (cell_data[i, 5] == 1)\r\n        sprite.opacity = cell_data[i, 6] * self.opacity / 255.0\r\n        sprite.blend_type = cell_data[i, 7]\r\n      end\r\n    end\r\n    def animation_process_timing(timing, hit)\r\n      if (timing.condition == 0) or\r\n         (timing.condition == 1 and hit == true) or\r\n         (timing.condition == 2 and hit == false)\r\n        if timing.se.name != \"\"\r\n          se = timing.se\r\n          Audio.se_play(\"Audio/SE/\" + se.name, se.volume, se.pitch)\r\n        end\r\n        case timing.flash_scope\r\n        when 1\r\n          self.flash(timing.flash_color, timing.flash_duration * 2)\r\n        when 2\r\n          if self.viewport != nil\r\n            self.viewport.flash(timing.flash_color, timing.flash_duration * 2)\r\n          end\r\n        when 3\r\n          self.flash(nil, timing.flash_duration * 2)\r\n        end\r\n      end\r\n    end\r\n    def x=(x)\r\n      sx = x - self.x\r\n      if sx != 0\r\n        if @_animation_sprites != nil\r\n          for i in 0..15\r\n            @_animation_sprites[i].x += sx\r\n          end\r\n        end\r\n        if @_loop_animation_sprites != nil\r\n          for i in 0..15\r\n            @_loop_animation_sprites[i].x += sx\r\n          end\r\n        end\r\n      end\r\n      super\r\n    end\r\n    def y=(y)\r\n      sy = y - self.y\r\n      if sy != 0\r\n        if @_animation_sprites != nil\r\n          for i in 0..15\r\n            @_animation_sprites[i].y += sy\r\n          end\r\n        end\r\n        if @_loop_animation_sprites != nil\r\n          for i in 0..15\r\n            @_loop_animation_sprites[i].y += sy\r\n          end\r\n        end\r\n      end\r\n      super\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::State\r\n#-------------------------------------------------------------------------------------\r\n  class State\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :animation_id\r\n    attr_accessor :restriction\r\n    attr_accessor :nonresistance\r\n    attr_accessor :zero_hp\r\n    attr_accessor :cant_get_exp\r\n    attr_accessor :cant_evade\r\n    attr_accessor :slip_damage\r\n    attr_accessor :rating\r\n    attr_accessor :hit_rate\r\n    attr_accessor :maxhp_rate\r\n    attr_accessor :maxsp_rate\r\n    attr_accessor :str_rate\r\n    attr_accessor :dex_rate\r\n    attr_accessor :agi_rate\r\n    attr_accessor :int_rate\r\n    attr_accessor :atk_rate\r\n    attr_accessor :pdef_rate\r\n    attr_accessor :mdef_rate\r\n    attr_accessor :eva\r\n    attr_accessor :battle_only\r\n    attr_accessor :hold_turn\r\n    attr_accessor :auto_release_prob\r\n    attr_accessor :shock_release_prob\r\n    attr_accessor :guard_element_set\r\n    attr_accessor :plus_state_set\r\n    attr_accessor :minus_state_set\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @animation_id = 0\r\n      @restriction = 0\r\n      @nonresistance = false\r\n      @zero_hp = false\r\n      @cant_get_exp = false\r\n      @cant_evade = false\r\n      @slip_damage = false\r\n      @rating = 5\r\n      @hit_rate = 100\r\n      @maxhp_rate = 100\r\n      @maxsp_rate = 100\r\n      @str_rate = 100\r\n      @dex_rate = 100\r\n      @agi_rate = 100\r\n      @int_rate = 100\r\n      @atk_rate = 100\r\n      @pdef_rate = 100\r\n      @mdef_rate = 100\r\n      @eva = 0\r\n      @battle_only = true\r\n      @hold_turn = 0\r\n      @auto_release_prob = 0\r\n      @shock_release_prob = 0\r\n      @guard_element_set = []\r\n      @plus_state_set = []\r\n      @minus_state_set = []\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::System\r\n#-------------------------------------------------------------------------------------\r\n  class System\r\n    attr_accessor :magic_number\r\n    attr_accessor :party_members\r\n    attr_accessor :elements\r\n    attr_accessor :switches\r\n    attr_accessor :variables\r\n    attr_accessor :windowskin_name\r\n    attr_accessor :title_name\r\n    attr_accessor :gameover_name\r\n    attr_accessor :battle_transition\r\n    attr_accessor :title_bgm\r\n    attr_accessor :battle_bgm\r\n    attr_accessor :battle_end_me\r\n    attr_accessor :gameover_me\r\n    attr_accessor :cursor_se\r\n    attr_accessor :decision_se\r\n    attr_accessor :cancel_se\r\n    attr_accessor :buzzer_se\r\n    attr_accessor :equip_se\r\n    attr_accessor :shop_se\r\n    attr_accessor :save_se\r\n    attr_accessor :load_se\r\n    attr_accessor :battle_start_se\r\n    attr_accessor :escape_se\r\n    attr_accessor :actor_collapse_se\r\n    attr_accessor :enemy_collapse_se\r\n    attr_accessor :words\r\n    attr_accessor :test_battlers\r\n    attr_accessor :test_troop_id\r\n    attr_accessor :start_map_id\r\n    attr_accessor :start_x\r\n    attr_accessor :start_y\r\n    attr_accessor :battleback_name\r\n    attr_accessor :battler_name\r\n    attr_accessor :battler_hue\r\n    attr_accessor :edit_map_id\r\n    def initialize\r\n      @magic_number = 0\r\n      @party_members = [1]\r\n      @elements = [nil, \"\"]\r\n      @switches = [nil, \"\"]\r\n      @variables = [nil, \"\"]\r\n      @windowskin_name = \"\"\r\n      @title_name = \"\"\r\n      @gameover_name = \"\"\r\n      @battle_transition = \"\"\r\n      @title_bgm = RPG::AudioFile.new\r\n      @battle_bgm = RPG::AudioFile.new\r\n      @battle_end_me = RPG::AudioFile.new\r\n      @gameover_me = RPG::AudioFile.new\r\n      @cursor_se = RPG::AudioFile.new(\"\", 80)\r\n      @decision_se = RPG::AudioFile.new(\"\", 80)\r\n      @cancel_se = RPG::AudioFile.new(\"\", 80)\r\n      @buzzer_se = RPG::AudioFile.new(\"\", 80)\r\n      @equip_se = RPG::AudioFile.new(\"\", 80)\r\n      @shop_se = RPG::AudioFile.new(\"\", 80)\r\n      @save_se = RPG::AudioFile.new(\"\", 80)\r\n      @load_se = RPG::AudioFile.new(\"\", 80)\r\n      @battle_start_se = RPG::AudioFile.new(\"\", 80)\r\n      @escape_se = RPG::AudioFile.new(\"\", 80)\r\n      @actor_collapse_se = RPG::AudioFile.new(\"\", 80)\r\n      @enemy_collapse_se = RPG::AudioFile.new(\"\", 80)\r\n      @words = RPG::System::Words.new\r\n      @test_battlers = []\r\n      @test_troop_id = 1\r\n      @start_map_id = 1\r\n      @start_x = 0\r\n      @start_y = 0\r\n      @battleback_name = \"\"\r\n      @battler_name = \"\"\r\n      @battler_hue = 0\r\n      @edit_map_id = 1\r\n    end \r\n#-------------------------------------------------------------------------------------\r\n# RPG::System::TestBattler\r\n#-------------------------------------------------------------------------------------\r\n    class TestBattler\r\n      attr_accessor :actor_id\r\n      attr_accessor :level\r\n      attr_accessor :weapon_id\r\n      attr_accessor :armor1_id\r\n      attr_accessor :armor2_id\r\n      attr_accessor :armor3_id\r\n      attr_accessor :armor4_id\r\n      def initialize\r\n        @actor_id = 1\r\n        @level = 1\r\n        @weapon_id = 0\r\n        @armor1_id = 0\r\n        @armor2_id = 0\r\n        @armor3_id = 0\r\n        @armor4_id = 0\r\n      end\r\n    end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::System::Words\r\n#-------------------------------------------------------------------------------------\r\n    class Words\r\n      attr_accessor :gold\r\n      attr_accessor :hp\r\n      attr_accessor :sp\r\n      attr_accessor :str\r\n      attr_accessor :dex\r\n      attr_accessor :agi\r\n      attr_accessor :int\r\n      attr_accessor :atk\r\n      attr_accessor :pdef\r\n      attr_accessor :mdef\r\n      attr_accessor :weapon\r\n      attr_accessor :armor1\r\n      attr_accessor :armor2\r\n      attr_accessor :armor3\r\n      attr_accessor :armor4\r\n      attr_accessor :attack\r\n      attr_accessor :skill\r\n      attr_accessor :guard\r\n      attr_accessor :item\r\n      attr_accessor :equip\r\n      def initialize\r\n        @gold = \"\"\r\n        @hp = \"\"\r\n        @sp = \"\"\r\n        @str = \"\"\r\n        @dex = \"\"\r\n        @agi = \"\"\r\n        @int = \"\"\r\n        @atk = \"\"\r\n        @pdef = \"\"\r\n        @mdef = \"\"\r\n        @weapon = \"\"\r\n        @armor1 = \"\"\r\n        @armor2 = \"\"\r\n        @armor3 = \"\"\r\n        @armor4 = \"\"\r\n        @attack = \"\"\r\n        @skill = \"\"\r\n        @guard = \"\"\r\n        @item = \"\"\r\n        @equip = \"\"\r\n      end\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Tileset\r\n#-------------------------------------------------------------------------------------\r\n  class Tileset\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :tileset_name\r\n    attr_accessor :autotile_names\r\n    attr_accessor :panorama_name\r\n    attr_accessor :panorama_hue\r\n    attr_accessor :fog_name\r\n    attr_accessor :fog_hue\r\n    attr_accessor :fog_opacity\r\n    attr_accessor :fog_blend_type\r\n    attr_accessor :fog_zoom\r\n    attr_accessor :fog_sx\r\n    attr_accessor :fog_sy\r\n    attr_accessor :battleback_name\r\n    attr_accessor :passages\r\n    attr_accessor :priorities\r\n    attr_accessor :terrain_tags\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @tileset_name = \"\"\r\n      @autotile_names = [\"\"]*7\r\n      @panorama_name = \"\"\r\n      @panorama_hue = 0\r\n      @fog_name = \"\"\r\n      @fog_hue = 0\r\n      @fog_opacity = 64\r\n      @fog_blend_type = 0\r\n      @fog_zoom = 200\r\n      @fog_sx = 0\r\n      @fog_sy = 0\r\n      @battleback_name = \"\"\r\n      @passages = Table.new(384)\r\n      @priorities = Table.new(384)\r\n      @priorities[0] = 5\r\n      @terrain_tags = Table.new(384)\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Troop\r\n#-------------------------------------------------------------------------------------\r\n  class Troop\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :members\r\n    attr_accessor :pages\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @members = []\r\n      @pages = [RPG::Troop::Page.new]\r\n    end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Troop::Member\r\n#-------------------------------------------------------------------------------------\r\n    class Member\r\n      attr_accessor :enemy_id\r\n      attr_accessor :x\r\n      attr_accessor :y\r\n      attr_accessor :hidden\r\n      attr_accessor :immortal\r\n      def initialize\r\n        @enemy_id = 1\r\n        @x = 0\r\n        @y = 0\r\n        @hidden = false\r\n        @immortal = false\r\n      end\r\n    end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Troop::Page\r\n#-------------------------------------------------------------------------------------\r\n    class Page\r\n      attr_accessor :condition\r\n      attr_accessor :span\r\n      attr_accessor :list\r\n      def initialize\r\n        @condition = RPG::Troop::Page::Condition.new\r\n        @span = 0\r\n        @list = [RPG::EventCommand.new]\r\n      end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Troop::Condition\r\n#-------------------------------------------------------------------------------------\r\n      class Condition\r\n        attr_accessor :turn_valid\r\n        attr_accessor :enemy_valid\r\n        attr_accessor :actor_valid\r\n        attr_accessor :switch_valid\r\n        attr_accessor :turn_a\r\n        attr_accessor :turn_b\r\n        attr_accessor :enemy_index\r\n        attr_accessor :enemy_hp\r\n        attr_accessor :actor_id\r\n        attr_accessor :actor_hp\r\n        attr_accessor :switch_id\r\n        def initialize\r\n          @turn_valid = false\r\n          @enemy_valid = false\r\n          @actor_valid = false\r\n          @switch_valid = false\r\n          @turn_a = 0\r\n          @turn_b = 0\r\n          @enemy_index = 0\r\n          @enemy_hp = 50\r\n          @actor_id = 1\r\n          @actor_hp = 50\r\n          @switch_id = 1\r\n        end\r\n      end\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Weapon\r\n#-------------------------------------------------------------------------------------\r\n  class Weapon\r\n    attr_accessor :id\r\n    attr_accessor :name\r\n    attr_accessor :icon_name\r\n    attr_accessor :description\r\n    attr_accessor :animation1_id\r\n    attr_accessor :animation2_id\r\n    attr_accessor :price\r\n    attr_accessor :atk\r\n    attr_accessor :pdef\r\n    attr_accessor :mdef\r\n    attr_accessor :str_plus\r\n    attr_accessor :dex_plus\r\n    attr_accessor :agi_plus\r\n    attr_accessor :int_plus\r\n    attr_accessor :element_set\r\n    attr_accessor :plus_state_set\r\n    attr_accessor :minus_state_set\r\n    def initialize\r\n      @id = 0\r\n      @name = \"\"\r\n      @icon_name = \"\"\r\n      @description = \"\"\r\n      @animation1_id = 0\r\n      @animation2_id = 0\r\n      @price = 0\r\n      @atk = 0\r\n      @pdef = 0\r\n      @mdef = 0\r\n      @str_plus = 0\r\n      @dex_plus = 0\r\n      @agi_plus = 0\r\n      @int_plus = 0\r\n      @element_set = []\r\n      @plus_state_set = []\r\n      @minus_state_set = []\r\n    end\r\n  end\r\n#-------------------------------------------------------------------------------------\r\n# RPG::Weather\r\n#-------------------------------------------------------------------------------------\r\n  class Weather\r\n    def initialize(viewport = nil)\r\n      @type = 0\r\n      @max = 0\r\n      @ox = 0\r\n      @oy = 0\r\n      color1 = Color.new(255, 255, 255, 255)\r\n      color2 = Color.new(255, 255, 255, 128)\r\n      @rain_bitmap = Bitmap.new(7, 56)\r\n      for i in 0..6\r\n        @rain_bitmap.fill_rect(6-i, i*8, 1, 8, color1)\r\n      end\r\n      @storm_bitmap = Bitmap.new(34, 64)\r\n      for i in 0..31\r\n        @storm_bitmap.fill_rect(33-i, i*2, 1, 2, color2)\r\n        @storm_bitmap.fill_rect(32-i, i*2, 1, 2, color1)\r\n        @storm_bitmap.fill_rect(31-i, i*2, 1, 2, color2)\r\n      end\r\n      @snow_bitmap = Bitmap.new(6, 6)\r\n      @snow_bitmap.fill_rect(0, 1, 6, 4, color2)\r\n      @snow_bitmap.fill_rect(1, 0, 4, 6, color2)\r\n      @snow_bitmap.fill_rect(1, 2, 4, 2, color1)\r\n      @snow_bitmap.fill_rect(2, 1, 2, 4, color1)\r\n      @sprites = []\r\n      for i in 1..40\r\n        sprite = Sprite.new(viewport)\r\n        sprite.z = 1000\r\n        sprite.visible = false\r\n        sprite.opacity = 0\r\n        @sprites.push(sprite)\r\n      end\r\n    end\r\n    def dispose\r\n      for sprite in @sprites\r\n        sprite.dispose\r\n      end\r\n      @rain_bitmap.dispose\r\n      @storm_bitmap.dispose\r\n      @snow_bitmap.dispose\r\n    end\r\n    def type=(type)\r\n      return if @type == type\r\n      @type = type\r\n      case @type\r\n      when 1\r\n        bitmap = @rain_bitmap\r\n      when 2\r\n        bitmap = @storm_bitmap\r\n      when 3\r\n        bitmap = @snow_bitmap\r\n      else\r\n        bitmap = nil\r\n      end\r\n      for i in 1..40\r\n        sprite = @sprites[i]\r\n        if sprite != nil\r\n          sprite.visible = (i <= @max)\r\n          sprite.bitmap = bitmap\r\n        end\r\n      end\r\n    end\r\n    def ox=(ox)\r\n      return if @ox == ox;\r\n      @ox = ox\r\n      for sprite in @sprites\r\n        sprite.ox = @ox\r\n      end\r\n    end\r\n    def oy=(oy)\r\n      return if @oy == oy;\r\n      @oy = oy\r\n      for sprite in @sprites\r\n        sprite.oy = @oy\r\n      end\r\n    end\r\n    def max=(max)\r\n      return if @max == max;\r\n      @max = [[max, 0].max, 40].min\r\n      for i in 1..40\r\n        sprite = @sprites[i]\r\n        if sprite != nil\r\n          sprite.visible = (i <= @max)\r\n        end\r\n      end\r\n    end\r\n    def update\r\n      return if @type == 0\r\n      for i in 1..@max\r\n        sprite = @sprites[i]\r\n        if sprite == nil\r\n          break\r\n        end\r\n        if @type == 1\r\n          sprite.x -= 2\r\n          sprite.y += 16\r\n          sprite.opacity -= 8\r\n        end\r\n        if @type == 2\r\n          sprite.x -= 8\r\n          sprite.y += 16\r\n          sprite.opacity -= 12\r\n        end\r\n        if @type == 3\r\n          sprite.x -= 2\r\n          sprite.y += 8\r\n          sprite.opacity -= 8\r\n        end\r\n        x = sprite.x - @ox\r\n        y = sprite.y - @oy\r\n        if sprite.opacity < 64 or x < -50 or x > 750 or y < -300 or y > 500\r\n          sprite.x = rand(800) - 50 + @ox\r\n          sprite.y = rand(800) - 200 + @oy\r\n          sprite.opacity = 255\r\n        end\r\n      end\r\n    end\r\n    attr_reader :type\r\n    attr_reader :max\r\n    attr_reader :ox\r\n    attr_reader :oy\r\n  end\r\nend\r\n"]
           ]
end